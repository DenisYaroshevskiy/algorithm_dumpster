fast.out:
(__TEXT,__text) section
__ZN9benchmark8internal17InitializeStreamsEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movb	__ZGVZN9benchmark8internal17InitializeStreamsEvE4init(%rip), %al ## guard variable for benchmark::internal::InitializeStreams()::init
	testb	%al, %al
	jne	0x1000017e2
	leaq	__ZGVZN9benchmark8internal17InitializeStreamsEvE4init(%rip), %rdi ## guard variable for benchmark::internal::InitializeStreams()::init
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x1000017e2
	leaq	__ZZN9benchmark8internal17InitializeStreamsEvE4init(%rip), %rdi ## benchmark::internal::InitializeStreams()::init
	callq	0x10002970a ## symbol stub for: __ZNSt3__18ios_base4InitC1Ev
	movq	186581(%rip), %rdi ## literal pool symbol address: __ZNSt3__18ios_base4InitD1Ev
	leaq	__ZZN9benchmark8internal17InitializeStreamsEvE4init(%rip), %rsi ## benchmark::internal::InitializeStreams()::init
	leaq	__mh_execute_header(%rip), %rdx
	callq	0x100029758 ## symbol stub for: ___cxa_atexit
	leaq	__ZGVZN9benchmark8internal17InitializeStreamsEvE4init(%rip), %rdi ## guard variable for benchmark::internal::InitializeStreams()::init
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	xorl	%eax, %eax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	movq	%rax, %rbx
	leaq	__ZGVZN9benchmark8internal17InitializeStreamsEvE4init(%rip), %rdi ## guard variable for benchmark::internal::InitializeStreams()::init
	callq	0x100029770 ## symbol stub for: ___cxa_guard_abort
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark8internal14UseCharPointerEPVKc:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZN9benchmark5StateC2EmRKNSt3__16vectorIxNS1_9allocatorIxEEEEiiPNS_8internal11ThreadTimerEPNS8_13ThreadManagerE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%r9, -64(%rbp)
	movl	%r8d, -52(%rbp)
	movl	%ecx, %r13d
	movq	%rdx, %r14
	movq	%rdi, %rbx
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	movq	%rsi, 16(%rbx)
	movw	$0, 24(%rbx)
	movb	$0, 26(%rbx)
	leaq	32(%rbx), %rax
	movq	%rax, -48(%rbp)
	movq	$0, 48(%rbx)
	movq	$0, 40(%rbx)
	movq	$0, 32(%rbx)
	movq	8(%r14), %rdi
	subq	(%r14), %rdi
	movq	%rdi, %r12
	sarq	$3, %r12
	je	0x1000018d5
	movq	%r12, %rax
	shrq	$61, %rax
	jne	0x1000019d2
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r15
	movq	%r15, 40(%rbx)
	movq	%r15, 32(%rbx)
	leaq	(%r15,%r12,8), %rax
	movq	%rax, 48(%rbx)
	movq	(%r14), %rsi
	movq	8(%r14), %r14
	subq	%rsi, %r14
	testq	%r14, %r14
	jle	0x1000018d5
	movq	%r15, %rdi
	movq	%r14, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	addq	%r14, %r15
	movq	%r15, 40(%rbx)
	movq	16(%rbp), %rax
	leaq	88(%rbx), %r14
	movq	$0, 96(%rbx)
	movq	$0, 88(%rbx)
	movq	$0, 72(%rbx)
	movq	$0, 64(%rbx)
	movq	$0, 56(%rbx)
	movq	%r14, 80(%rbx)
	movl	%r13d, 104(%rbx)
	movl	-52(%rbp), %ecx
	movl	%ecx, 108(%rbx)
	movq	-64(%rbp), %rcx
	movq	%rcx, 112(%rbx)
	movq	%rax, 120(%rbx)
	movq	186106(%rip), %r12 ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%r12), %al
	testb	%al, %al
	jne	0x100001958
	movq	186091(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100001958
	movq	186571(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	186061(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	leaq	80(%rbx), %r15
	movq	186541(%rip), %r13 ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	(%r13), %rdi
	testq	%rdi, %rdi
	je	0x10000197d
	leaq	180361(%rip), %rsi ## literal pool for: "At least one iteration must be run"
	movl	$34, %edx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movb	(%r12), %al
	testb	%al, %al
	jne	0x1000019a9
	movq	186004(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x1000019a9
	movq	$0, (%r13)
	movq	185980(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	(%r13), %rdi
	testq	%rdi, %rdi
	je	0x1000019c3
	leaq	180326(%rip), %rsi ## literal pool for: "thread_index must be less than threads"
	movl	$38, %edx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	-48(%rbp), %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r12
	jmp	0x1000019ee
	movq	%rax, %r12
	movq	(%r14), %rsi
	movq	%r15, %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	-48(%rbp), %rax
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	0x100001a03
	movq	%rdi, 40(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r12, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax,%rax)
__ZN9benchmark5StateC1EmRKNSt3__16vectorIxNS1_9allocatorIxEEEEiiPNS_8internal11ThreadTimerEPNS8_13ThreadManagerE:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark5StateC2EmRKNSt3__16vectorIxNS1_9allocatorIxEEEEiiPNS_8internal11ThreadTimerEPNS8_13ThreadManagerE ## benchmark::State::State(unsigned long, std::__1::vector<long long, std::__1::allocator<long long> > const&, int, int, benchmark::internal::ThreadTimer*, benchmark::internal::ThreadManager*)
	nopw	(%rax,%rax)
__ZN9benchmark5State11PauseTimingEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rdi, %rbx
	movq	185839(%rip), %r14 ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%r14), %al
	testb	%al, %al
	jne	0x100001a62
	movq	185825(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100001a62
	movq	186305(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	185795(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	112(%rbx), %rbx
	movb	(%r14), %al
	testb	%al, %al
	jne	0x100001a97
	movq	185772(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100001a97
	movq	186252(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	185742(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	$0, (%rbx)
	callq	0x1000296ce ## symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
	cvtsi2sdq	%rax, %xmm0
	divsd	164580(%rip), %xmm0
	subsd	8(%rbx), %xmm0
	addsd	24(%rbx), %xmm0
	movsd	%xmm0, 24(%rbx)
	callq	__ZN9benchmark14ThreadCPUUsageEv ## benchmark::ThreadCPUUsage()
	subsd	16(%rbx), %xmm0
	xorpd	%xmm1, %xmm1
	maxsd	%xmm0, %xmm1
	addsd	32(%rbx), %xmm1
	movsd	%xmm1, 32(%rbx)
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	nopl	(%rax)
__ZN9benchmark5State12ResumeTimingEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	185648(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x100001b20
	movq	185635(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100001b20
	movq	186115(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	185605(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	112(%rbx), %rbx
	movb	$1, (%rbx)
	callq	0x1000296ce ## symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
	cvtsi2sdq	%rax, %xmm0
	divsd	164439(%rip), %xmm0
	movsd	%xmm0, 8(%rbx)
	callq	__ZN9benchmark14ThreadCPUUsageEv ## benchmark::ThreadCPUUsage()
	movsd	%xmm0, 16(%rbx)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nop
__ZN9benchmark5State13SkipWithErrorEPKc:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rsi, %r14
	movq	%rdi, %r15
	movq	185528(%rip), %r12 ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%r12), %al
	testb	%al, %al
	jne	0x100001b9a
	movq	185513(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100001b9a
	movq	185993(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	185483(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	$1, 26(%r15)
	movl	$136, %ebx
	addq	120(%r15), %rbx
	movq	%rbx, %rdi
	callq	0x1000296b6 ## symbol stub for: __ZNSt3__15mutex4lockEv
	movq	120(%r15), %rdi
	cmpb	$0, 104(%rdi)
	jne	0x100001bce
	addq	$80, %rdi
	movq	%r14, %rsi
	callq	0x1000295de ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
	movq	120(%r15), %rax
	movb	$1, 104(%rax)
	movq	%rbx, %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	movq	$0, (%r15)
	movq	112(%r15), %rbx
	cmpb	$0, (%rbx)
	je	0x100001c58
	movb	(%r12), %al
	testb	%al, %al
	jne	0x100001c18
	movq	185387(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100001c18
	movq	185867(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	185357(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	$0, (%rbx)
	callq	0x1000296ce ## symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
	cvtsi2sdq	%rax, %xmm0
	divsd	164195(%rip), %xmm0
	subsd	8(%rbx), %xmm0
	addsd	24(%rbx), %xmm0
	movsd	%xmm0, 24(%rbx)
	callq	__ZN9benchmark14ThreadCPUUsageEv ## benchmark::ThreadCPUUsage()
	subsd	16(%rbx), %xmm0
	xorpd	%xmm1, %xmm1
	maxsd	%xmm0, %xmm1
	addsd	32(%rbx), %xmm1
	movsd	%xmm1, 32(%rbx)
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark5State16SetIterationTimeEd:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112(%rdi), %rax
	addsd	40(%rax), %xmm0
	movsd	%xmm0, 40(%rax)
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZN9benchmark5State8SetLabelEPKc:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r14
	movq	%rdi, %r15
	movq	120(%r15), %rbx
	addq	$136, %rbx
	movq	%rbx, %rdi
	callq	0x1000296b6 ## symbol stub for: __ZNSt3__15mutex4lockEv
	movq	120(%r15), %rdi
	addq	$56, %rdi
	movq	%r14, %rsi
	callq	0x1000295de ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax,%rax)
__ZN9benchmark5State16StartKeepRunningEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rdi, %rbx
	movq	185103(%rip), %r14 ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%r14), %al
	testb	%al, %al
	jne	0x100001d42
	movq	185089(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100001d42
	movq	185569(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	185059(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	$1, 24(%rbx)
	cmpb	$0, 26(%rbx)
	je	0x100001d50
	xorl	%eax, %eax
	jmp	0x100001d54
	movq	16(%rbx), %rax
	movq	%rax, (%rbx)
	movl	$208, %edi
	addq	120(%rbx), %rdi
	callq	__ZN9benchmark7Barrier4waitEv ## benchmark::Barrier::wait()
	cmpb	$0, 26(%rbx)
	jne	0x100001dc4
	movb	(%r14), %al
	testb	%al, %al
	jne	0x100001d9c
	movq	184999(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100001d9c
	movq	185479(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	184969(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	112(%rbx), %rbx
	movb	$1, (%rbx)
	callq	0x1000296ce ## symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
	cvtsi2sdq	%rax, %xmm0
	divsd	163803(%rip), %xmm0
	movsd	%xmm0, 8(%rbx)
	callq	__ZN9benchmark14ThreadCPUUsageEv ## benchmark::ThreadCPUUsage()
	movsd	%xmm0, 16(%rbx)
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	nopl	(%rax)
__ZN9benchmark5State17FinishKeepRunningEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	184896(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x100001e10
	movq	184883(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100001e10
	movq	185363(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	184853(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	cmpb	$0, 26(%rbx)
	jne	0x100001e1e
	movq	%rbx, %rdi
	callq	__ZN9benchmark5State11PauseTimingEv ## benchmark::State::PauseTiming()
	movq	$0, (%rbx)
	movb	$1, 25(%rbx)
	movl	$208, %edi
	addq	120(%rbx), %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	__ZN9benchmark7Barrier4waitEv ## benchmark::Barrier::wait()
	nopl	(%rax)
__ZN9benchmark8internal6IsZeroEd:
	pushq	%rbp
	movq	%rsp, %rbp
	andps	163733(%rip), %xmm0
	movsd	163653(%rip), %xmm1
	ucomisd	%xmm0, %xmm1
	seta	%al
	popq	%rbp
	retq
	nopl	(%rax)
__ZN9benchmark8internal16GetOutputOptionsEb:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movl	%edi, %r14d
	movzbl	_FLAGS_benchmark_color(%rip), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	193431(%rip), %rcx
	cmpq	$4, %rcx
	jne	0x100001ebb
	leaq	_FLAGS_benchmark_color(%rip), %rdi
	leaq	179042(%rip), %rcx ## literal pool for: "auto"
	xorl	%esi, %esi
	movq	$-1, %rdx
	movl	$4, %r8d
	callq	0x100029596 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
	testl	%eax, %eax
	jne	0x100001ebb
	movl	$3, %ebx
	callq	__ZN9benchmark15IsColorTerminalEv ## benchmark::IsColorTerminal()
	testb	%al, %al
	jne	0x100001ecd
	leaq	_FLAGS_benchmark_color(%rip), %rdi
	callq	__ZN9benchmark17IsTruthyFlagValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE ## benchmark::IsTruthyFlagValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	movzbl	%al, %ebx
	orl	$2, %ebx
	testb	%r14b, %r14b
	movl	$2, %ecx
	cmovel	%ebx, %ecx
	movl	%ecx, %eax
	andl	$1, %eax
	cmpb	$0, 193348(%rip)
	cmovnel	%ecx, %eax
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	movq	%rax, %rdi
	callq	___clang_call_terminate
	nopw	%cs:(%rax,%rax)
__ZN9benchmark22RunSpecifiedBenchmarksEv:
	pushq	%rbp
	movq	%rsp, %rbp
	xorl	%edi, %edi
	xorl	%esi, %esi
	popq	%rbp
	jmp	__ZN9benchmark22RunSpecifiedBenchmarksEPNS_17BenchmarkReporterES1_ ## benchmark::RunSpecifiedBenchmarks(benchmark::BenchmarkReporter*, benchmark::BenchmarkReporter*)
	nop
__ZN9benchmark22RunSpecifiedBenchmarksEPNS_17BenchmarkReporterES1_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$1288, %rsp
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	185087(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	movq	%rax, -48(%rbp)
	leaq	_FLAGS_benchmark_filter(%rip), %rsi
	leaq	-832(%rbp), %rdi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	movzbl	-832(%rbp), %ecx
	movq	%rcx, %rax
	shrq	%rax
	testb	$1, %cl
	cmovneq	-824(%rbp), %rax
	testq	%rax, %rax
	je	0x100001f94
	cmpq	$3, %rax
	jne	0x100001fa7
	leaq	178897(%rip), %rcx ## literal pool for: "all"
	leaq	-832(%rbp), %rdi
	xorl	%esi, %esi
	movq	$-1, %rdx
	movl	$3, %r8d
	callq	0x100029596 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
	testl	%eax, %eax
	jne	0x100001fa7
	leaq	178765(%rip), %rsi ## literal pool for: "."
	leaq	-832(%rbp), %rdi
	callq	0x1000295de ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
	leaq	-200(%rbp), %r13
	leaq	-608(%rbp), %r15
	movq	184564(%rip), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, -616(%rbp)
	addq	$64, %rax
	movq	%rax, -200(%rbp)
	movq	%r13, %rdi
	movq	%r15, %rsi
	callq	0x100029710 ## symbol stub for: __ZNSt3__18ios_base4initEPv
	movq	$0, -64(%rbp)
	movl	$4294967295, -56(%rbp)
	movq	184685(%rip), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, -712(%rbp)
	movq	%rcx, -616(%rbp)
	addq	$64, %rax
	movq	%rax, -720(%rbp)
	movq	%rax, -200(%rbp)
	movq	%r15, %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::basic_filebuf()
	testq	%r14, %r14
	je	0x10000202b
	xorl	%eax, %eax
	jmp	0x1000020ba
	movzbl	_FLAGS_benchmark_color(%rip), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	192982(%rip), %rcx
	cmpq	$4, %rcx
	jne	0x10000207c
	leaq	_FLAGS_benchmark_color(%rip), %rdi
	leaq	178593(%rip), %rcx ## literal pool for: "auto"
	xorl	%esi, %esi
	movq	$-1, %rdx
	movl	$4, %r8d
	callq	0x100029596 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
	testl	%eax, %eax
	jne	0x10000207c
	callq	__ZN9benchmark15IsColorTerminalEv ## benchmark::IsColorTerminal()
	movl	$3, %ecx
	testb	%al, %al
	jne	0x10000208e
	leaq	_FLAGS_benchmark_color(%rip), %rdi
	callq	__ZN9benchmark17IsTruthyFlagValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE ## benchmark::IsTruthyFlagValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	movzbl	%al, %ecx
	orl	$2, %ecx
	movl	%ecx, %edx
	andl	$1, %edx
	cmpb	$0, 192910(%rip)
	cmovnel	%ecx, %edx
	leaq	_FLAGS_benchmark_format(%rip), %rsi
	leaq	-1232(%rbp), %rdi
	callq	__ZN9benchmark8internal12_GLOBAL__N_114CreateReporterERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_15ConsoleReporter13OutputOptionsE ## benchmark::internal::(anonymous namespace)::CreateReporter(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, benchmark::ConsoleReporter::OutputOptions)
	movq	-1232(%rbp), %r14
	movq	%r14, %rax
	movq	%rax, -1024(%rbp)
	movq	8(%r14), %r12
	movq	16(%r14), %r15
	movzbl	_FLAGS_benchmark_out(%rip), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	192800(%rip), %rcx
	testq	%rbx, %rbx
	je	0x1000020ee
	testq	%rcx, %rcx
	je	0x100003aa0
	testq	%rcx, %rcx
	je	0x100002139
	cmpq	$0, -488(%rbp)
	je	0x10000214e
	movq	-616(%rbp), %rax
	movq	-24(%rax), %rax
	leaq	-616(%rbp,%rax), %rdi
	movl	-584(%rbp,%rax), %esi
	orl	$4, %esi
	callq	0x100029716 ## symbol stub for: __ZNSt3__18ios_base5clearEj
	cmpq	$0, -488(%rbp)
	je	0x100003b1b
	testq	%rbx, %rbx
	je	0x10000219c
	xorl	%eax, %eax
	jmp	0x1000021bb
	movq	%rbx, -696(%rbp)
	xorl	%eax, %eax
	movq	%rax, -808(%rbp)
	jmp	0x1000021d8
	testb	$1, %al
	leaq	192674(%rip), %rdi
	cmovneq	192681(%rip), %rdi
	leaq	179525(%rip), %rsi ## literal pool for: "w"
	callq	0x1000297c4 ## symbol stub for: _fopen
	movq	%rax, -488(%rbp)
	testq	%rax, %rax
	je	0x1000020fd
	movl	$16, -216(%rbp)
	movq	-616(%rbp), %rax
	leaq	-616(%rbp), %rdi
	addq	-24(%rax), %rdi
	xorl	%esi, %esi
	callq	0x100029716 ## symbol stub for: __ZNSt3__18ios_base5clearEj
	jmp	0x10000211f
	leaq	_FLAGS_benchmark_out_format(%rip), %rsi
	leaq	-1232(%rbp), %rdi
	xorl	%edx, %edx
	callq	__ZN9benchmark8internal12_GLOBAL__N_114CreateReporterERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_15ConsoleReporter13OutputOptionsE ## benchmark::internal::(anonymous namespace)::CreateReporter(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, benchmark::ConsoleReporter::OutputOptions)
	movq	-1232(%rbp), %rbx
	movq	%rbx, %rax
	movq	%rax, -808(%rbp)
	leaq	-616(%rbp), %rax
	movq	%rax, 8(%rbx)
	movq	%rbx, -696(%rbp)
	movq	%rax, 16(%rbx)
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -752(%rbp)
	movq	$0, -736(%rbp)
	leaq	-832(%rbp), %rdi
	leaq	-752(%rbp), %rsi
	movq	%r15, %rdx
	callq	__ZN9benchmark8internal22FindBenchmarksInternalERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS0_9Benchmark8InstanceENS5_ISC_EEEEPNS1_13basic_ostreamIcS4_EE ## benchmark::internal::FindBenchmarksInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<benchmark::internal::Benchmark::Instance, std::__1::allocator<benchmark::internal::Benchmark::Instance> >*, std::__1::basic_ostream<char, std::__1::char_traits<char> >*)
	testb	%al, %al
	je	0x1000022eb
	movq	-752(%rbp), %rax
	movq	-744(%rbp), %r13
	cmpq	%r13, %rax
	je	0x10000228b
	cmpb	$0, 192377(%rip)
	je	0x100002417
	leaq	178348(%rip), %r14 ## literal pool for: "\n"
	leaq	-608(%rbp), %r15
	nopl	(%rax,%rax)
	movzbl	(%rax), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	leaq	1(%rax), %rbx
	andb	$1, %cl
	movq	16(%rax), %rsi
	cmoveq	%rbx, %rsi
	testb	%cl, %cl
	cmovneq	8(%rax), %rdx
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movl	$1, %edx
	movq	%rax, %rdi
	movq	%r14, %rsi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	addq	$151, %rbx
	cmpq	%r13, %rbx
	movq	%rbx, %rax
	jne	0x100002240
	jmp	0x100003a63
	leaq	178207(%rip), %rsi ## literal pool for: "Failed to match any benchmarks against regex: "
	movl	$46, %edx
	movq	%r15, %rdi
	leaq	-200(%rbp), %r13
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-832(%rbp), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	leaq	-831(%rbp), %rsi
	cmovneq	-816(%rbp), %rsi
	testb	%cl, %cl
	cmovneq	-824(%rbp), %rdx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	178178(%rip), %rsi ## literal pool for: "\n"
	movl	$1, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	-752(%rbp), %r15
	xorl	%r14d, %r14d
	testq	%r15, %r15
	je	0x10000236b
	movq	-744(%rbp), %rbx
	cmpq	%r15, %rbx
	je	0x10000235c
	nopw	%cs:(%rax,%rax)
	leaq	-64(%rbx), %rdi
	movq	-56(%rbx), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	-112(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000232f
	movq	%rdi, -104(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-152(%rbx), %r12
	testb	$1, -152(%rbx)
	je	0x10000234b
	movq	-136(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%r12, %r15
	movq	%r12, %rbx
	jne	0x100002310
	movq	-752(%rbp), %rdi
	jmp	0x10000235f
	movq	%r15, %rdi
	movq	%r15, -744(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-808(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000237d
	movq	(%rdi), %rax
	callq	*32(%rax)
	movq	-1024(%rbp), %rdi
	testq	%rdi, %rdi
	leaq	-608(%rbp), %rbx
	je	0x100002396
	movq	(%rdi), %rax
	callq	*32(%rax)
	movq	-712(%rbp), %rax
	movq	%rax, -616(%rbp)
	movq	-720(%rbp), %rax
	movq	%rax, -200(%rbp)
	movq	%rbx, %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	movq	183599(%rip), %rsi
	addq	$8, %rsi
	leaq	-616(%rbp), %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	movq	%r13, %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	testb	$1, -832(%rbp)
	je	0x1000023ee
	movq	-816(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	183867(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	cmpq	-48(%rbp), %rax
	jne	0x100003a9b
	movq	%r14, %rax
	addq	$1288, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	183298(%rip), %r13 ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%r13), %al
	testb	%al, %al
	jne	0x100002450
	movq	183283(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100002450
	movq	183763(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	183253(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	cmpl	$1, 185585(%rip)
	setg	%r12b
	movq	-752(%rbp), %rax
	movq	-744(%rbp), %r8
	cmpq	%r8, %rax
	je	0x100002548
	xorl	%ebx, %ebx
	movl	$10, %r15d
	nopw	(%rax,%rax)
	movzbl	(%rax), %ecx
	testb	$1, %cl
	jne	0x100002490
	shrq	%rcx
	jmp	0x100002494
	nopl	(%rax)
	movq	8(%rax), %rcx
	cmpq	%rcx, %r15
	cmovbq	%rcx, %r15
	cmpl	$1, 124(%rax)
	setg	%r9b
	movq	112(%rax), %rcx
	movq	(%rcx), %rsi
	movq	8(%rcx), %rdi
	cmpq	%rdi, %rsi
	je	0x100002534
	leaq	-32(%rdi), %rdx
	subq	%rsi, %rdx
	movq	%rdx, %rcx
	shrq	$5, %rcx
	btl	$5, %edx
	jb	0x1000024e7
	movzbl	(%rsi), %edx
	testb	$1, %dl
	jne	0x1000024d8
	shrq	%rdx
	jmp	0x1000024dc
	movq	8(%rsi), %rdx
	cmpq	%rdx, %rbx
	cmovbq	%rdx, %rbx
	addq	$32, %rsi
	testq	%rcx, %rcx
	je	0x100002534
	nopl	(%rax)
	movzbl	(%rsi), %ecx
	testb	$1, %cl
	jne	0x100002500
	shrq	%rcx
	jmp	0x100002504
	nopl	(%rax)
	movq	8(%rsi), %rcx
	cmpq	%rcx, %rbx
	cmovbq	%rcx, %rbx
	movzbl	32(%rsi), %ecx
	testb	$1, %cl
	jne	0x100002520
	shrq	%rcx
	jmp	0x100002524
	nopl	(%rax)
	movq	40(%rsi), %rcx
	cmpq	%rcx, %rbx
	cmovbq	%rcx, %rbx
	addq	$64, %rsi
	cmpq	%rdi, %rsi
	jne	0x1000024f0
	orb	%r9b, %r12b
	addq	$152, %rax
	cmpq	%r8, %rax
	jne	0x100002480
	jmp	0x100002550
	movl	$10, %r15d
	xorl	%ebx, %ebx
	leaq	-1304(%rbp), %rdi
	callq	__ZN9benchmark17BenchmarkReporter7ContextC1Ev ## benchmark::BenchmarkReporter::Context::Context()
	incq	%rbx
	xorl	%eax, %eax
	testb	$1, %r12b
	cmovneq	%rbx, %rax
	addq	%r15, %rax
	movq	%rax, -1296(%rbp)
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -1008(%rbp)
	movq	$0, -992(%rbp)
	movq	(%r14), %rax
	leaq	-1304(%rbp), %rsi
	movq	%r14, %rdi
	leaq	-608(%rbp), %r15
	callq	*(%rax)
	movq	-696(%rbp), %rbx
	testb	%al, %al
	je	0x100003a17
	testq	%rbx, %rbx
	je	0x1000025cb
	movq	(%rbx), %rax
	leaq	-1304(%rbp), %rsi
	movq	%rbx, %rdi
	callq	*(%rax)
	testb	%al, %al
	je	0x100003a17
	movq	8(%r14), %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	movq	16(%r14), %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	testq	%rbx, %rbx
	je	0x1000025f4
	movq	8(%rbx), %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	movq	16(%rbx), %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	movq	-752(%rbp), %rax
	movq	-744(%rbp), %rcx
	movq	%rax, -624(%rbp)
	cmpq	%rcx, %rax
	je	0x100003a17
	xorpd	%xmm0, %xmm0
	movq	%rcx, -1288(%rbp)
	movapd	%xmm0, -800(%rbp)
	movq	$0, -784(%rbp)
	movq	-624(%rbp), %rcx
	movq	136(%rcx), %r12
	testq	%r12, %r12
	movl	$1, %eax
	cmovneq	%r12, %rax
	movq	%rax, -760(%rbp)
	movslq	144(%rcx), %rax
	leaq	-1(%rax), %r15
	movapd	%xmm0, -688(%rbp)
	movq	$0, -672(%rbp)
	testl	%r15d, %r15d
	je	0x1000026b7
	testl	%eax, %eax
	jle	0x100003bcc
	leaq	(,%r15,8), %rbx
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, -688(%rbp)
	leaq	(%rax,%r15,8), %r15
	movq	%r15, -672(%rbp)
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	0x10002974c ## symbol stub for: ___bzero
	movq	%r15, -680(%rbp)
	movq	-696(%rbp), %rbx
	movq	-624(%rbp), %rax
	movl	124(%rax), %ecx
	testl	%ecx, %ecx
	cmovel	_FLAGS_benchmark_repetitions(%rip), %ecx
	xorl	%edx, %edx
	movl	%ecx, -764(%rbp)
	cmpl	$1, %ecx
	movl	$0, -700(%rbp)
	leaq	-608(%rbp), %r15
	je	0x10000271f
	movl	32(%rax), %ecx
	cmpb	$0, 191182(%rip)
	setne	%al
	movl	%eax, -700(%rbp)
	cmpl	$2, %ecx
	sete	%al
	testl	%ecx, %ecx
	je	0x10000270b
	movl	%eax, -700(%rbp)
	cmpl	$0, -764(%rbp)
	movq	-624(%rbp), %rax
	jle	0x10000375a
	incq	%rax
	movq	%rax, -1248(%rbp)
	movq	%r12, -1240(%rbp)
	testq	%r12, %r12
	setne	%al
	testl	%edx, %edx
	setne	%cl
	orb	%al, %cl
	movb	%cl, -625(%rbp)
	movl	%edx, -1028(%rbp)
	movq	182992(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal8LogLevelEvE9log_level
	cmpl	$2, (%rax)
	jge	0x100002e71
	jmp	0x100002e39
	movq	-904(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	182959(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal8LogLevelEvE9log_level
	cmpl	$2, (%rax)
	jge	0x100002e71
	jmp	0x100002e39
	leaq	136(%r15), %rbx
	leaq	-856(%rbp), %rax
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -896(%rbp)
	movapd	%xmm0, -912(%rbp)
	movapd	%xmm0, -928(%rbp)
	movapd	%xmm0, -944(%rbp)
	movapd	%xmm0, -960(%rbp)
	movapd	%xmm0, -976(%rbp)
	movb	$0, -872(%rbp)
	movq	$0, -880(%rbp)
	movq	%rax, -864(%rbp)
	movq	%rbx, %rdi
	callq	0x1000296b6 ## symbol stub for: __ZNSt3__15mutex4lockEv
	movq	48(%r15), %rax
	movq	%rax, -928(%rbp)
	movq	40(%r15), %rax
	movq	%rax, -936(%rbp)
	movq	32(%r15), %rax
	movq	%rax, -944(%rbp)
	movq	24(%r15), %rax
	movq	%rax, -952(%rbp)
	movq	16(%r15), %rax
	movq	%rax, -960(%rbp)
	movq	(%r15), %rax
	movq	8(%r15), %rcx
	movq	%rcx, -968(%rbp)
	movq	%rax, -976(%rbp)
	leaq	56(%r15), %rsi
	leaq	-920(%rbp), %rdi
	movq	%rsi, -1280(%rbp)
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	leaq	80(%r15), %r13
	leaq	-896(%rbp), %rdi
	movq	%r13, %rsi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	movb	104(%r15), %al
	movb	%al, -872(%rbp)
	movq	112(%r15), %rsi
	leaq	-864(%rbp), %rdi
	movq	-656(%rbp), %rdx
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE14__assign_multiINS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEEEEvT_SO_ ## void std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::__assign_multi<std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long> >(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long>, std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long>)
	leaq	112(%r15), %rax
	movq	%rax, -1272(%rbp)
	leaq	208(%r15), %rax
	movq	%rax, -1264(%rbp)
	leaq	272(%r15), %rax
	movq	%rax, -1256(%rbp)
	movq	%rbx, %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	movq	%r12, %rdi
	callq	0x100029692 ## symbol stub for: __ZNSt3__118condition_variableD1Ev
	movq	-1016(%rbp), %rdi
	callq	0x1000296c2 ## symbol stub for: __ZNSt3__15mutexD1Ev
	movq	-1256(%rbp), %rdi
	callq	0x100029692 ## symbol stub for: __ZNSt3__118condition_variableD1Ev
	movq	-1264(%rbp), %rdi
	callq	0x1000296c2 ## symbol stub for: __ZNSt3__15mutexD1Ev
	movq	%rbx, %rdi
	callq	0x1000296c2 ## symbol stub for: __ZNSt3__15mutexD1Ev
	movq	-656(%rbp), %rax
	movq	(%rax), %rsi
	movq	-1272(%rbp), %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, (%r13)
	je	0x100002911
	movq	96(%r15), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-1280(%rbp), %rax
	testb	$1, (%rax)
	movq	-1240(%rbp), %r12
	movq	182007(%rip), %r13 ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	je	0x100002934
	movq	72(%r15), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-624(%rbp), %rax
	cvtsi2sdl	144(%rax), %xmm0
	movsd	-968(%rbp), %xmm1
	movsd	-952(%rbp), %xmm2
	divsd	%xmm0, %xmm1
	movsd	%xmm1, -968(%rbp)
	divsd	%xmm0, %xmm2
	movsd	%xmm2, -952(%rbp)
	movq	182438(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal8LogLevelEvE9log_level
	cmpl	$2, (%rax)
	jge	0x1000029be
	movb	(%r13), %al
	testb	%al, %al
	movq	182404(%rip), %rbx ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	leaq	-608(%rbp), %r15
	jne	0x100002a10
	movq	%r13, %rdi
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	movq	182378(%rip), %rbx ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	je	0x100002a10
	movq	182369(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	%rax, %rbx
	movq	$0, (%rbx)
	movq	%r13, %rdi
	jmp	0x100002a0b
	movq	181859(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal19GetErrorLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	movq	182344(%rip), %rbx ## literal pool symbol address: __ZZN9benchmark8internal19GetErrorLogInstanceEvE3log
	leaq	-608(%rbp), %r15
	jne	0x100002a10
	movq	181832(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal19GetErrorLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	movq	182314(%rip), %rbx ## literal pool symbol address: __ZZN9benchmark8internal19GetErrorLogInstanceEvE3log
	je	0x100002a10
	movq	182305(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal19GetErrorLogInstanceEvE3log
	movq	%rax, %rbx
	movq	181863(%rip), %rax ## literal pool symbol address: __ZNSt3__14clogE
	movq	%rax, (%rbx)
	movq	181789(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal19GetErrorLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002ad5
	movl	$7, %edx
	leaq	177141(%rip), %rsi ## literal pool for: "-- LOG("
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002ad5
	movl	$2, %esi
	callq	0x100029650 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002ad5
	movl	$3, %edx
	leaq	177098(%rip), %rsi ## literal pool for: "): "
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002ad5
	movl	$7, %edx
	leaq	177092(%rip), %rsi ## literal pool for: "Ran in "
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002ad5
	movsd	-960(%rbp), %xmm0
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002ad5
	movl	$1, %edx
	leaq	177054(%rip), %rsi ## literal pool for: "/"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002ad5
	movsd	-968(%rbp), %xmm0
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002ad5
	movl	$1, %edx
	leaq	176144(%rip), %rsi ## literal pool for: "\n"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	-624(%rbp), %rax
	movb	73(%rax), %al
	testb	%al, %al
	leaq	-952(%rbp), %rcx
	jne	0x100002b05
	movq	-624(%rbp), %rcx
	cmpb	$0, 72(%rcx)
	leaq	-968(%rbp), %rcx
	leaq	-960(%rbp), %rdx
	je	0x100002b08
	movq	%rcx, %rdx
	movq	(%rdx), %rcx
	cmpb	$0, -625(%rbp)
	movq	-696(%rbp), %rbx
	jne	0x1000033a0
	movq	-624(%rbp), %rdx
	movsd	128(%rdx), %xmm1
	movapd	%xmm1, %xmm0
	andpd	160422(%rip), %xmm0
	movsd	_FLAGS_benchmark_min_time(%rip), %xmm2
	cmpltsd	160333(%rip), %xmm0
	andpd	%xmm0, %xmm2
	andnpd	%xmm1, %xmm0
	orpd	%xmm2, %xmm0
	movq	%rcx, %xmm3
	ucomisd	%xmm0, %xmm3
	jae	0x100003396
	movb	-872(%rbp), %cl
	testb	%cl, %cl
	jne	0x100003396
	movq	-760(%rbp), %rcx
	cmpq	$999999999, %rcx
	ja	0x100003396
	testb	%al, %al
	jne	0x100002baa
	movsd	-968(%rbp), %xmm1
	movapd	%xmm0, %xmm2
	mulsd	160256(%rip), %xmm2
	ucomisd	%xmm2, %xmm1
	jae	0x100003396
	movapd	%xmm0, %xmm1
	mulsd	160242(%rip), %xmm1
	movsd	160242(%rip), %xmm2
	maxsd	%xmm3, %xmm2
	divsd	%xmm2, %xmm1
	divsd	%xmm0, %xmm3
	ucomisd	160230(%rip), %xmm3
	ja	0x100002be6
	movsd	160228(%rip), %xmm0
	ucomisd	%xmm1, %xmm0
	movapd	%xmm0, %xmm2
	jbe	0x100002c04
	movsd	160218(%rip), %xmm0
	ucomisd	%xmm1, %xmm0
	movapd	%xmm1, %xmm2
	jb	0x100002c04
	movsd	160208(%rip), %xmm0
	movapd	%xmm0, %xmm2
	movq	%rcx, %xmm1
	punpckldq	160223(%rip), %xmm1
	subpd	160231(%rip), %xmm1
	haddpd	%xmm1, %xmm1
	movapd	%xmm2, %xmm0
	mulsd	%xmm1, %xmm0
	addsd	160155(%rip), %xmm1
	maxsd	%xmm0, %xmm1
	movq	181736(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal8LogLevelEvE9log_level
	cmpl	$3, (%rax)
	movsd	%xmm2, -1016(%rbp)
	jge	0x100002c91
	movb	(%r13), %al
	testb	%al, %al
	movq	181694(%rip), %rbx ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	jne	0x100002cf4
	movq	%r13, %rdi
	movapd	%xmm1, -656(%rbp)
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	movapd	-656(%rbp), %xmm1
	testl	%eax, %eax
	movq	181655(%rip), %rbx ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	je	0x100002cf4
	movq	181646(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	%rax, %rbx
	movq	$0, (%rbx)
	movq	%r13, %rdi
	jmp	0x100002ce7
	movq	181136(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal19GetErrorLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	movq	181621(%rip), %rbx ## literal pool symbol address: __ZZN9benchmark8internal19GetErrorLogInstanceEvE3log
	jne	0x100002cf4
	movq	181116(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal19GetErrorLogInstanceEvE3log
	movapd	%xmm1, -656(%rbp)
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	movapd	-656(%rbp), %xmm1
	testl	%eax, %eax
	movq	181582(%rip), %rbx ## literal pool symbol address: __ZZN9benchmark8internal19GetErrorLogInstanceEvE3log
	je	0x100002cf4
	movq	181573(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal19GetErrorLogInstanceEvE3log
	movq	%rax, %rbx
	movq	181131(%rip), %rax ## literal pool symbol address: __ZNSt3__14clogE
	movq	%rax, (%rbx)
	movq	181057(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal19GetErrorLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movapd	-656(%rbp), %xmm1
	movsd	159892(%rip), %xmm0
	minsd	%xmm1, %xmm0
	movsd	%xmm0, -656(%rbp)
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002dcd
	movl	$7, %edx
	leaq	176381(%rip), %rsi ## literal pool for: "-- LOG("
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002dcd
	movl	$3, %esi
	callq	0x100029650 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002dcd
	movl	$3, %edx
	leaq	176338(%rip), %rsi ## literal pool for: "): "
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002dcd
	movl	$12, %edx
	leaq	176342(%rip), %rsi ## literal pool for: "Next iters: "
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002dcd
	movsd	-656(%rbp), %xmm0
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002dcd
	movl	$2, %edx
	leaq	176309(%rip), %rsi ## literal pool for: ", "
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002dcd
	movsd	-1016(%rbp), %xmm0
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002dcd
	movl	$1, %edx
	leaq	175384(%rip), %rsi ## literal pool for: "\n"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movsd	-656(%rbp), %xmm0
	addsd	159739(%rip), %xmm0
	cvttsd2si	%xmm0, %eax
	cltq
	movq	%rax, -760(%rbp)
	movq	-856(%rbp), %rsi
	leaq	-864(%rbp), %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -896(%rbp)
	jne	0x100002e14
	testb	$1, -920(%rbp)
	je	0x100002e2d
	jmp	0x10000275e
	movq	-880(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -920(%rbp)
	jne	0x10000275e
	movq	181228(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal8LogLevelEvE9log_level
	cmpl	$2, (%rax)
	jge	0x100002e71
	movb	(%r13), %al
	testb	%al, %al
	movq	181194(%rip), %rbx ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	jne	0x100002ebc
	movq	%r13, %rdi
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	movq	181175(%rip), %rbx ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	je	0x100002ebc
	movq	181166(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	%rax, %rbx
	movq	$0, (%rbx)
	movq	%r13, %rdi
	jmp	0x100002eb7
	movq	180656(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal19GetErrorLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	movq	181141(%rip), %rbx ## literal pool symbol address: __ZZN9benchmark8internal19GetErrorLogInstanceEvE3log
	jne	0x100002ebc
	movq	180636(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal19GetErrorLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	movq	181118(%rip), %rbx ## literal pool symbol address: __ZZN9benchmark8internal19GetErrorLogInstanceEvE3log
	je	0x100002ebc
	movq	181109(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal19GetErrorLogInstanceEvE3log
	movq	%rax, %rbx
	movq	180667(%rip), %rax ## literal pool symbol address: __ZNSt3__14clogE
	movq	%rax, (%rbx)
	movq	180593(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal19GetErrorLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002fa4
	xorl	%r12d, %r12d
	movl	$7, %edx
	leaq	175942(%rip), %rsi ## literal pool for: "-- LOG("
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002fa4
	movl	$2, %esi
	callq	0x100029650 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002fa4
	movl	$3, %edx
	leaq	175899(%rip), %rsi ## literal pool for: "): "
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002fa4
	movl	$8, %edx
	leaq	175874(%rip), %rsi ## literal pool for: "Running "
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002fa4
	movq	-624(%rbp), %rcx
	movzbl	(%rcx), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	8(%rcx), %rdx
	testb	%al, %al
	movq	16(%rcx), %rsi
	cmoveq	-1248(%rbp), %rsi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002fa4
	movl	$5, %edx
	leaq	175808(%rip), %rsi ## literal pool for: " for "
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002fa4
	movq	-760(%rbp), %rsi
	callq	0x100029656 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100002fa4
	movl	$1, %edx
	leaq	174913(%rip), %rsi ## literal pool for: "\n"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	xorl	%r12d, %r12d
	movl	$448, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r15
	movq	-624(%rbp), %rax
	movl	144(%rax), %eax
	leaq	120(%r15), %rcx
	movq	$0, 128(%r15)
	movq	$0, 120(%r15)
	movb	$0, 104(%r15)
	movq	$0, 96(%r15)
	movq	$0, 88(%r15)
	movq	$0, 80(%r15)
	movq	$0, 72(%r15)
	movq	$0, 64(%r15)
	movq	$0, 56(%r15)
	movq	$0, 48(%r15)
	movq	$0, 40(%r15)
	movq	$0, 32(%r15)
	movq	$0, 24(%r15)
	movq	$0, 16(%r15)
	movq	$0, 8(%r15)
	movq	$0, (%r15)
	movq	%rcx, -656(%rbp)
	movq	%rcx, 112(%r15)
	movq	$850045863, 136(%r15)
	movq	$0, 192(%r15)
	movq	$0, 184(%r15)
	movq	$0, 176(%r15)
	movq	$0, 168(%r15)
	movq	$0, 160(%r15)
	movq	$0, 152(%r15)
	movq	$0, 144(%r15)
	movl	%eax, 200(%r15)
	movq	$850045863, 208(%r15)
	movq	$0, 264(%r15)
	movq	$0, 256(%r15)
	movq	$0, 248(%r15)
	movq	$0, 240(%r15)
	movq	$0, 232(%r15)
	movq	$0, 224(%r15)
	movq	$0, 216(%r15)
	movq	$1018212795, 272(%r15)
	movq	$0, 312(%r15)
	movq	$0, 304(%r15)
	movq	$0, 296(%r15)
	movq	$0, 288(%r15)
	movq	$0, 280(%r15)
	movl	%eax, 320(%r15)
	movl	$0, 324(%r15)
	movl	$0, 328(%r15)
	movq	$850045863, 336(%r15)
	movq	$0, 392(%r15)
	movq	$0, 384(%r15)
	movq	$0, 376(%r15)
	movq	$0, 368(%r15)
	movq	$0, 360(%r15)
	movq	$0, 352(%r15)
	movq	$0, 344(%r15)
	movq	$1018212795, 400(%r15)
	movq	$0, 440(%r15)
	movq	$0, 432(%r15)
	movq	$0, 424(%r15)
	movq	$0, 416(%r15)
	movq	$0, 408(%r15)
	movq	-680(%rbp), %rax
	cmpq	-688(%rbp), %rax
	leaq	-1232(%rbp), %r13
	je	0x1000032ce
	xorl	%ebx, %ebx
	nopl	(%rax)
	leaq	__ZN9benchmark8internal12_GLOBAL__N_111RunInThreadEPKNS0_9Benchmark8InstanceEmiPNS0_13ThreadManagerE(%rip), %rax ## benchmark::internal::(anonymous namespace)::RunInThread(benchmark::internal::Benchmark::Instance const*, unsigned long, int, benchmark::internal::ThreadManager*)
	movq	%rax, -976(%rbp)
	movq	-624(%rbp), %rax
	movq	%rax, -1320(%rbp)
	leaq	1(%rbx), %r12
	movl	%r12d, -1032(%rbp)
	movq	%r15, -1312(%rbp)
	movq	%r13, %rdi
	leaq	-976(%rbp), %rsi
	leaq	-1320(%rbp), %rdx
	leaq	-760(%rbp), %rcx
	leaq	-1032(%rbp), %r8
	leaq	-1312(%rbp), %r9
	callq	__ZNSt3__16threadC2IPFvPKN9benchmark8internal9Benchmark8InstanceEmiPNS3_13ThreadManagerEEJS7_RmiS9_EvEEOT_DpOT0_ ## std::__1::thread::thread<void (*)(benchmark::internal::Benchmark::Instance const*, unsigned long, int, benchmark::internal::ThreadManager*), benchmark::internal::Benchmark::Instance const*, unsigned long&, int, benchmark::internal::ThreadManager*, void>(void (*&&)(benchmark::internal::Benchmark::Instance const*, unsigned long, int, benchmark::internal::ThreadManager*), benchmark::internal::Benchmark::Instance const*&&, unsigned long&, int&&, benchmark::internal::ThreadManager*&&)
	movq	-688(%rbp), %rax
	cmpq	$0, (%rax,%rbx,8)
	jne	0x100003bc7
	movq	-1232(%rbp), %rcx
	movq	%rcx, (%rax,%rbx,8)
	movq	$0, -1232(%rbp)
	leaq	-1232(%rbp), %r13
	movq	%r13, %rdi
	callq	0x1000296fe ## symbol stub for: __ZNSt3__16threadD1Ev
	movq	-680(%rbp), %rax
	subq	-688(%rbp), %rax
	sarq	$3, %rax
	cmpq	%rax, %r12
	movq	%r12, %rbx
	jb	0x100003220
	movq	%r15, %r12
	movq	-760(%rbp), %rsi
	xorl	%edx, %edx
	movq	-624(%rbp), %rdi
	movq	%r15, %rcx
	callq	__ZN9benchmark8internal12_GLOBAL__N_111RunInThreadEPKNS0_9Benchmark8InstanceEmiPNS0_13ThreadManagerE ## benchmark::internal::(anonymous namespace)::RunInThread(benchmark::internal::Benchmark::Instance const*, unsigned long, int, benchmark::internal::ThreadManager*)
	leaq	336(%r15), %rbx
	movq	%r15, %r12
	movq	%rbx, -1232(%rbp)
	movb	$1, -1224(%rbp)
	movq	%rbx, %rdi
	callq	0x1000296b6 ## symbol stub for: __ZNSt3__15mutex4lockEv
	movq	%rbx, -1016(%rbp)
	leaq	400(%r15), %r12
	movl	200(%r15), %eax
	testl	%eax, %eax
	leaq	-1232(%rbp), %rbx
	je	0x100003346
	nopl	(%rax)
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	0x10002968c ## symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
	movl	200(%r15), %eax
	testl	%eax, %eax
	jne	0x100003330
	cmpb	$0, -1224(%rbp)
	je	0x10000335b
	movq	-1232(%rbp), %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	movq	-688(%rbp), %rbx
	movq	-680(%rbp), %r13
	cmpq	%r13, %rbx
	je	0x10000277f
	nopw	%cs:(%rax,%rax)
	movq	%rbx, %rdi
	callq	0x1000296f8 ## symbol stub for: __ZNSt3__16thread4joinEv
	addq	$8, %rbx
	cmpq	%rbx, %r13
	jne	0x100003380
	jmp	0x10000277f
	movsd	%xmm3, -656(%rbp)
	jmp	0x1000033ad
	movq	%rcx, %xmm0
	movq	%xmm0, -656(%rbp)
	leaq	-1176(%rbp), %rax
	movq	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, -1200(%rbp)
	movdqa	%xmm0, -1216(%rbp)
	movdqa	%xmm0, -1232(%rbp)
	movb	$0, -1184(%rbp)
	movq	$1, -1152(%rbp)
	movl	$0, -1144(%rbp)
	movw	$0, -1064(%rbp)
	leaq	-1048(%rbp), %rcx
	movq	$0, (%rcx)
	movq	$0, 8(%rcx)
	movl	$0, 80(%rax)
	movq	$0, 72(%rax)
	movq	$0, 64(%rax)
	movq	$0, 56(%rax)
	movq	$0, 48(%rax)
	movq	$0, 40(%rax)
	movq	$0, 96(%rax)
	movq	$0, 88(%rax)
	movq	%rcx, -1056(%rbp)
	leaq	-1232(%rbp), %rdi
	movq	-624(%rbp), %rsi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	movb	-872(%rbp), %al
	movb	%al, -1184(%rbp)
	leaq	-1176(%rbp), %rdi
	leaq	-896(%rbp), %rsi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	leaq	-1208(%rbp), %rdi
	leaq	-920(%rbp), %rsi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	movq	-976(%rbp), %rax
	movq	%rax, -1152(%rbp)
	movq	-624(%rbp), %rax
	movl	64(%rax), %eax
	movl	%eax, -1144(%rbp)
	cmpb	$0, -1184(%rbp)
	movsd	-656(%rbp), %xmm2
	jne	0x1000035fe
	pxor	%xmm0, %xmm0
	ucomisd	%xmm0, %xmm2
	xorpd	%xmm1, %xmm1
	jbe	0x10000350a
	movq	-944(%rbp), %rax
	testq	%rax, %rax
	xorpd	%xmm1, %xmm1
	jle	0x10000350a
	xorps	%xmm1, %xmm1
	cvtsi2sdq	%rax, %xmm1
	divsd	%xmm2, %xmm1
	ucomisd	%xmm0, %xmm2
	jbe	0x100003531
	movq	-936(%rbp), %rax
	testq	%rax, %rax
	leaq	-1056(%rbp), %rdx
	jle	0x100003538
	xorps	%xmm0, %xmm0
	cvtsi2sdq	%rax, %xmm0
	divsd	%xmm2, %xmm0
	jmp	0x100003538
	leaq	-1056(%rbp), %rdx
	movq	-624(%rbp), %r12
	cmpb	$0, 73(%r12)
	leaq	-952(%rbp), %rax
	leaq	-968(%rbp), %rcx
	cmoveq	%rcx, %rax
	movq	(%rax), %rax
	movq	%rax, -1136(%rbp)
	movq	-960(%rbp), %rax
	movq	-928(%rbp), %rcx
	movq	%rax, -1128(%rbp)
	movsd	%xmm1, -1120(%rbp)
	movq	%xmm0, -1112(%rbp)
	movq	%rcx, -1080(%rbp)
	movl	76(%r12), %eax
	movl	%eax, -1096(%rbp)
	movq	80(%r12), %rax
	movq	%rax, -1088(%rbp)
	movq	112(%r12), %rax
	movq	%rax, -1072(%rbp)
	movq	-864(%rbp), %rsi
	movq	%rdx, %rdi
	leaq	-856(%rbp), %rdx
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE14__assign_multiINS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEEEEvT_SO_ ## void std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::__assign_multi<std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long> >(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long>, std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long>)
	movq	-976(%rbp), %rsi
	xorps	%xmm1, %xmm1
	cvtsi2sdl	144(%r12), %xmm1
	leaq	-1056(%rbp), %rdi
	movq	-656(%rbp), %xmm0
	callq	__ZN9benchmark8internal6FinishEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_7CounterENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEExdd ## benchmark::internal::Finish(std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, benchmark::Counter> > >*, long long, double, double)
	cmpb	$0, -1184(%rbp)
	movq	-1240(%rbp), %r12
	je	0x100003627
	movq	-792(%rbp), %rdi
	cmpq	-784(%rbp), %rdi
	je	0x10000366f
	leaq	-1232(%rbp), %rsi
	callq	__ZN9benchmark17BenchmarkReporter3RunC2ERKS1_ ## benchmark::BenchmarkReporter::Run::Run(benchmark::BenchmarkReporter::Run const&)
	addq	$200, -792(%rbp)
	jmp	0x100003682
	movq	-624(%rbp), %rax
	cmpl	$0, 76(%rax)
	je	0x1000035fe
	movq	-1000(%rbp), %rdi
	cmpq	-992(%rbp), %rdi
	je	0x100003742
	leaq	-1232(%rbp), %rsi
	callq	__ZN9benchmark17BenchmarkReporter3RunC2ERKS1_ ## benchmark::BenchmarkReporter::Run::Run(benchmark::BenchmarkReporter::Run const&)
	addq	$200, -1000(%rbp)
	movq	-792(%rbp), %rdi
	cmpq	-784(%rbp), %rdi
	jne	0x10000360e
	leaq	-800(%rbp), %rdi
	leaq	-1232(%rbp), %rsi
	callq	__ZNSt3__16vectorIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ ## void std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::__push_back_slow_path<benchmark::BenchmarkReporter::Run const&>(benchmark::BenchmarkReporter::Run const&)
	movq	-1048(%rbp), %rsi
	leaq	-1056(%rbp), %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -1176(%rbp)
	jne	0x10000370f
	testb	$1, -1208(%rbp)
	jne	0x100003724
	testb	$1, -1232(%rbp)
	je	0x1000036bc
	movq	-1216(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-856(%rbp), %rsi
	leaq	-864(%rbp), %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -896(%rbp)
	je	0x1000036e4
	movq	-880(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -920(%rbp)
	je	0x1000036f9
	movq	-904(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movl	-1028(%rbp), %edx
	incl	%edx
	cmpl	-764(%rbp), %edx
	jl	0x100002730
	jmp	0x10000375a
	movq	-1160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -1208(%rbp)
	je	0x1000036a7
	movq	-1192(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -1232(%rbp)
	jne	0x1000036b0
	jmp	0x1000036bc
	leaq	-1008(%rbp), %rdi
	leaq	-1232(%rbp), %rsi
	callq	__ZNSt3__16vectorIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ ## void std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::__push_back_slow_path<benchmark::BenchmarkReporter::Run const&>(benchmark::BenchmarkReporter::Run const&)
	jmp	0x1000035fe
	leaq	-1232(%rbp), %rdi
	leaq	-800(%rbp), %rsi
	callq	__ZN9benchmark12ComputeStatsERKNSt3__16vectorINS_17BenchmarkReporter3RunENS0_9allocatorIS3_EEEE ## benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)
	movq	-624(%rbp), %rax
	cmpl	$0, 76(%rax)
	je	0x10000386b
	movq	-624(%rbp), %rax
	cmpb	$0, 120(%rax)
	je	0x10000386b
	leaq	-976(%rbp), %rdi
	leaq	-1008(%rbp), %rsi
	callq	__ZN9benchmark11ComputeBigOERKNSt3__16vectorINS_17BenchmarkReporter3RunENS0_9allocatorIS3_EEEE ## benchmark::ComputeBigO(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)
	movq	-1224(%rbp), %rsi
	movq	-976(%rbp), %rdx
	movq	-968(%rbp), %rcx
	leaq	-1232(%rbp), %rdi
	callq	__ZNSt3__16vectorIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_ ## std::__1::enable_if<(__is_forward_iterator<std::__1::__wrap_iter<benchmark::BenchmarkReporter::Run*> >::value) && (is_constructible<benchmark::BenchmarkReporter::Run, std::__1::iterator_traits<std::__1::__wrap_iter<benchmark::BenchmarkReporter::Run*> >::reference>::value), std::__1::__wrap_iter<benchmark::BenchmarkReporter::Run*> >::type std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::insert<std::__1::__wrap_iter<benchmark::BenchmarkReporter::Run*> >(std::__1::__wrap_iter<benchmark::BenchmarkReporter::Run const*>, std::__1::__wrap_iter<benchmark::BenchmarkReporter::Run*>, std::__1::__wrap_iter<benchmark::BenchmarkReporter::Run*>)
	movq	-1008(%rbp), %r15
	movq	-1000(%rbp), %rbx
	cmpq	%r15, %rbx
	je	0x100003851
	leaq	-24(%rbx), %rdi
	movq	-16(%rbx), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -144(%rbx)
	jne	0x10000380f
	testb	$1, -176(%rbx)
	jne	0x100003821
	leaq	-200(%rbx), %r12
	testb	$1, -200(%rbx)
	jne	0x10000383d
	cmpq	%r12, %r15
	movq	%r12, %rbx
	jne	0x1000037d6
	jmp	0x100003851
	movq	-128(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -176(%rbx)
	je	0x1000037f5
	movq	-160(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-200(%rbx), %r12
	testb	$1, -200(%rbx)
	je	0x100003805
	movq	-184(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%r12, %r15
	movq	%r12, %rbx
	jne	0x1000037d6
	movq	%r15, -1000(%rbp)
	leaq	-976(%rbp), %rdi
	callq	__ZNSt3__113__vector_baseIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEED2Ev ## std::__1::__vector_base<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::~__vector_base()
	movq	-696(%rbp), %rbx
	testb	$1, -700(%rbp)
	je	0x100003916
	movq	-800(%rbp), %r15
	movq	-792(%rbp), %rbx
	cmpq	%r15, %rbx
	je	0x100003906
	leaq	-24(%rbx), %rdi
	movq	-16(%rbx), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -144(%rbx)
	jne	0x1000038c4
	testb	$1, -176(%rbx)
	jne	0x1000038d6
	leaq	-200(%rbx), %r12
	testb	$1, -200(%rbx)
	jne	0x1000038f2
	cmpq	%r12, %r15
	movq	%r12, %rbx
	jne	0x10000388b
	jmp	0x100003906
	movq	-128(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -176(%rbx)
	je	0x1000038aa
	movq	-160(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-200(%rbx), %r12
	testb	$1, -200(%rbx)
	je	0x1000038ba
	movq	-184(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%r12, %r15
	movq	%r12, %rbx
	jne	0x10000388b
	movq	%r15, -792(%rbp)
	movq	-696(%rbp), %rbx
	jmp	0x10000391d
	movq	-792(%rbp), %r15
	movq	-1232(%rbp), %rdx
	movq	-1224(%rbp), %rcx
	leaq	-800(%rbp), %rdi
	movq	%r15, %rsi
	callq	__ZNSt3__16vectorIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_ ## std::__1::enable_if<(__is_forward_iterator<std::__1::__wrap_iter<benchmark::BenchmarkReporter::Run*> >::value) && (is_constructible<benchmark::BenchmarkReporter::Run, std::__1::iterator_traits<std::__1::__wrap_iter<benchmark::BenchmarkReporter::Run*> >::reference>::value), std::__1::__wrap_iter<benchmark::BenchmarkReporter::Run*> >::type std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::insert<std::__1::__wrap_iter<benchmark::BenchmarkReporter::Run*> >(std::__1::__wrap_iter<benchmark::BenchmarkReporter::Run const*>, std::__1::__wrap_iter<benchmark::BenchmarkReporter::Run*>, std::__1::__wrap_iter<benchmark::BenchmarkReporter::Run*>)
	leaq	-1232(%rbp), %rdi
	callq	__ZNSt3__113__vector_baseIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEED2Ev ## std::__1::__vector_base<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::~__vector_base()
	movq	-688(%rbp), %r15
	testq	%r15, %r15
	je	0x10000398e
	movq	-680(%rbp), %rbx
	cmpq	%r15, %rbx
	je	0x100003978
	addq	$-8, %rbx
	movq	%rbx, %rdi
	callq	0x1000296fe ## symbol stub for: __ZNSt3__16threadD1Ev
	cmpq	%rbx, %r15
	jne	0x10000395e
	movq	-688(%rbp), %rdi
	jmp	0x10000397b
	movq	%r15, %rdi
	movq	%r15, -680(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-696(%rbp), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	leaq	-800(%rbp), %rsi
	callq	*8(%rax)
	testq	%rbx, %rbx
	je	0x1000039b3
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	leaq	-800(%rbp), %rsi
	callq	*8(%rax)
	movq	8(%r14), %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	movq	16(%r14), %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	testq	%rbx, %rbx
	je	0x1000039dc
	movq	8(%rbx), %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	movq	16(%rbx), %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	leaq	-800(%rbp), %rdi
	callq	__ZNSt3__113__vector_baseIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEED2Ev ## std::__1::__vector_base<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::~__vector_base()
	movq	-624(%rbp), %rax
	addq	$152, %rax
	movq	%rax, -624(%rbp)
	movq	-1288(%rbp), %rcx
	cmpq	%rcx, %rax
	leaq	-608(%rbp), %r15
	xorpd	%xmm0, %xmm0
	jne	0x10000261d
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
	testq	%rbx, %rbx
	je	0x100003a2e
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movq	8(%r14), %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	movq	16(%r14), %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	testq	%rbx, %rbx
	je	0x100003a57
	movq	8(%rbx), %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	movq	16(%rbx), %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	leaq	-1008(%rbp), %rdi
	callq	__ZNSt3__113__vector_baseIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEED2Ev ## std::__1::__vector_base<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::~__vector_base()
	movq	-752(%rbp), %r15
	movq	-744(%rbp), %rax
	subq	%r15, %rax
	sarq	$3, %rax
	movabsq	$-8737931403336103397, %r14
	imulq	%rax, %r14
	leaq	-200(%rbp), %r13
	testq	%r15, %r15
	jne	0x1000022fa
	jmp	0x10000236b
	callq	0x1000297a0 ## symbol stub for: ___stack_chk_fail
	leaq	171939(%rip), %rsi ## literal pool for: "A custom file reporter was provided but --benchmark_out=<file> was not specified."
	movl	$81, %edx
	movq	%r15, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	movq	(%rbx), %rax
	movq	-24(%rax), %rsi
	addq	%rbx, %rsi
	leaq	-1232(%rbp), %rdi
	callq	0x1000295c0 ## symbol stub for: __ZNKSt3__18ios_base6getlocEv
	movq	177572(%rip), %rsi ## literal pool symbol address: __ZNSt3__15ctypeIcE2idE
	leaq	-1232(%rbp), %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	(%rax), %rcx
	movl	$10, %esi
	movq	%rax, %rdi
	callq	*56(%rcx)
	movl	%eax, %r14d
	leaq	-1232(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movsbl	%r14b, %esi
	movq	%rbx, %rdi
	callq	0x10002962c ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc
	movq	%rbx, %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	movl	$1, %edi
	callq	0x1000297ac ## symbol stub for: _exit
	leaq	171898(%rip), %rsi ## literal pool for: "invalid file name: '"
	movl	$20, %edx
	movq	%r15, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	_FLAGS_benchmark_out(%rip), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	leaq	186035(%rip), %rsi
	cmovneq	186042(%rip), %rsi
	testb	%cl, %cl
	cmovneq	186024(%rip), %rdx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	movq	(%rbx), %rax
	movq	-24(%rax), %rsi
	addq	%rbx, %rsi
	leaq	-1232(%rbp), %rdi
	callq	0x1000295c0 ## symbol stub for: __ZNKSt3__18ios_base6getlocEv
	movq	177400(%rip), %rsi ## literal pool symbol address: __ZNSt3__15ctypeIcE2idE
	leaq	-1232(%rbp), %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	(%rax), %rcx
	movl	$10, %esi
	movq	%rax, %rdi
	callq	*56(%rcx)
	movl	%eax, %r14d
	leaq	-1232(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movsbl	%r14b, %esi
	movq	%rbx, %rdi
	callq	0x10002962c ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc
	movq	%rbx, %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	movl	$1, %edi
	callq	0x1000297ac ## symbol stub for: _exit
	callq	0x10002972e ## symbol stub for: __ZSt9terminatev
	leaq	-688(%rbp), %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r13
	movq	-688(%rbp), %rbx
	testq	%rbx, %rbx
	je	0x100003e49
	movq	-680(%rbp), %r14
	cmpq	%rbx, %r14
	je	0x100003c11
	addq	$-8, %r14
	movq	%r14, %rdi
	callq	0x1000296fe ## symbol stub for: __ZNSt3__16threadD1Ev
	cmpq	%r14, %rbx
	jne	0x100003bf7
	movq	-688(%rbp), %rdi
	jmp	0x100003c14
	movq	%rbx, %rdi
	movq	%rbx, -680(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-608(%rbp), %r15
	jmp	0x100003fdd
	jmp	0x100003c2e
	movq	%rax, %r13
	leaq	-1232(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	leaq	-608(%rbp), %r15
	jmp	0x10000409b
	movq	%rax, %rdi
	callq	___clang_call_terminate
	jmp	0x100003c8e
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %r13
	testb	$1, -832(%rbp)
	jne	0x1000040fd
	jmp	0x100004109
	movq	%rax, %r13
	jmp	0x100003fe9
	movq	%rax, %r13
	movq	-720(%rbp), %r14
	movq	-712(%rbp), %rbx
	jmp	0x1000040bb
	movq	%rax, %r13
	leaq	-608(%rbp), %r15
	jmp	0x10000409b
	movq	%r13, %rbx
	movq	%rax, %r13
	movq	177222(%rip), %rsi
	addq	$8, %rsi
	leaq	-616(%rbp), %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	jmp	0x100003cc2
	movq	%r13, %rbx
	movq	%rax, %r13
	movq	%rbx, %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	testb	$1, -832(%rbp)
	jne	0x1000040fd
	jmp	0x100004109
	movq	%rax, %r13
	leaq	-608(%rbp), %r15
	movq	-752(%rbp), %r14
	testq	%r14, %r14
	jne	0x100004015
	jmp	0x100004089
	jmp	0x100003d95
	movq	%rax, %r13
	movq	-1048(%rbp), %rsi
	leaq	-1056(%rbp), %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -1176(%rbp)
	jne	0x100003d3d
	testb	$1, -1208(%rbp)
	jne	0x100003d52
	testb	$1, -1232(%rbp)
	jne	0x100003d67
	leaq	-608(%rbp), %r15
	jmp	0x100003e3c
	movq	-1160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -1208(%rbp)
	je	0x100003d28
	movq	-1192(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -1232(%rbp)
	je	0x100003d31
	movq	-1216(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-608(%rbp), %r15
	jmp	0x100003e3c
	movq	%rax, %r13
	leaq	-976(%rbp), %rdi
	callq	__ZNSt3__113__vector_baseIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEED2Ev ## std::__1::__vector_base<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::~__vector_base()
	jmp	0x100003e0a
	movq	%rax, %r13
	jmp	0x100003e0a
	movq	%rax, %r13
	movq	-1048(%rbp), %rsi
	leaq	-1056(%rbp), %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -1176(%rbp)
	jne	0x100003dc8
	testb	$1, -1208(%rbp)
	jne	0x100003ddd
	testb	$1, -1232(%rbp)
	jne	0x100003df2
	jmp	0x100003e3c
	movq	-1160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -1208(%rbp)
	je	0x100003dbd
	movq	-1192(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -1232(%rbp)
	je	0x100003e3c
	movq	-1216(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x100003e3c
	movq	%rax, %r13
	leaq	-608(%rbp), %r15
	leaq	-1232(%rbp), %rdi
	callq	__ZNSt3__113__vector_baseIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEED2Ev ## std::__1::__vector_base<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::~__vector_base()
	jmp	0x100003e1b
	movq	%rax, %r13
	xorl	%r12d, %r12d
	movq	-688(%rbp), %r14
	testq	%r14, %r14
	jne	0x100003f15
	jmp	0x100003f59
	jmp	0x100003e39
	jmp	0x100003e39
	jmp	0x100003e39
	movq	%rax, %r13
	xorl	%r12d, %r12d
	jmp	0x100003e90
	movq	%rax, %r13
	jmp	0x100003e86
	movq	%rax, %r13
	leaq	-608(%rbp), %r15
	jmp	0x100003fdd
	movq	%rax, %r13
	leaq	-800(%rbp), %rdi
	callq	__ZNSt3__113__vector_baseIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEED2Ev ## std::__1::__vector_base<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::~__vector_base()
	leaq	-608(%rbp), %r15
	jmp	0x100003fe9
	movq	%rax, %r13
	xorl	%r12d, %r12d
	jmp	0x100003f02
	movq	%rax, %r13
	movq	%rbx, %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	movq	%r15, %r12
	leaq	-608(%rbp), %r15
	movq	-856(%rbp), %rsi
	leaq	-864(%rbp), %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -896(%rbp)
	jne	0x100003ec6
	testb	$1, -920(%rbp)
	jne	0x100003edb
	movq	-688(%rbp), %r14
	testq	%r14, %r14
	jne	0x100003f15
	jmp	0x100003f59
	movq	-880(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -920(%rbp)
	je	0x100003eb5
	movq	-904(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-688(%rbp), %r14
	testq	%r14, %r14
	jne	0x100003f15
	jmp	0x100003f59
	movq	%rax, %r13
	jmp	0x100003f02
	jmp	0x100003efc
	movq	%rax, %r13
	movq	%r15, %r12
	leaq	-608(%rbp), %r15
	movq	-688(%rbp), %r14
	testq	%r14, %r14
	je	0x100003f59
	movq	-680(%rbp), %rbx
	cmpq	%r14, %rbx
	je	0x100003f4a
	nopw	%cs:(%rax,%rax)
	addq	$-8, %rbx
	movq	%rbx, %rdi
	callq	0x1000296fe ## symbol stub for: __ZNSt3__16threadD1Ev
	cmpq	%rbx, %r14
	jne	0x100003f30
	movq	-688(%rbp), %rdi
	jmp	0x100003f4d
	movq	%r14, %rdi
	movq	%r14, -680(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testq	%r12, %r12
	je	0x100003fdd
	leaq	400(%r12), %rdi
	callq	0x100029692 ## symbol stub for: __ZNSt3__118condition_variableD1Ev
	leaq	336(%r12), %rdi
	callq	0x1000296c2 ## symbol stub for: __ZNSt3__15mutexD1Ev
	leaq	208(%r12), %rbx
	leaq	272(%r12), %rdi
	callq	0x100029692 ## symbol stub for: __ZNSt3__118condition_variableD1Ev
	movq	%rbx, %rdi
	callq	0x1000296c2 ## symbol stub for: __ZNSt3__15mutexD1Ev
	leaq	136(%r12), %rdi
	callq	0x1000296c2 ## symbol stub for: __ZNSt3__15mutexD1Ev
	leaq	112(%r12), %rdi
	movq	120(%r12), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, 80(%r12)
	je	0x100003fc3
	movq	96(%r12), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, 56(%r12)
	je	0x100003fd5
	movq	72(%r12), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r12, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-800(%rbp), %rdi
	callq	__ZNSt3__113__vector_baseIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEED2Ev ## std::__1::__vector_base<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::~__vector_base()
	leaq	-1008(%rbp), %rdi
	callq	__ZNSt3__113__vector_baseIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEED2Ev ## std::__1::__vector_base<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::~__vector_base()
	movq	-752(%rbp), %r14
	testq	%r14, %r14
	jne	0x100004015
	jmp	0x100004089
	movq	%rax, %r13
	movq	-752(%rbp), %r14
	testq	%r14, %r14
	je	0x100004089
	movq	%r15, %r12
	movq	-744(%rbp), %rbx
	cmpq	%r14, %rbx
	je	0x100004111
	nopl	(%rax,%rax)
	leaq	-64(%rbx), %rdi
	movq	-56(%rbx), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	-112(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000404f
	movq	%rdi, -104(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-152(%rbx), %r15
	testb	$1, -152(%rbx)
	je	0x10000406b
	movq	-136(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%r15, %r14
	movq	%r15, %rbx
	jne	0x100004030
	movq	-752(%rbp), %rdi
	movq	%r14, -744(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r12, %r15
	movq	-808(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000409b
	movq	(%rdi), %rax
	callq	*32(%rax)
	movq	-720(%rbp), %r14
	movq	-712(%rbp), %rbx
	movq	-1024(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x1000040bb
	movq	(%rdi), %rax
	callq	*32(%rax)
	movq	%rbx, -616(%rbp)
	movq	%r14, -200(%rbp)
	movq	%r15, %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	movq	176152(%rip), %rsi
	addq	$8, %rsi
	leaq	-616(%rbp), %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	leaq	-200(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	testb	$1, -832(%rbp)
	je	0x100004109
	movq	-816(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r13, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%r14, %rdi
	jmp	0x10000407a
	nopl	(%rax)
__ZN9benchmark22RunSpecifiedBenchmarksEPNS_17BenchmarkReporterE:
	pushq	%rbp
	movq	%rsp, %rbp
	xorl	%esi, %esi
	popq	%rbp
	jmp	__ZN9benchmark22RunSpecifiedBenchmarksEPNS_17BenchmarkReporterES1_ ## benchmark::RunSpecifiedBenchmarks(benchmark::BenchmarkReporter*, benchmark::BenchmarkReporter*)
	nopl	(%rax)
__ZN9benchmark8internal12_GLOBAL__N_114CreateReporterERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_15ConsoleReporter13OutputOptionsE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movl	%edx, %r15d
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movzbl	(%rbx), %eax
	movq	%rax, %rdx
	shrq	%rdx
	testb	$1, %al
	movq	8(%rbx), %rcx
	cmovneq	%rcx, %rdx
	cmpq	$7, %rdx
	jne	0x100004188
	leaq	170119(%rip), %rcx ## literal pool for: "console"
	xorl	%esi, %esi
	movq	$-1, %rdx
	movl	$7, %r8d
	movq	%rbx, %rdi
	callq	0x100029596 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
	testl	%eax, %eax
	je	0x10000424d
	movb	(%rbx), %al
	movq	8(%rbx), %rcx
	movzbl	%al, %edx
	movq	%rdx, %rsi
	shrq	%rsi
	testb	$1, %dl
	cmovneq	%rcx, %rsi
	cmpq	$4, %rsi
	jne	0x1000041ca
	leaq	170061(%rip), %rcx ## literal pool for: "json"
	xorl	%esi, %esi
	movq	$-1, %rdx
	movl	$4, %r8d
	movq	%rbx, %rdi
	callq	0x100029596 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
	testl	%eax, %eax
	je	0x10000429d
	movb	(%rbx), %al
	movq	8(%rbx), %rcx
	movzbl	%al, %eax
	movq	%rax, %rdx
	shrq	%rdx
	testb	$1, %al
	cmovneq	%rcx, %rdx
	cmpq	$3, %rdx
	jne	0x1000042d2
	leaq	170984(%rip), %rcx ## literal pool for: "csv"
	xorl	%esi, %esi
	movq	$-1, %rdx
	movl	$3, %r8d
	movq	%rbx, %rdi
	callq	0x100029596 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
	testl	%eax, %eax
	jne	0x1000042d2
	movl	$56, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	%rbx, %rdi
	callq	__ZN9benchmark17BenchmarkReporterC2Ev ## benchmark::BenchmarkReporter::BenchmarkReporter()
	leaq	__ZTVN9benchmark11CSVReporterE(%rip), %rax ## vtable for benchmark::CSVReporter
	addq	$16, %rax
	movq	%rax, (%rbx)
	movb	$0, 24(%rbx)
	movq	%rbx, %rax
	addq	$40, %rax
	movq	$0, 48(%rbx)
	movq	$0, 40(%rbx)
	movq	%rax, 32(%rbx)
	jmp	0x1000042c4
	movl	$72, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	%rbx, %rdi
	callq	__ZN9benchmark17BenchmarkReporterC2Ev ## benchmark::BenchmarkReporter::BenchmarkReporter()
	leaq	__ZTVN9benchmark15ConsoleReporterE(%rip), %rax ## vtable for benchmark::ConsoleReporter
	addq	$16, %rax
	movq	%rax, (%rbx)
	movl	%r15d, 24(%rbx)
	movq	$0, 32(%rbx)
	movq	%rbx, %rax
	addq	$48, %rax
	movq	$0, 56(%rbx)
	movq	$0, 48(%rbx)
	movq	%rax, 40(%rbx)
	movb	$0, 64(%rbx)
	jmp	0x1000042c4
	movl	$32, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	%rbx, %rdi
	callq	__ZN9benchmark17BenchmarkReporterC2Ev ## benchmark::BenchmarkReporter::BenchmarkReporter()
	leaq	__ZTVN9benchmark12JSONReporterE(%rip), %rax ## vtable for benchmark::JSONReporter
	addq	$16, %rax
	movq	%rax, (%rbx)
	movb	$1, 24(%rbx)
	movq	%rbx, (%r14)
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	175495(%rip), %rdi ## literal pool symbol address: __ZNSt3__14cerrE
	leaq	170789(%rip), %rsi ## literal pool for: "Unexpected format: '"
	callq	__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<<<std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*)
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	__ZNSt3__1lsIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_ostreamIT_T0_EES9_RKNS_12basic_stringIS6_S7_T1_EE ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<<<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	leaq	170787(%rip), %rsi ## literal pool for: "'\n"
	movq	%rax, %rdi
	callq	__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<<<std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*)
	movl	$1, %edi
	callq	0x1000297ac ## symbol stub for: _exit
	jmp	0x10000431d
	jmp	0x10000431d
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %rdi
	callq	___clang_call_terminate
	nopl	(%rax,%rax)
__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	%rbx, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%rax, %rdx
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmp	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	nopw	(%rax,%rax)
__ZNSt3__1lsIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_ostreamIT_T0_EES9_RKNS_12basic_stringIS6_S7_T1_EE:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	(%rsi), %ecx
	leaq	1(%rsi), %rax
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	cmovneq	16(%rsi), %rax
	testb	%cl, %cl
	cmovneq	8(%rsi), %rdx
	movq	%rax, %rsi
	popq	%rbp
	jmp	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	nopl	(%rax)
__ZNSt3__114basic_ofstreamIcNS_11char_traitsIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rdi, %rbx
	movq	175535(%rip), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, (%rbx)
	addq	$64, %rax
	movq	%rax, 416(%rbx)
	leaq	8(%rbx), %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	movq	175389(%rip), %rsi
	addq	$8, %rsi
	leaq	416(%rbx), %r14
	movq	%rbx, %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmp	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	nopw	%cs:(%rax,%rax)
__ZN9benchmark8internal17PrintUsageAndExitEv:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	175669(%rip), %rax ## literal pool symbol address: ___stdoutp
	movq	(%rax), %rcx
	leaq	169677(%rip), %rdi ## literal pool for: "benchmark [--benchmark_list_tests={true|false}]\n          [--benchmark_filter=<regex>]\n          [--benchmark_min_time=<min_time>]\n          [--benchmark_repetitions=<num_repetitions>]\n          [--benchmark_report_aggregates_only={true|false}\n          [--benchmark_format=<console|json|csv>]\n          [--benchmark_out=<filename>]\n          [--benchmark_out_format=<json|console|csv>]\n          [--benchmark_color={auto|true|false}]\n          [--benchmark_counters_tabular={true|false}]\n          [--v=<verbosity>]\n"
	movl	$517, %esi
	movl	$1, %edx
	callq	0x1000297e2 ## symbol stub for: _fwrite
	xorl	%edi, %edi
	callq	0x1000297ac ## symbol stub for: _exit
	nopl	(%rax,%rax)
__ZN9benchmark8internal21ParseCommandLineFlagsEPiPPc:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rsi, %r12
	movq	%rdi, %r14
	testq	%r14, %r14
	je	0x10000473b
	movl	(%r14), %eax
	testl	%eax, %eax
	jle	0x10000473b
	movq	(%r12), %rcx
	leaq	__ZN9benchmark17BenchmarkReporter7Context15executable_nameE(%rip), %rdx ## benchmark::BenchmarkReporter::Context::executable_name
	movq	%rcx, (%rdx)
	cmpl	$1, %eax
	je	0x10000474c
	leaq	56(%r12), %rax
	movq	%rax, -48(%rbp)
	leaq	8(%r12), %rax
	movq	%rax, -56(%rbp)
	movl	$1, %r13d
	leaq	170079(%rip), %rbx ## literal pool for: "benchmark_list_tests"
	nopw	%cs:(%rax,%rax)
	movslq	%r13d, %r15
	movq	(%r12,%r15,8), %rdi
	movq	%rbx, %rsi
	leaq	_FLAGS_benchmark_list_tests(%rip), %rdx
	callq	__ZN9benchmark13ParseBoolFlagEPKcS1_Pb ## benchmark::ParseBoolFlag(char const*, char const*, bool*)
	testb	%al, %al
	jne	0x100004610
	movq	(%r12,%r15,8), %rdi
	leaq	170044(%rip), %rsi ## literal pool for: "benchmark_filter"
	leaq	_FLAGS_benchmark_filter(%rip), %rdx
	callq	__ZN9benchmark15ParseStringFlagEPKcS1_PNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE ## benchmark::ParseStringFlag(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
	testb	%al, %al
	jne	0x100004610
	movq	(%r12,%r15,8), %rdi
	leaq	170030(%rip), %rsi ## literal pool for: "benchmark_min_time"
	leaq	_FLAGS_benchmark_min_time(%rip), %rdx
	callq	__ZN9benchmark15ParseDoubleFlagEPKcS1_Pd ## benchmark::ParseDoubleFlag(char const*, char const*, double*)
	testb	%al, %al
	jne	0x100004610
	movq	(%r12,%r15,8), %rdi
	leaq	170018(%rip), %rsi ## literal pool for: "benchmark_repetitions"
	leaq	_FLAGS_benchmark_repetitions(%rip), %rdx
	callq	__ZN9benchmark14ParseInt32FlagEPKcS1_Pi ## benchmark::ParseInt32Flag(char const*, char const*, int*)
	testb	%al, %al
	jne	0x100004610
	movq	(%r12,%r15,8), %rdi
	leaq	170009(%rip), %rsi ## literal pool for: "benchmark_report_aggregates_only"
	leaq	_FLAGS_benchmark_report_aggregates_only(%rip), %rdx
	callq	__ZN9benchmark13ParseBoolFlagEPKcS1_Pb ## benchmark::ParseBoolFlag(char const*, char const*, bool*)
	testb	%al, %al
	jne	0x100004610
	movq	(%r12,%r15,8), %rdi
	leaq	170011(%rip), %rsi ## literal pool for: "benchmark_format"
	leaq	_FLAGS_benchmark_format(%rip), %rdx
	callq	__ZN9benchmark15ParseStringFlagEPKcS1_PNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE ## benchmark::ParseStringFlag(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
	testb	%al, %al
	jne	0x100004610
	movq	(%r12,%r15,8), %rdi
	leaq	169997(%rip), %rsi ## literal pool for: "benchmark_out"
	leaq	_FLAGS_benchmark_out(%rip), %rdx
	callq	__ZN9benchmark15ParseStringFlagEPKcS1_PNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE ## benchmark::ParseStringFlag(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
	testb	%al, %al
	jne	0x100004610
	movq	(%r12,%r15,8), %rdi
	leaq	169980(%rip), %rsi ## literal pool for: "benchmark_out_format"
	leaq	_FLAGS_benchmark_out_format(%rip), %rdx
	callq	__ZN9benchmark15ParseStringFlagEPKcS1_PNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE ## benchmark::ParseStringFlag(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
	testb	%al, %al
	jne	0x100004610
	movq	(%r12,%r15,8), %rdi
	leaq	169974(%rip), %rsi ## literal pool for: "benchmark_color"
	leaq	_FLAGS_benchmark_color(%rip), %rdx
	callq	__ZN9benchmark15ParseStringFlagEPKcS1_PNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE ## benchmark::ParseStringFlag(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
	testb	%al, %al
	jne	0x100004610
	movq	(%r12,%r15,8), %rdi
	leaq	169963(%rip), %rsi ## literal pool for: "color_print"
	leaq	_FLAGS_benchmark_color(%rip), %rdx
	callq	__ZN9benchmark15ParseStringFlagEPKcS1_PNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE ## benchmark::ParseStringFlag(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
	testb	%al, %al
	jne	0x100004610
	movq	(%r12,%r15,8), %rdi
	leaq	169948(%rip), %rsi ## literal pool for: "benchmark_counters_tabular"
	leaq	_FLAGS_benchmark_counters_tabular(%rip), %rdx
	callq	__ZN9benchmark13ParseBoolFlagEPKcS1_Pb ## benchmark::ParseBoolFlag(char const*, char const*, bool*)
	testb	%al, %al
	jne	0x100004610
	movq	(%r12,%r15,8), %rdi
	leaq	169948(%rip), %rsi ## literal pool for: "v"
	leaq	_FLAGS_v(%rip), %rdx
	callq	__ZN9benchmark14ParseInt32FlagEPKcS1_Pi ## benchmark::ParseInt32Flag(char const*, char const*, int*)
	testb	%al, %al
	je	0x100004712
	nopw	%cs:(%rax,%rax)
	movslq	(%r14), %rax
	decq	%rax
	cmpl	%eax, %r13d
	movl	%r13d, %ecx
	je	0x1000046f2
	movq	%rax, %rcx
	subq	%r15, %rcx
	cmpq	$3, %rcx
	jbe	0x1000046cb
	movq	%rbx, %r9
	movq	%rcx, %r8
	andq	$-4, %r8
	leaq	-4(%r8), %rdi
	shrq	$2, %rdi
	leal	1(%rdi), %esi
	andl	$1, %esi
	testq	%rdi, %rdi
	je	0x100004706
	movq	-48(%rbp), %rdx
	leaq	(%rdx,%r15,8), %rbx
	leaq	-1(%rsi), %rdx
	subq	%rdi, %rdx
	xorl	%edi, %edi
	nopw	%cs:(%rax,%rax)
	movups	-48(%rbx,%rdi,8), %xmm0
	movups	-32(%rbx,%rdi,8), %xmm1
	movups	-16(%rbx,%rdi,8), %xmm2
	movups	(%rbx,%rdi,8), %xmm3
	movups	%xmm0, -56(%rbx,%rdi,8)
	movups	%xmm1, -40(%rbx,%rdi,8)
	movups	%xmm2, -24(%rbx,%rdi,8)
	movups	%xmm3, -8(%rbx,%rdi,8)
	addq	$8, %rdi
	addq	$2, %rdx
	jne	0x100004670
	testq	%rsi, %rsi
	movq	%r9, %rbx
	je	0x1000046c3
	addq	%r15, %rdi
	movups	8(%r12,%rdi,8), %xmm0
	movups	24(%r12,%rdi,8), %xmm1
	movups	%xmm0, (%r12,%rdi,8)
	movups	%xmm1, 16(%r12,%rdi,8)
	cmpq	%r8, %rcx
	je	0x1000046f0
	addq	%r8, %r15
	movq	-56(%rbp), %rcx
	leaq	(%rcx,%r15,8), %rcx
	movq	%rax, %rdx
	subq	%r15, %rdx
	nopl	(%rax)
	movq	(%rcx), %rsi
	movq	%rsi, -8(%rcx)
	addq	$8, %rcx
	decq	%rdx
	jne	0x1000046e0
	movl	%eax, %ecx
	movl	%ecx, (%r14)
	decl	%r13d
	incl	%r13d
	cmpl	%ecx, %r13d
	jl	0x1000044a0
	jmp	0x10000474c
	xorl	%edi, %edi
	testq	%rsi, %rsi
	movq	%r9, %rbx
	jne	0x1000046a9
	jmp	0x1000046c3
	movq	(%r12,%r15,8), %rdi
	leaq	169648(%rip), %rsi ## literal pool for: "help"
	callq	__ZN9benchmark6IsFlagEPKcS1_ ## benchmark::IsFlag(char const*, char const*)
	testb	%al, %al
	jne	0x100004935
	movl	(%r14), %ecx
	incl	%r13d
	cmpl	%ecx, %r13d
	jl	0x1000044a0
	jmp	0x10000474c
	leaq	169382(%rip), %rax ## literal pool for: "unknown"
	leaq	__ZN9benchmark17BenchmarkReporter7Context15executable_nameE(%rip), %rcx ## benchmark::BenchmarkReporter::Context::executable_name
	movq	%rax, (%rcx)
	movzbl	_FLAGS_benchmark_format(%rip), %eax
	movq	%rax, %rdx
	shrq	%rdx
	testb	$1, %al
	movq	182894(%rip), %rcx
	cmovneq	%rcx, %rdx
	cmpq	$7, %rdx
	jne	0x1000047a3
	leaq	_FLAGS_benchmark_format(%rip), %rdi
	leaq	168560(%rip), %rcx ## literal pool for: "console"
	xorl	%esi, %esi
	movq	$-1, %rdx
	movl	$7, %r8d
	callq	0x100029596 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
	testl	%eax, %eax
	je	0x10000482f
	movb	_FLAGS_benchmark_format(%rip), %al
	movq	182829(%rip), %rcx
	movzbl	%al, %edx
	movq	%rdx, %rsi
	shrq	%rsi
	testb	$1, %dl
	cmovneq	%rcx, %rsi
	cmpq	$4, %rsi
	jne	0x1000047ec
	leaq	_FLAGS_benchmark_format(%rip), %rdi
	leaq	168491(%rip), %rcx ## literal pool for: "json"
	xorl	%esi, %esi
	movq	$-1, %rdx
	movl	$4, %r8d
	callq	0x100029596 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
	testl	%eax, %eax
	je	0x10000482f
	movb	_FLAGS_benchmark_format(%rip), %al
	movq	182756(%rip), %rcx
	movzbl	%al, %eax
	movq	%rax, %rdx
	shrq	%rdx
	testb	$1, %al
	cmovneq	%rcx, %rdx
	cmpq	$3, %rdx
	jne	0x100004935
	leaq	_FLAGS_benchmark_format(%rip), %rdi
	leaq	169407(%rip), %rcx ## literal pool for: "csv"
	xorl	%esi, %esi
	movq	$-1, %rdx
	movl	$3, %r8d
	callq	0x100029596 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
	testl	%eax, %eax
	jne	0x100004935
	movzbl	_FLAGS_benchmark_out_format(%rip), %eax
	movq	%rax, %rdx
	shrq	%rdx
	testb	$1, %al
	movq	182691(%rip), %rcx
	cmovneq	%rcx, %rdx
	cmpq	$7, %rdx
	jne	0x100004886
	leaq	_FLAGS_benchmark_out_format(%rip), %rdi
	leaq	168333(%rip), %rcx ## literal pool for: "console"
	xorl	%esi, %esi
	movq	$-1, %rdx
	movl	$7, %r8d
	callq	0x100029596 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
	testl	%eax, %eax
	je	0x10000490a
	movb	_FLAGS_benchmark_out_format(%rip), %al
	movq	182626(%rip), %rcx
	movzbl	%al, %edx
	movq	%rdx, %rsi
	shrq	%rsi
	testb	$1, %dl
	cmovneq	%rcx, %rsi
	cmpq	$4, %rsi
	jne	0x1000048cf
	leaq	_FLAGS_benchmark_out_format(%rip), %rdi
	leaq	168264(%rip), %rcx ## literal pool for: "json"
	xorl	%esi, %esi
	movq	$-1, %rdx
	movl	$4, %r8d
	callq	0x100029596 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
	testl	%eax, %eax
	je	0x10000490a
	movb	_FLAGS_benchmark_out_format(%rip), %al
	movq	182553(%rip), %rcx
	movzbl	%al, %eax
	movq	%rax, %rdx
	shrq	%rdx
	testb	$1, %al
	cmovneq	%rcx, %rdx
	cmpq	$3, %rdx
	jne	0x100004935
	leaq	_FLAGS_benchmark_out_format(%rip), %rdi
	leaq	169184(%rip), %rcx ## literal pool for: "csv"
	xorl	%esi, %esi
	movq	$-1, %rdx
	movl	$3, %r8d
	callq	0x100029596 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
	testl	%eax, %eax
	jne	0x100004935
	movzbl	_FLAGS_benchmark_color(%rip), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	182519(%rip), %rcx
	testq	%rcx, %rcx
	je	0x100004935
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	callq	__ZN9benchmark8internal17PrintUsageAndExitEv ## benchmark::internal::PrintUsageAndExit()
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rdi
	callq	___clang_call_terminate
	nopw	%cs:(%rax,%rax)
__ZN9benchmark10InitializeEPiPPc:
	pushq	%rbp
	movq	%rsp, %rbp
	callq	__ZN9benchmark8internal21ParseCommandLineFlagsEPiPPc ## benchmark::internal::ParseCommandLineFlags(int*, char**)
	movl	_FLAGS_v(%rip), %eax
	movq	174250(%rip), %rcx ## literal pool symbol address: __ZZN9benchmark8internal8LogLevelEvE9log_level
	movl	%eax, (%rcx)
	popq	%rbp
	retq
	nopw	(%rax,%rax)
__ZN9benchmark27ReportUnrecognizedArgumentsEiPPc:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r13
	movl	%edi, -44(%rbp)
	cmpl	$2, %edi
	jl	0x1000049ce
	movl	-44(%rbp), %r12d
	movl	$1, %ebx
	movq	174223(%rip), %r14 ## literal pool symbol address: ___stderrp
	leaq	168998(%rip), %r15 ## literal pool for: "%s: error: unrecognized command-line flag: %s\n"
	movq	(%r14), %rdi
	movq	(%r13), %rdx
	movq	(%r13,%rbx,8), %rcx
	xorl	%eax, %eax
	movq	%r15, %rsi
	callq	0x1000297ca ## symbol stub for: _fprintf
	incq	%rbx
	cmpq	%rbx, %r12
	jne	0x1000049b0
	cmpl	$1, -44(%rbp)
	setg	%al
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE:
__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rsi, %rbx
	movq	%rdi, %r14
	testq	%rbx, %rbx
	je	0x100004a34
	movq	(%rbx), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	8(%rbx), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, 32(%rbx)
	je	0x100004a28
	movq	48(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	nopl	(%rax)
___clang_call_terminate:
	pushq	%rax
	callq	0x10002975e ## symbol stub for: ___cxa_begin_catch
	callq	0x10002972e ## symbol stub for: __ZSt9terminatev
	nopl	(%rax,%rax)
__ZN9benchmark7Barrier4waitEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$16, %rsp
	movq	%rdi, %rbx
	movq	%rbx, -48(%rbp)
	movb	$1, -40(%rbp)
	callq	0x1000296b6 ## symbol stub for: __ZNSt3__15mutex4lockEv
	movq	173482(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x100004aa6
	movq	173469(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100004aa6
	movq	173949(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	173439(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movl	116(%rbx), %r12d
	movl	120(%rbx), %eax
	incl	%eax
	movl	%eax, 120(%rbx)
	cmpl	112(%rbx), %eax
	jge	0x100004add
	leaq	64(%rbx), %r14
	leaq	-48(%rbp), %r15
	nop
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	0x10002968c ## symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
	movl	116(%rbx), %eax
	cmpl	%r12d, %eax
	jg	0x100004b1f
	movl	120(%rbx), %ecx
	cmpl	112(%rbx), %ecx
	jne	0x100004ac0
	jmp	0x100004ae0
	movl	%r12d, %eax
	incl	%eax
	movl	%eax, 116(%rbx)
	movl	$0, 120(%rbx)
	movb	$1, %r14b
	cmpb	$0, -40(%rbp)
	je	0x100004afe
	movq	-48(%rbp), %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	testb	%r14b, %r14b
	je	0x100004b0f
	addq	$64, %rbx
	movq	%rbx, %rdi
	callq	0x100029686 ## symbol stub for: __ZNSt3__118condition_variable10notify_allEv
	movl	%r14d, %eax
	addq	$16, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%r14d, %r14d
	cmpb	$0, -40(%rbp)
	jne	0x100004af5
	jmp	0x100004afe
	nopw	(%rax,%rax)
__ZN9benchmark8internal12_GLOBAL__N_111RunInThreadEPKNS0_9Benchmark8InstanceEmiPNS0_13ThreadManagerE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$192, %rsp
	movq	%rcx, %r15
	movl	%edx, %eax
	movq	%rdi, %rbx
	movb	$0, -80(%rbp)
	movq	$0, -40(%rbp)
	movq	$0, -48(%rbp)
	movq	$0, -56(%rbp)
	movq	$0, -64(%rbp)
	movq	$0, -72(%rbp)
	leaq	40(%rbx), %rdx
	movl	144(%rbx), %r8d
	movq	%r15, (%rsp)
	leaq	-208(%rbp), %r14
	leaq	-80(%rbp), %r9
	movq	%r14, %rdi
	movl	%eax, %ecx
	callq	__ZN9benchmark5StateC2EmRKNSt3__16vectorIxNS1_9allocatorIxEEEEiiPNS_8internal11ThreadTimerEPNS8_13ThreadManagerE ## benchmark::State::State(unsigned long, std::__1::vector<long long, std::__1::allocator<long long> > const&, int, int, benchmark::internal::ThreadTimer*, benchmark::internal::ThreadManager*)
	movq	24(%rbx), %rdi
	movq	(%rdi), %rax
	movq	%r14, %rsi
	callq	*16(%rax)
	movq	173170(%rip), %rbx ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rbx), %al
	testb	%al, %al
	jne	0x100004bde
	movq	173157(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100004bde
	movq	173637(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	173127(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	173611(%rip), %r12 ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	(%r12), %rdi
	testq	%rdi, %rdi
	je	0x100004bff
	leaq	168541(%rip), %rsi ## literal pool for: "Benchmark returned before State::KeepRunning() returned false!"
	movl	$62, %edx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	136(%r15), %r14
	movq	%r14, %rdi
	callq	0x1000296b6 ## symbol stub for: __ZNSt3__15mutex4lockEv
	cmpb	$1, -184(%rbp)
	jne	0x100004dbe
	movq	-192(%rbp), %rax
	subq	-208(%rbp), %rax
	addq	-200(%rbp), %rax
	addq	%rax, (%r15)
	movb	(%rbx), %al
	testb	%al, %al
	jne	0x100004c5d
	movq	173024(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100004c5d
	movq	$0, (%r12)
	movq	173000(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movsd	-48(%rbp), %xmm0
	addsd	16(%r15), %xmm0
	movsd	%xmm0, 16(%r15)
	movb	(%rbx), %al
	testb	%al, %al
	jne	0x100004c98
	movq	172965(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100004c98
	movq	$0, (%r12)
	movq	172941(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movsd	-56(%rbp), %xmm0
	addsd	8(%r15), %xmm0
	movsd	%xmm0, 8(%r15)
	movb	(%rbx), %al
	testb	%al, %al
	jne	0x100004cd3
	movq	172906(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100004cd3
	movq	$0, (%r12)
	movq	172882(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movsd	-40(%rbp), %xmm0
	addsd	24(%r15), %xmm0
	movsd	%xmm0, 24(%r15)
	movdqu	-152(%rbp), %xmm0
	movdqu	32(%r15), %xmm1
	paddq	%xmm0, %xmm1
	movdqu	%xmm1, 32(%r15)
	movq	-136(%rbp), %rax
	addq	%rax, 48(%r15)
	leaq	112(%r15), %rdi
	leaq	-128(%rbp), %rsi
	callq	__ZN9benchmark8internal9IncrementEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_7CounterENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEERKSG_ ## benchmark::internal::Increment(std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, benchmark::Counter> > >*, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, benchmark::Counter> > > const&)
	movq	%r14, %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	leaq	208(%r15), %r14
	movq	%r14, %rdi
	callq	0x1000296b6 ## symbol stub for: __ZNSt3__15mutex4lockEv
	decl	320(%r15)
	cmpl	$0, 328(%r15)
	je	0x100004d48
	leaq	272(%r15), %rdi
	callq	0x100029686 ## symbol stub for: __ZNSt3__118condition_variable10notify_allEv
	movq	%r14, %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	movl	$4294967295, %eax
	lock
	xaddl	%eax, 200(%r15)
	cmpl	$1, %eax
	jne	0x100004d89
	leaq	336(%r15), %r14
	movq	%r14, %rdi
	callq	0x1000296b6 ## symbol stub for: __ZNSt3__15mutex4lockEv
	addq	$400, %r15
	movq	%r15, %rdi
	callq	0x100029686 ## symbol stub for: __ZNSt3__118condition_variable10notify_allEv
	movq	%r14, %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	leaq	-128(%rbp), %rdi
	movq	-120(%rbp), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	-176(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100004dae
	movq	%rdi, -168(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$192, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%eax, %eax
	jmp	0x100004c30
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	jmp	0x100004dd7
	jmp	0x100004dd4
	movq	%rax, %rbx
	leaq	-128(%rbp), %rdi
	movq	-120(%rbp), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	-176(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100004dfc
	movq	%rdi, -168(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$88, %rsp
	movq	%rdx, %r13
	movq	%rsi, %r14
	movq	%rdi, %r12
	movq	%rcx, %rsi
	subq	%r13, %rsi
	testq	%rsi, %rsi
	jle	0x10000528a
	sarq	$3, %rsi
	movabsq	$-8116567392432202711, %rdi
	imulq	%rdi, %rsi
	movq	8(%r12), %r11
	movq	16(%r12), %rax
	movq	%rax, %rdx
	subq	%r11, %rdx
	sarq	$3, %rdx
	imulq	%rdi, %rdx
	cmpq	%rdx, %rsi
	jle	0x100004ef5
	movq	%rcx, -48(%rbp)
	movabsq	$92233720368547758, %r15
	movq	(%r12), %rcx
	subq	%rcx, %r11
	sarq	$3, %r11
	imulq	%rdi, %r11
	addq	%rsi, %r11
	cmpq	%r15, %r11
	ja	0x10000529c
	leaq	16(%r12), %rdx
	subq	%rcx, %rax
	sarq	$3, %rax
	imulq	%rdi, %rax
	movabsq	$46116860184273878, %rsi
	cmpq	%rsi, %rax
	ja	0x100004ec1
	addq	%rax, %rax
	cmpq	%r11, %rax
	cmovbq	%r11, %rax
	movq	%rax, %r15
	movq	%r14, %rbx
	subq	%rcx, %rbx
	sarq	$3, %rbx
	imulq	%rdi, %rbx
	movq	$0, -72(%rbp)
	movq	%rdx, -64(%rbp)
	testq	%r15, %r15
	je	0x100005219
	imulq	$200, %r15, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	jmp	0x10000521b
	movq	%r11, %rdx
	subq	%r14, %rdx
	movq	%rdx, %rax
	sarq	$3, %rax
	imulq	%rdi, %rax
	cmpq	%rax, %rsi
	jle	0x100004fa2
	movq	%r14, -104(%rbp)
	movq	%rdx, -112(%rbp)
	movq	%rsi, -120(%rbp)
	imulq	$200, %rax, %rax
	addq	%r13, %rax
	movq	%rax, -48(%rbp)
	cmpq	%rcx, %rax
	movq	%r11, -56(%rbp)
	movq	%rcx, %rax
	movq	%r11, %r15
	movq	%r12, %r14
	je	0x100004f7d
	movq	-56(%rbp), %r15
	movq	-48(%rbp), %r12
	nopw	%cs:(%rax,%rax)
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%rax, %rbx
	callq	__ZN9benchmark17BenchmarkReporter3RunC2ERKS1_ ## benchmark::BenchmarkReporter::Run::Run(benchmark::BenchmarkReporter::Run const&)
	movq	%rbx, %rax
	addq	$200, %r12
	movq	8(%r14), %r15
	movl	$200, %ecx
	addq	%rcx, %r15
	movq	%r15, 8(%r14)
	cmpq	%r12, %rax
	jne	0x100004f50
	cmpq	$0, -112(%rbp)
	movq	%r14, %r12
	movq	-56(%rbp), %r11
	movabsq	$-8116567392432202711, %rdi
	movq	-120(%rbp), %rsi
	movq	-104(%rbp), %r14
	jg	0x100004fa9
	jmp	0x10000528a
	movq	%r11, %r15
	movq	%rcx, -48(%rbp)
	imulq	$200, %rsi, %rax
	leaq	(%r14,%rax), %rcx
	movq	%r15, %r8
	subq	%rcx, %r8
	movq	%r8, %r9
	sarq	$3, %r9
	imulq	%rdi, %r9
	movq	%r15, %rcx
	subq	%rax, %rcx
	cmpq	%r11, %rcx
	jae	0x100005138
	imulq	$200, %r9, %rax
	leaq	184(%r14,%rax), %rdx
	movl	$200, %r10d
	movq	%r15, %rbx
	nopl	(%rax)
	movq	-168(%rdx), %rax
	movq	%rax, 16(%rbx)
	movq	-184(%rdx), %rax
	movq	-176(%rdx), %rcx
	movq	%rcx, 8(%rbx)
	movq	%rax, (%rbx)
	movq	$0, -168(%rdx)
	movq	$0, -176(%rdx)
	movq	$0, -184(%rdx)
	movq	-144(%rdx), %rax
	movq	%rax, 40(%rbx)
	movq	-160(%rdx), %rax
	movq	-152(%rdx), %rcx
	movq	%rcx, 32(%rbx)
	movq	%rax, 24(%rbx)
	movq	$0, -144(%rdx)
	movq	$0, -152(%rdx)
	movq	$0, -160(%rdx)
	movzbl	-136(%rdx), %eax
	movb	%al, 48(%rbx)
	movq	-112(%rdx), %rax
	movq	%rax, 72(%rbx)
	movq	-128(%rdx), %rax
	movq	-120(%rdx), %rcx
	movq	%rcx, 64(%rbx)
	movq	%rax, 56(%rbx)
	movq	$0, -112(%rdx)
	movq	$0, -120(%rdx)
	movq	$0, -128(%rdx)
	leaq	80(%rbx), %rdi
	leaq	-104(%rdx), %rax
	movl	$11, %ecx
	movq	%rax, %rsi
	rep		movsq	(%rsi), %es:(%rdi)
	movzwl	-16(%rdx), %ecx
	movw	%cx, 168(%rbx)
	movq	-8(%rdx), %rcx
	movq	%rcx, 176(%rbx)
	leaq	184(%rbx), %rcx
	movq	(%rdx), %rsi
	movq	%rsi, 184(%rbx)
	movq	8(%rdx), %rdi
	movq	%rdi, 192(%rbx)
	testq	%rdi, %rdi
	je	0x100005110
	movq	%rcx, 16(%rsi)
	movq	%rdx, -8(%rdx)
	movq	$0, 8(%rdx)
	movq	$0, (%rdx)
	jmp	0x100005117
	movq	%rcx, 176(%rbx)
	movq	8(%r12), %rbx
	addq	%r10, %rbx
	movq	%rbx, 8(%r12)
	addq	$200, %rdx
	addq	$120, %rax
	cmpq	%r11, %rax
	jb	0x100004ff0
	testq	%r8, %r8
	je	0x100005170
	addq	$-200, %r15
	imulq	$200, %r9, %rbx
	nopl	(%rax,%rax)
	leaq	-200(%r14,%rbx), %rsi
	movq	%r15, %rdi
	callq	__ZN9benchmark17BenchmarkReporter3RunaSEOS1_ ## benchmark::BenchmarkReporter::Run::operator=(benchmark::BenchmarkReporter::Run&&)
	addq	$-200, %r15
	addq	$-200, %rbx
	jne	0x100005150
	movq	-48(%rbp), %r12
	cmpq	%r13, %r12
	je	0x10000528a
	xorl	%ebx, %ebx
	nop
	leaq	(%r14,%rbx), %rdi
	leaq	(%r13,%rbx), %r15
	movq	%r15, %rsi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	leaq	24(%r14,%rbx), %rdi
	leaq	24(%r13,%rbx), %rsi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	movzbl	48(%r13,%rbx), %eax
	movb	%al, 48(%r14,%rbx)
	leaq	56(%r14,%rbx), %rdi
	leaq	56(%r13,%rbx), %rsi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	leaq	80(%r14,%rbx), %rdi
	leaq	80(%r13,%rbx), %rsi
	movl	$11, %ecx
	rep		movsq	(%rsi), %es:(%rdi)
	movzwl	168(%r13,%rbx), %eax
	movw	%ax, 168(%r14,%rbx)
	cmpq	%r13, %r14
	je	0x100005200
	leaq	176(%r14,%rbx), %rdi
	movq	176(%r13,%rbx), %rsi
	leaq	184(%r13,%rbx), %rdx
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE14__assign_multiINS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEEEEvT_SO_ ## void std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::__assign_multi<std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long> >(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long>, std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long>)
	addq	$200, %rbx
	addq	$200, %r15
	cmpq	%r12, %r15
	jne	0x100005180
	jmp	0x10000528a
	xorl	%eax, %eax
	movq	%rax, -96(%rbp)
	imulq	$200, %rbx, %rdi
	addq	%rax, %rdi
	movq	%rdi, -80(%rbp)
	movq	%rdi, -88(%rbp)
	imulq	$200, %r15, %rcx
	addq	%rax, %rcx
	movq	%rcx, -72(%rbp)
	movq	-48(%rbp), %rbx
	cmpq	%rbx, %r13
	je	0x10000526f
	movl	$200, %r15d
	nop
	movq	%r13, %rsi
	callq	__ZN9benchmark17BenchmarkReporter3RunC2ERKS1_ ## benchmark::BenchmarkReporter::Run::Run(benchmark::BenchmarkReporter::Run const&)
	movq	-80(%rbp), %rdi
	addq	%r15, %rdi
	movq	%rdi, -80(%rbp)
	addq	$200, %r13
	cmpq	%r13, %rbx
	jne	0x100005250
	leaq	-96(%rbp), %rsi
	movq	%r12, %rdi
	movq	%r14, %rdx
	callq	__ZNSt3__16vectorIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EEPS3_ ## std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::__swap_out_circular_buffer(std::__1::__split_buffer<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run>&>&, benchmark::BenchmarkReporter::Run*)
	movq	%rax, %r14
	leaq	-96(%rbp), %rdi
	callq	__ZNSt3__114__split_bufferIN9benchmark17BenchmarkReporter3RunERNS_9allocatorIS3_EEED2Ev ## std::__1::__split_buffer<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run>&>::~__split_buffer()
	movq	%r14, %rax
	addq	$88, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r12, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	jmp	0x1000052a6
	movq	%rax, %rbx
	leaq	-96(%rbp), %rdi
	callq	__ZNSt3__114__split_bufferIN9benchmark17BenchmarkReporter3RunERNS_9allocatorIS3_EEED2Ev ## std::__1::__split_buffer<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run>&>::~__split_buffer()
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	(%rax,%rax)
__ZNSt3__16threadC2IPFvPKN9benchmark8internal9Benchmark8InstanceEmiPNS3_13ThreadManagerEEJS7_RmiS9_EvEEOT_DpOT0_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%r9, -56(%rbp)
	movq	%r8, -48(%rbp)
	movq	%rcx, %r14
	movq	%rdx, %r12
	movq	%rsi, %r13
	movq	%rdi, -64(%rbp)
	movl	$8, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r15
	movq	%r15, %rdi
	callq	0x10002966e ## symbol stub for: __ZNSt3__115__thread_structC1Ev
	movl	$48, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	(%r13), %rax
	movq	(%r12), %rcx
	movq	(%r14), %rdx
	movq	-48(%rbp), %rsi
	movl	(%rsi), %esi
	movq	-56(%rbp), %rdi
	movq	(%rdi), %rdi
	movq	%r15, (%rbx)
	movq	%rax, 8(%rbx)
	movq	%rcx, 16(%rbx)
	movq	%rdx, 24(%rbx)
	movl	%esi, 32(%rbx)
	movq	%rdi, 40(%rbx)
	movq	171291(%rip), %rdx ## literal pool symbol address: __ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvPKN9benchmark8internal9Benchmark8InstanceEmiPNS8_13ThreadManagerEESC_miSE_EEEEEPvSI_
	xorl	%esi, %esi
	movq	-64(%rbp), %rdi
	movq	%rbx, %rcx
	callq	0x10002983c ## symbol stub for: _pthread_create
	testl	%eax, %eax
	jne	0x10000535e
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	leaq	166700(%rip), %rsi ## literal pool for: "thread constructor failed"
	movl	%eax, %edi
	callq	0x1000296b0 ## symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
	movq	%rax, %r14
	movq	(%rbx), %r15
	movq	$0, (%rbx)
	testq	%r15, %r15
	je	0x10000538e
	movq	%r15, %rdi
	callq	0x100029674 ## symbol stub for: __ZNSt3__115__thread_structD1Ev
	movq	%r15, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	0x100029674 ## symbol stub for: __ZNSt3__115__thread_structD1Ev
	jmp	0x1000053ae
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nop
__ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvPKN9benchmark8internal9Benchmark8InstanceEmiPNS8_13ThreadManagerEESC_miSE_EEEEEPvSI_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	callq	0x1000296a4 ## symbol stub for: __ZNSt3__119__thread_local_dataEv
	movq	(%rbx), %rsi
	movq	$0, (%rbx)
	movq	(%rax), %rdi
	callq	0x10002984e ## symbol stub for: _pthread_setspecific
	movq	16(%rbx), %rdi
	movq	24(%rbx), %rsi
	movl	32(%rbx), %edx
	movq	40(%rbx), %rcx
	callq	*8(%rbx)
	movq	(%rbx), %r14
	movq	$0, (%rbx)
	testq	%r14, %r14
	je	0x100005415
	movq	%r14, %rdi
	callq	0x100029674 ## symbol stub for: __ZNSt3__115__thread_structD1Ev
	movq	%r14, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	xorl	%eax, %eax
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %r14
	testq	%rbx, %rbx
	jne	0x100005437
	jmp	0x10000545e
	movq	%rax, %r14
	movq	(%rbx), %r15
	movq	$0, (%rbx)
	testq	%r15, %r15
	je	0x100005456
	movq	%r15, %rdi
	callq	0x100029674 ## symbol stub for: __ZNSt3__115__thread_structD1Ev
	movq	%r15, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE14__assign_multiINS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEEEEvT_SO_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	movq	%rdx, %r12
	movq	%rsi, %r15
	movq	%rdi, %r13
	cmpq	$0, 16(%r13)
	je	0x100005705
	leaq	8(%r13), %rdx
	movq	(%r13), %rax
	movq	8(%r13), %rcx
	movq	%rdx, -80(%rbp)
	movq	%rdx, (%r13)
	movq	$0, 16(%rcx)
	movq	$0, 16(%r13)
	movq	$0, 8(%r13)
	movq	8(%rax), %r14
	testq	%r14, %r14
	cmoveq	%rax, %r14
	testq	%r14, %r14
	je	0x100005777
	movq	%r13, -64(%rbp)
	movq	%r12, -56(%rbp)
	nopl	(%rax)
	movq	%r14, %rbx
	cmpq	%r12, %r15
	je	0x1000056e3
	leaq	32(%r15), %rsi
	leaq	32(%rbx), %rdi
	movq	%rdi, -48(%rbp)
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	movl	64(%r15), %eax
	movl	%eax, 64(%rbx)
	movq	56(%r15), %rax
	movq	%rax, 56(%rbx)
	movq	16(%rbx), %r14
	testq	%r14, %r14
	movq	%r15, -72(%rbp)
	je	0x100005550
	movq	(%r14), %rax
	cmpq	%rbx, %rax
	je	0x100005560
	movq	$0, 8(%r14)
	testq	%rax, %rax
	jne	0x100005539
	jmp	0x100005584
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	0x100005584
	movq	%rax, %r14
	movq	(%r14), %rax
	testq	%rax, %rax
	jne	0x100005539
	jmp	0x100005530
	nopw	%cs:(%rax,%rax)
	xorl	%r14d, %r14d
	jmp	0x100005584
	nopw	%cs:(%rax,%rax)
	movq	$0, (%r14)
	jmp	0x10000557b
	nopl	(%rax)
	movq	%rax, %r14
	movq	(%r14), %rax
	testq	%rax, %rax
	jne	0x100005570
	movq	8(%r14), %rax
	testq	%rax, %rax
	jne	0x100005570
	movq	-80(%rbp), %rax
	movq	(%rax), %r15
	testq	%r15, %r15
	je	0x100005630
	movzbl	32(%rbx), %eax
	movq	%rax, %r13
	shrq	%r13
	andb	$1, %al
	cmovneq	40(%rbx), %r13
	movq	-48(%rbp), %r12
	incq	%r12
	testb	%al, %al
	cmovneq	48(%rbx), %r12
	movq	%r12, -48(%rbp)
	jmp	0x1000055c3
	nopl	(%rax)
	movq	%rax, %r15
	movzbl	32(%r15), %eax
	movq	%rax, %r12
	shrq	%r12
	testb	$1, %al
	cmovneq	40(%r15), %r12
	cmpq	%r12, %r13
	movq	%r12, %rdx
	ja	0x1000055e0
	movq	%r13, %rdx
	testq	%rdx, %rdx
	je	0x100005610
	leaq	32(%r15), %rsi
	incq	%rsi
	testb	$1, %al
	cmovneq	48(%r15), %rsi
	movq	-48(%rbp), %rdi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x100005610
	js	0x100005615
	movq	8(%r15), %rax
	testq	%rax, %rax
	jne	0x1000055c0
	jmp	0x100005640
	nopl	(%rax)
	cmpq	%r12, %r13
	jae	0x100005602
	movq	(%r15), %rax
	testq	%rax, %rax
	jne	0x1000055c0
	movq	%r15, %rax
	jmp	0x100005644
	nopw	%cs:(%rax,%rax)
	movq	%rax, %r15
	jmp	0x10000564c
	nopw	%cs:(%rax,%rax)
	leaq	8(%r15), %rax
	movq	-64(%rbp), %r13
	movq	-56(%rbp), %r12
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	movq	%r15, 16(%rbx)
	movq	%rbx, (%rax)
	movq	(%r13), %rcx
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	je	0x100005675
	movq	%rcx, (%r13)
	movq	(%rax), %rbx
	movq	-72(%rbp), %r15
	movq	8(%r13), %rdi
	movq	%rbx, %rsi
	callq	__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ ## void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
	incq	16(%r13)
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	0x1000056b0
	nopw	%cs:(%rax,%rax)
	movq	%rax, %rbx
	movq	(%rbx), %rax
	testq	%rax, %rax
	jne	0x1000056a0
	jmp	0x1000056d0
	nopl	(%rax)
	movq	16(%r15), %rbx
	cmpq	%r15, (%rbx)
	je	0x1000056d0
	addq	$16, %r15
	nopl	(%rax)
	movq	(%r15), %rax
	movq	16(%rax), %rbx
	cmpq	%rax, (%rbx)
	leaq	16(%rax), %r15
	jne	0x1000056c0
	testq	%r14, %r14
	movq	%rbx, %r15
	jne	0x1000054e0
	jmp	0x100005708
	nop
	movq	%rax, %rbx
	movq	16(%rbx), %rax
	testq	%rax, %rax
	jne	0x1000056e0
	movq	%r13, %rdi
	movq	%rbx, %rsi
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	%r15, %rbx
	cmpq	%r12, %rbx
	je	0x100005768
	nopl	(%rax)
	leaq	32(%rbx), %rsi
	movq	%r13, %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE15__emplace_multiIJRKNS_4pairIKS7_S9_EEEEENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEDpOT_ ## std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::__emplace_multi<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, benchmark::Counter> const&>(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, benchmark::Counter> const&)
	movq	8(%rbx), %rcx
	testq	%rcx, %rcx
	je	0x100005740
	nopw	%cs:(%rax,%rax)
	movq	%rcx, %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	jne	0x100005730
	jmp	0x100005760
	nopl	(%rax)
	movq	16(%rbx), %rax
	cmpq	%rbx, (%rax)
	je	0x100005760
	addq	$16, %rbx
	nopl	(%rax)
	movq	(%rbx), %rcx
	movq	16(%rcx), %rax
	cmpq	%rcx, (%rax)
	leaq	16(%rcx), %rbx
	jne	0x100005750
	cmpq	%r12, %rax
	movq	%rax, %rbx
	jne	0x100005710
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r15, %rbx
	cmpq	%r12, %rbx
	jne	0x100005710
	jmp	0x100005768
	movq	%rax, %rdi
	callq	0x10002975e ## symbol stub for: ___cxa_begin_catch
	movq	16(%rbx), %rax
	testq	%rax, %rax
	je	0x1000057ac
	nopw	%cs:(%rax,%rax)
	movq	%rax, %rbx
	movq	16(%rbx), %rax
	testq	%rax, %rax
	jne	0x1000057a0
	movq	%r13, %rdi
	movq	%rbx, %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	callq	0x100029782 ## symbol stub for: ___cxa_rethrow
	movq	%rax, %rbx
	callq	0x100029764 ## symbol stub for: ___cxa_end_catch
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %rdi
	callq	___clang_call_terminate
	nopw	%cs:(%rax,%rax)
__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE15__emplace_multiIJRKNS_4pairIKS7_S9_EEEEENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEDpOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movl	$72, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r15
	leaq	32(%r15), %rdi
	movq	%rbx, %rsi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	movq	24(%rbx), %rax
	movq	32(%rbx), %rcx
	movq	%rcx, 64(%r15)
	movq	%rax, 56(%r15)
	movq	8(%r14), %rbx
	testq	%rbx, %rbx
	je	0x1000058b2
	movq	%r14, -48(%rbp)
	movzbl	32(%r15), %eax
	movq	%rax, %r13
	shrq	%r13
	andb	$1, %al
	cmovneq	40(%r15), %r13
	movq	%r15, %r12
	addq	$33, %r12
	testb	%al, %al
	cmovneq	48(%r15), %r12
	jmp	0x100005853
	movq	%rax, %rbx
	movzbl	32(%rbx), %eax
	movq	%rax, %r14
	shrq	%r14
	testb	$1, %al
	cmovneq	40(%rbx), %r14
	cmpq	%r14, %r13
	movq	%r14, %rdx
	ja	0x10000586f
	movq	%r13, %rdx
	testq	%rdx, %rdx
	je	0x1000058a0
	leaq	32(%rbx), %rsi
	incq	%rsi
	testb	$1, %al
	cmovneq	48(%rbx), %rsi
	movq	%r12, %rdi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x1000058a0
	js	0x1000058a5
	movq	8(%rbx), %rax
	testq	%rax, %rax
	jne	0x100005850
	jmp	0x1000058bb
	nopl	(%rax,%rax)
	cmpq	%r14, %r13
	jae	0x100005890
	movq	(%rbx), %rax
	testq	%rax, %rax
	jne	0x100005850
	movq	%rbx, %rax
	jmp	0x1000058bf
	leaq	8(%r14), %rbx
	movq	%rbx, %rax
	jmp	0x1000058c3
	leaq	8(%rbx), %rax
	movq	-48(%rbp), %r14
	movq	$0, 8(%r15)
	movq	$0, (%r15)
	movq	%rbx, 16(%r15)
	movq	%r15, (%rax)
	movq	(%r14), %rcx
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	je	0x1000058ec
	movq	%rcx, (%r14)
	movq	(%rax), %rsi
	jmp	0x1000058ef
	movq	%r15, %rsi
	movq	8(%r14), %rdi
	callq	__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ ## void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
	incq	16(%r14)
	movq	%r15, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	movq	%r15, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	movq	%rsi, %r14
	movq	%rdi, %r12
	movabsq	$92233720368547758, %r13
	movq	(%r12), %rdx
	movq	8(%r12), %rbx
	subq	%rdx, %rbx
	sarq	$3, %rbx
	movabsq	$-8116567392432202711, %rdi
	imulq	%rdi, %rbx
	leaq	1(%rbx), %rcx
	cmpq	%r13, %rcx
	ja	0x100005bf8
	leaq	16(%r12), %rax
	movq	16(%r12), %rsi
	subq	%rdx, %rsi
	sarq	$3, %rsi
	imulq	%rdi, %rsi
	movabsq	$46116860184273879, %rdx
	cmpq	%rdx, %rsi
	jae	0x1000059c9
	addq	%rsi, %rsi
	cmpq	%rcx, %rsi
	movq	%rsi, %r13
	cmovbq	%rcx, %r13
	leaq	-56(%rbp), %r15
	movq	$0, -56(%rbp)
	movq	%rax, -48(%rbp)
	testq	%r13, %r13
	jne	0x1000059d9
	xorl	%r13d, %r13d
	xorl	%eax, %eax
	jmp	0x1000059e5
	leaq	-56(%rbp), %r15
	movq	$0, -56(%rbp)
	movq	%rax, -48(%rbp)
	imulq	$200, %r13, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, -80(%rbp)
	imulq	$200, %rbx, %rdi
	addq	%rax, %rdi
	movq	%rdi, -64(%rbp)
	movq	%rdi, -72(%rbp)
	imulq	$200, %r13, %rcx
	addq	%rax, %rcx
	movq	%rcx, -56(%rbp)
	movq	%r14, %rsi
	callq	__ZN9benchmark17BenchmarkReporter3RunC2ERKS1_ ## benchmark::BenchmarkReporter::Run::Run(benchmark::BenchmarkReporter::Run const&)
	movl	$200, %ecx
	addq	-64(%rbp), %rcx
	movq	%rcx, -64(%rbp)
	movq	(%r12), %rax
	movq	8(%r12), %rdx
	cmpq	%rax, %rdx
	je	0x100005bb7
	movq	-72(%rbp), %rbx
	addq	$-16, %rdx
	negq	%rax
	movq	$-200, %r8
	nopw	%cs:(%rax,%rax)
	movq	-168(%rdx), %rcx
	movq	%rcx, -184(%rbx)
	movq	-184(%rdx), %rcx
	movq	-176(%rdx), %rsi
	movq	%rsi, -192(%rbx)
	movq	%rcx, -200(%rbx)
	movq	$0, -168(%rdx)
	movq	$0, -176(%rdx)
	movq	$0, -184(%rdx)
	movq	-144(%rdx), %rcx
	movq	%rcx, -160(%rbx)
	movq	-160(%rdx), %rcx
	movq	-152(%rdx), %rsi
	movq	%rsi, -168(%rbx)
	movq	%rcx, -176(%rbx)
	movq	$0, -144(%rdx)
	movq	$0, -152(%rdx)
	movq	$0, -160(%rdx)
	movzbl	-136(%rdx), %ecx
	movb	%cl, -152(%rbx)
	movq	-112(%rdx), %rcx
	movq	%rcx, -128(%rbx)
	movq	-128(%rdx), %rcx
	movq	-120(%rdx), %rsi
	movq	%rsi, -136(%rbx)
	movq	%rcx, -144(%rbx)
	movq	$0, -128(%rdx)
	movq	$0, -112(%rdx)
	movq	$0, -120(%rdx)
	leaq	-120(%rbx), %rdi
	leaq	-104(%rdx), %rsi
	movl	$11, %ecx
	rep		movsq	(%rsi), %es:(%rdi)
	movzwl	-16(%rdx), %ecx
	movw	%cx, -32(%rbx)
	movq	-8(%rdx), %rcx
	movq	%rcx, -24(%rbx)
	leaq	-16(%rbx), %rcx
	movq	(%rdx), %rsi
	movq	%rsi, -16(%rbx)
	movq	8(%rdx), %rdi
	movq	%rdi, -8(%rbx)
	testq	%rdi, %rdi
	je	0x100005b80
	movq	%rcx, 16(%rsi)
	movq	%rdx, -8(%rdx)
	movq	$0, 8(%rdx)
	movq	$0, (%rdx)
	jmp	0x100005b84
	nopw	(%rax,%rax)
	movq	%rcx, -24(%rbx)
	movq	-72(%rbp), %rbx
	addq	%r8, %rbx
	movq	%rbx, -72(%rbp)
	leaq	-200(%rdx,%rax), %rcx
	addq	$-200, %rdx
	cmpq	$-16, %rcx
	jne	0x100005a50
	movq	(%r12), %rax
	movq	8(%r12), %rdx
	movq	-64(%rbp), %rcx
	jmp	0x100005bbb
	movq	-72(%rbp), %rbx
	movq	%rbx, (%r12)
	movq	%rax, -72(%rbp)
	movq	%rcx, 8(%r12)
	movq	%rdx, -64(%rbp)
	movq	16(%r12), %rcx
	movq	(%r15), %rdx
	movq	%rdx, 16(%r12)
	movq	%rcx, (%r15)
	movq	%rax, -80(%rbp)
	leaq	-80(%rbp), %rdi
	callq	__ZNSt3__114__split_bufferIN9benchmark17BenchmarkReporter3RunERNS_9allocatorIS3_EEED2Ev ## std::__1::__split_buffer<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run>&>::~__split_buffer()
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r12, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	leaq	-80(%rbp), %rdi
	callq	__ZNSt3__114__split_bufferIN9benchmark17BenchmarkReporter3RunERNS_9allocatorIS3_EEED2Ev ## std::__1::__split_buffer<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run>&>::~__split_buffer()
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark17BenchmarkReporter3RunC2ERKS1_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rsi, %rbx
	movq	%rdi, %r15
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	leaq	24(%r15), %r14
	leaq	24(%rbx), %rsi
	movq	%r14, %rdi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	movq	%r14, -48(%rbp)
	movb	48(%rbx), %al
	movb	%al, 48(%r15)
	leaq	56(%r15), %rdi
	leaq	56(%rbx), %rsi
	movq	%rdi, -56(%rbp)
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	leaq	80(%r15), %rdi
	leaq	80(%rbx), %rsi
	movl	$11, %ecx
	rep		movsq	(%rsi), %es:(%rdi)
	movzwl	168(%rbx), %eax
	movw	%ax, 168(%r15)
	leaq	184(%r15), %r13
	movq	$0, 192(%r15)
	movq	$0, 184(%r15)
	movq	%r13, 176(%r15)
	movq	176(%rbx), %r12
	addq	$184, %rbx
	cmpq	%rbx, %r12
	je	0x100005d29
	leaq	176(%r15), %r14
	nopw	%cs:(%rax,%rax)
	leaq	32(%r12), %rdx
	movq	%r14, %rdi
	movq	%r13, %rsi
	movq	%rdx, %rcx
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_S9_EEEEENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEENS_21__tree_const_iteratorISA_SR_lEERKT_DpOT0_ ## std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::__emplace_hint_unique_key_args<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, benchmark::Counter> const&>(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, benchmark::Counter> const&)
	movq	8(%r12), %rcx
	testq	%rcx, %rcx
	je	0x100005d00
	nopl	(%rax)
	movq	%rcx, %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	jne	0x100005cf0
	jmp	0x100005d21
	nopl	(%rax)
	movq	16(%r12), %rax
	cmpq	%r12, (%rax)
	je	0x100005d21
	addq	$16, %r12
	nop
	movq	(%r12), %rcx
	movq	16(%rcx), %rax
	cmpq	%rcx, (%rax)
	leaq	16(%rcx), %r12
	jne	0x100005d10
	cmpq	%rbx, %rax
	movq	%rax, %r12
	jne	0x100005cd0
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	movq	-48(%rbp), %rax
	testb	$1, (%rax)
	je	0x100005d72
	jmp	0x100005d92
	movq	%rax, %rbx
	testb	$1, (%r15)
	je	0x100005d78
	jmp	0x100005da1
	movq	%rax, %rbx
	movq	(%r13), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	-56(%rbp), %rax
	testb	$1, (%rax)
	jne	0x100005d80
	movq	-48(%rbp), %rax
	testb	$1, (%rax)
	jne	0x100005d92
	testb	$1, (%r15)
	jne	0x100005da1
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	72(%r15), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-48(%rbp), %rax
	testb	$1, (%rax)
	je	0x100005d72
	movq	40(%r15), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, (%r15)
	je	0x100005d78
	movq	16(%r15), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_S9_EEEEENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEENS_21__tree_const_iteratorISA_SR_lEERKT_DpOT0_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$16, %rsp
	movq	%rcx, %r12
	movq	%rdx, %rax
	movq	%rdi, %r14
	leaq	-40(%rbp), %rdx
	leaq	-48(%rbp), %rcx
	movq	%rax, %r8
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_SJ_EElEERPNS_15__tree_end_nodeISL_EESM_RKT_ ## std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	movq	%rax, %r15
	movq	(%r15), %rbx
	testq	%rbx, %rbx
	jne	0x100005e5b
	movl	$72, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	leaq	32(%rbx), %rdi
	movq	%r12, %rsi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	movq	24(%r12), %rax
	movq	32(%r12), %rcx
	movq	%rcx, 64(%rbx)
	movq	%rax, 56(%rbx)
	movq	-40(%rbp), %rax
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	movq	%rax, 16(%rbx)
	movq	%rbx, (%r15)
	movq	(%r14), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	0x100005e4b
	movq	%rax, (%r14)
	movq	(%r15), %rsi
	jmp	0x100005e4e
	movq	%rbx, %rsi
	movq	8(%r14), %rdi
	callq	__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ ## void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
	incq	16(%r14)
	movq	%rbx, %rax
	addq	$16, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nop
__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_SJ_EElEERPNS_15__tree_end_nodeISL_EESM_RKT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	movq	%rcx, %rbx
	movq	%rdx, %r9
	movq	%rsi, %r13
	movq	%rdi, %r10
	leaq	8(%r10), %rax
	movq	%rax, -56(%rbp)
	cmpq	%r13, %rax
	je	0x100005f9e
	leaq	32(%r13), %rax
	movzbl	32(%r13), %ecx
	movq	%rcx, %r15
	shrq	%r15
	testb	$1, %cl
	cmovneq	40(%r13), %r15
	movzbl	(%r8), %r11d
	movq	%r11, %r12
	shrq	%r12
	testb	$1, %r11b
	cmovneq	8(%r8), %r12
	cmpq	%r15, %r12
	movq	%r12, %rdx
	cmovaq	%r15, %rdx
	testq	%rdx, %rdx
	movq	%r9, -72(%rbp)
	movq	%r10, -64(%rbp)
	je	0x100005f99
	leaq	1(%r8), %rdi
	testb	$1, %r11b
	cmovneq	16(%r8), %rdi
	leaq	1(%rax), %rsi
	testb	$1, %cl
	cmovneq	48(%r13), %rsi
	movq	%r13, -48(%rbp)
	movq	%r8, %r14
	movq	%r11, %r13
	movq	%rax, -88(%rbp)
	movq	%rcx, -80(%rbp)
	callq	0x100029818 ## symbol stub for: _memcmp
	movq	-80(%rbp), %rcx
	movq	%r13, %r11
	movq	%r14, %r8
	movq	-64(%rbp), %r10
	movq	-72(%rbp), %r9
	movq	-48(%rbp), %r13
	testl	%eax, %eax
	movq	-88(%rbp), %rax
	je	0x100005f99
	js	0x100005f9e
	cmpq	%r12, %r15
	movq	%r15, %rdx
	cmovaq	%r12, %rdx
	testq	%rdx, %rdx
	je	0x100005fd5
	incq	%rax
	testb	$1, %cl
	cmovneq	48(%r13), %rax
	leaq	1(%r8), %rsi
	testb	$1, %r11b
	cmovneq	16(%r8), %rsi
	movq	%rax, %rdi
	movq	%r8, %r14
	movq	%r11, -48(%rbp)
	callq	0x100029818 ## symbol stub for: _memcmp
	movq	-48(%rbp), %r11
	movq	%r14, %r8
	movq	-72(%rbp), %r9
	testl	%eax, %eax
	je	0x100005fd5
	js	0x100005fda
	movq	%r13, (%r9)
	movq	%r13, (%rbx)
	jmp	0x1000060c8
	cmpq	%r15, %r12
	jae	0x100005f43
	cmpq	%r13, (%r10)
	movq	(%r13), %rsi
	je	0x100005fbe
	testq	%rsi, %rsi
	je	0x10000600d
	movq	%rsi, %rax
	nop
	movq	%rax, %rbx
	movq	8(%rbx), %rax
	testq	%rax, %rax
	jne	0x100005fb0
	jmp	0x10000601c
	movq	%r13, %rbx
	testq	%rsi, %rsi
	jne	0x1000060c1
	movq	%r13, (%r9)
	movq	%r13, %rbx
	jmp	0x1000060c8
	cmpq	%r15, %r12
	jbe	0x100005f8e
	movq	8(%r13), %r14
	testq	%r14, %r14
	je	0x1000060da
	movq	%r14, %rax
	nopw	(%rax,%rax)
	movq	%rax, %rbx
	movq	(%rbx), %rax
	testq	%rax, %rax
	jne	0x100005ff0
	movq	-56(%rbp), %rdx
	cmpq	%rdx, %rbx
	jne	0x100006105
	jmp	0x10000616b
	movq	%r13, %rax
	movq	16(%rax), %rbx
	cmpq	%rax, (%rbx)
	movq	%rbx, %rax
	je	0x100006010
	movzbl	(%r8), %eax
	movq	%rax, %r15
	shrq	%r15
	testb	$1, %al
	cmovneq	8(%r8), %r15
	movzbl	32(%rbx), %ecx
	movq	%rcx, %r12
	shrq	%r12
	testb	$1, %cl
	cmovneq	40(%rbx), %r12
	cmpq	%r15, %r12
	movq	%r12, %rdx
	cmovaq	%r15, %rdx
	testq	%rdx, %rdx
	je	0x1000060b3
	leaq	32(%rbx), %rdi
	incq	%rdi
	testb	$1, %cl
	cmovneq	48(%rbx), %rdi
	movq	%rsi, -56(%rbp)
	leaq	1(%r8), %rsi
	testb	$1, %al
	cmovneq	16(%r8), %rsi
	movq	%r13, -48(%rbp)
	movq	%r9, %r13
	movq	%r10, -64(%rbp)
	movq	%r8, %r14
	callq	0x100029818 ## symbol stub for: _memcmp
	movq	-56(%rbp), %rsi
	movq	%r14, %r8
	movq	-64(%rbp), %r10
	movq	%r13, %r9
	movq	-48(%rbp), %r13
	testl	%eax, %eax
	je	0x1000060b3
	js	0x1000060b8
	movq	%r10, %rdi
	movq	%r9, %rsi
	movq	%r8, %rdx
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_ ## std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	cmpq	%r15, %r12
	jae	0x100006097
	testq	%rsi, %rsi
	je	0x100005fca
	movq	%rbx, (%r9)
	addq	$8, %rbx
	movq	%rbx, %rax
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	16(%r13), %rbx
	cmpq	%r13, (%rbx)
	movq	-56(%rbp), %rdx
	je	0x100006100
	leaq	16(%r13), %rax
	nopl	(%rax,%rax)
	movq	(%rax), %rax
	movq	16(%rax), %rbx
	cmpq	%rax, (%rbx)
	leaq	16(%rax), %rax
	jne	0x1000060f0
	cmpq	%rdx, %rbx
	je	0x10000616b
	movzbl	32(%rbx), %eax
	movq	%rax, %r15
	shrq	%r15
	testb	$1, %al
	cmovneq	40(%rbx), %r15
	cmpq	%r15, %r12
	movq	%r12, %rdx
	cmovaq	%r15, %rdx
	testq	%rdx, %rdx
	je	0x100006166
	leaq	32(%rbx), %rsi
	leaq	1(%r8), %rdi
	testb	$1, %r11b
	cmovneq	16(%r8), %rdi
	incq	%rsi
	testb	$1, %al
	cmovneq	48(%rbx), %rsi
	movq	%r13, -48(%rbp)
	movq	%r8, %r13
	callq	0x100029818 ## symbol stub for: _memcmp
	movq	%r13, %r8
	movq	-72(%rbp), %r9
	movq	-48(%rbp), %r13
	testl	%eax, %eax
	je	0x100006166
	js	0x10000616b
	movq	-64(%rbp), %rdi
	jmp	0x10000609a
	cmpq	%r15, %r12
	jae	0x10000615d
	testq	%r14, %r14
	je	0x100006178
	movq	%rbx, (%r9)
	jmp	0x1000060c8
	movq	%r13, (%r9)
	addq	$8, %r13
	jmp	0x100005fcd
	nopw	%cs:(%rax,%rax)
__ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_:
__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	8(%rdi), %rbx
	addq	$8, %rdi
	testq	%rbx, %rbx
	je	0x10000629f
	movq	%rsi, -48(%rbp)
	movq	%rdi, -64(%rbp)
	movzbl	(%rdx), %eax
	movq	%rax, %r14
	shrq	%r14
	leaq	1(%rdx), %rcx
	andb	$1, %al
	cmovneq	16(%rdx), %rcx
	movq	%rcx, -56(%rbp)
	testb	%al, %al
	cmovneq	8(%rdx), %r14
	jmp	0x1000061e7
	nopl	(%rax,%rax)
	movq	%rdi, -64(%rbp)
	movq	%rax, %rbx
	movzbl	32(%rbx), %r12d
	movq	%r12, %r15
	shrq	%r15
	testb	$1, %r12b
	cmovneq	40(%rbx), %r15
	cmpq	%r15, %r14
	movq	%r15, %rdx
	ja	0x100006206
	movq	%r14, %rdx
	leaq	32(%rbx), %r13
	testq	%rdx, %rdx
	je	0x100006260
	leaq	1(%r13), %rsi
	testb	$1, %r12b
	cmovneq	48(%rbx), %rsi
	movq	-56(%rbp), %rdi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x100006260
	js	0x100006265
	cmpq	%r14, %r15
	movq	%r14, %rdx
	ja	0x100006236
	movq	%r15, %rdx
	testq	%rdx, %rdx
	je	0x100006280
	incq	%r13
	testb	$1, %r12b
	cmovneq	48(%rbx), %r13
	movq	%r13, %rdi
	movq	-56(%rbp), %rsi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x100006280
	js	0x100006285
	jmp	0x1000062b0
	nopl	(%rax,%rax)
	cmpq	%r15, %r14
	jae	0x10000622b
	movq	(%rbx), %rax
	testq	%rax, %rax
	movq	%rbx, %rdi
	jne	0x1000061e0
	jmp	0x1000062a4
	nopw	%cs:(%rax,%rax)
	cmpq	%r15, %r14
	jbe	0x1000062b0
	leaq	8(%rbx), %rdi
	movq	8(%rbx), %rax
	testq	%rax, %rax
	jne	0x1000061e0
	movq	-48(%rbp), %rax
	movq	%rbx, (%rax)
	jmp	0x1000062bb
	movq	%rdi, (%rsi)
	jmp	0x1000062bb
	movq	-48(%rbp), %rax
	movq	%rbx, (%rax)
	movq	%rbx, %rdi
	jmp	0x1000062bb
	movq	-48(%rbp), %rax
	movq	%rbx, (%rax)
	movq	-64(%rbp), %rdi
	movq	%rdi, %rax
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopl	(%rax)
__ZNSt3__114__split_bufferIN9benchmark17BenchmarkReporter3RunERNS_9allocatorIS3_EEED2Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rdi, %r15
	movq	8(%r15), %r14
	jmp	0x1000062fc
	nopw	%cs:(%rax,%rax)
	movq	-184(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	16(%r15), %rbx
	cmpq	%r14, %rbx
	je	0x100006367
	leaq	-200(%rbx), %r12
	movq	%r12, 16(%r15)
	leaq	-24(%rbx), %rdi
	movq	-16(%rbx), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -144(%rbx)
	jne	0x100006340
	testb	$1, -176(%rbx)
	jne	0x100006352
	testb	$1, (%r12)
	je	0x1000062fc
	jmp	0x1000062f0
	nopl	(%rax,%rax)
	movq	-128(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -176(%rbx)
	je	0x10000632f
	movq	-160(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, (%r12)
	je	0x1000062fc
	jmp	0x1000062f0
	movq	(%r15), %rdi
	testq	%rdi, %rdi
	je	0x10000637c
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EEPS3_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rsi, %r9
	movq	%rdi, %r8
	movq	8(%r9), %rax
	movq	(%r8), %r10
	cmpq	%rdx, %r10
	movq	%rax, %r14
	je	0x100006528
	leaq	-16(%rdx), %rbx
	negq	%r10
	movq	$-200, %r11
	movq	%rax, %r14
	nopw	%cs:(%rax,%rax)
	movq	-168(%rbx), %rcx
	movq	%rcx, -184(%r14)
	movq	-184(%rbx), %rcx
	movq	-176(%rbx), %rsi
	movq	%rsi, -192(%r14)
	movq	%rcx, -200(%r14)
	movq	$0, -168(%rbx)
	movq	$0, -176(%rbx)
	movq	$0, -184(%rbx)
	movq	-144(%rbx), %rcx
	movq	%rcx, -160(%r14)
	movq	-160(%rbx), %rcx
	movq	-152(%rbx), %rsi
	movq	%rsi, -168(%r14)
	movq	%rcx, -176(%r14)
	movq	$0, -144(%rbx)
	movq	$0, -152(%rbx)
	movq	$0, -160(%rbx)
	movzbl	-136(%rbx), %ecx
	movb	%cl, -152(%r14)
	movq	-112(%rbx), %rcx
	movq	%rcx, -128(%r14)
	movq	-128(%rbx), %rcx
	movq	-120(%rbx), %rsi
	movq	%rsi, -136(%r14)
	movq	%rcx, -144(%r14)
	movq	$0, -128(%rbx)
	movq	$0, -112(%rbx)
	movq	$0, -120(%rbx)
	leaq	-120(%r14), %rdi
	leaq	-104(%rbx), %rsi
	movl	$11, %ecx
	rep		movsq	(%rsi), %es:(%rdi)
	movzwl	-16(%rbx), %ecx
	movw	%cx, -32(%r14)
	movq	-8(%rbx), %rcx
	movq	%rcx, -24(%r14)
	leaq	-16(%r14), %rcx
	movq	(%rbx), %rsi
	movq	%rsi, -16(%r14)
	movq	8(%rbx), %rdi
	movq	%rdi, -8(%r14)
	testq	%rdi, %rdi
	je	0x100006500
	movq	%rcx, 16(%rsi)
	movq	%rbx, -8(%rbx)
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	jmp	0x100006504
	nopl	(%rax)
	movq	%rcx, -24(%r14)
	movq	8(%r9), %r14
	addq	%r11, %r14
	movq	%r14, 8(%r9)
	leaq	-200(%rbx,%r10), %rcx
	addq	$-200, %rbx
	cmpq	$-16, %rcx
	jne	0x1000063d0
	movq	8(%r8), %r11
	cmpq	%rdx, %r11
	je	0x10000669a
	movq	16(%r9), %rbx
	addq	$184, %rdx
	movl	$200, %r14d
	nopw	%cs:(%rax,%rax)
	movq	-168(%rdx), %rcx
	movq	%rcx, 16(%rbx)
	movq	-184(%rdx), %rcx
	movq	-176(%rdx), %rsi
	movq	%rsi, 8(%rbx)
	movq	%rcx, (%rbx)
	movq	$0, -168(%rdx)
	movq	$0, -176(%rdx)
	movq	$0, -184(%rdx)
	movq	-144(%rdx), %rcx
	movq	%rcx, 40(%rbx)
	movq	-160(%rdx), %rcx
	movq	-152(%rdx), %rsi
	movq	%rsi, 32(%rbx)
	movq	%rcx, 24(%rbx)
	movq	$0, -144(%rdx)
	movq	$0, -152(%rdx)
	movq	$0, -160(%rdx)
	movzbl	-136(%rdx), %ecx
	movb	%cl, 48(%rbx)
	movq	-112(%rdx), %rcx
	movq	%rcx, 72(%rbx)
	movq	-128(%rdx), %rcx
	movq	-120(%rdx), %rsi
	movq	%rsi, 64(%rbx)
	movq	%rcx, 56(%rbx)
	movq	$0, -112(%rdx)
	movq	$0, -120(%rdx)
	movq	$0, -128(%rdx)
	leaq	80(%rbx), %rdi
	leaq	-104(%rdx), %r10
	movl	$11, %ecx
	movq	%r10, %rsi
	rep		movsq	(%rsi), %es:(%rdi)
	movzwl	-16(%rdx), %ecx
	movw	%cx, 168(%rbx)
	movq	-8(%rdx), %rcx
	movq	%rcx, 176(%rbx)
	leaq	184(%rbx), %rcx
	movq	(%rdx), %rsi
	movq	%rsi, 184(%rbx)
	movq	8(%rdx), %rdi
	movq	%rdi, 192(%rbx)
	testq	%rdi, %rdi
	je	0x100006670
	movq	%rcx, 16(%rsi)
	movq	%rdx, -8(%rdx)
	movq	$0, 8(%rdx)
	movq	$0, (%rdx)
	jmp	0x100006677
	movq	%rcx, 176(%rbx)
	movq	16(%r9), %rbx
	addq	%r14, %rbx
	movq	%rbx, 16(%r9)
	addq	$200, %rdx
	addq	$120, %r10
	cmpq	%r11, %r10
	jne	0x100006550
	movq	8(%r9), %r14
	movq	(%r8), %rcx
	movq	%r14, (%r8)
	movq	%rcx, 8(%r9)
	movq	8(%r8), %rcx
	movq	16(%r9), %rdx
	movq	%rdx, 8(%r8)
	movq	%rcx, 16(%r9)
	movq	16(%r8), %rcx
	movq	24(%r9), %rdx
	movq	%rdx, 16(%r8)
	movq	%rcx, 24(%r9)
	movq	8(%r9), %rcx
	movq	%rcx, (%r9)
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
__ZN9benchmark17BenchmarkReporter3RunaSEOS1_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rsi, %r14
	movq	%rdi, %rbx
	testb	$1, (%rbx)
	jne	0x1000066ed
	movw	$0, (%rbx)
	jmp	0x1000066fc
	movq	16(%rbx), %rax
	movb	$0, (%rax)
	movq	$0, 8(%rbx)
	xorl	%esi, %esi
	movq	%rbx, %rdi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	movq	16(%r14), %rax
	movq	%rax, 16(%rbx)
	movq	(%r14), %rax
	movq	8(%r14), %rcx
	movq	%rcx, 8(%rbx)
	movq	%rax, (%rbx)
	movq	$0, 16(%r14)
	movq	$0, 8(%r14)
	movq	$0, (%r14)
	leaq	24(%rbx), %r15
	testb	$1, 24(%rbx)
	jne	0x100006745
	movw	$0, (%r15)
	jmp	0x100006754
	movq	40(%rbx), %rax
	movb	$0, (%rax)
	movq	$0, 32(%rbx)
	xorl	%esi, %esi
	movq	%r15, %rdi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	leaq	24(%r14), %rax
	movq	16(%rax), %rcx
	movq	%rcx, 16(%r15)
	movq	(%rax), %rcx
	movq	8(%rax), %rdx
	movq	%rdx, 8(%r15)
	movq	%rcx, (%r15)
	movq	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	movb	48(%r14), %al
	movb	%al, 48(%rbx)
	leaq	56(%rbx), %r15
	testb	$1, 56(%rbx)
	jne	0x1000067a8
	movw	$0, (%r15)
	jmp	0x1000067b7
	movq	72(%rbx), %rax
	movb	$0, (%rax)
	movq	$0, 64(%rbx)
	xorl	%esi, %esi
	movq	%r15, %rdi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	leaq	56(%r14), %rax
	movq	16(%rax), %rcx
	movq	%rcx, 16(%r15)
	movq	(%rax), %rcx
	movq	8(%rax), %rdx
	movq	%rdx, 8(%r15)
	movq	%rcx, (%r15)
	movq	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	leaq	80(%rbx), %rdi
	leaq	80(%r14), %rsi
	movl	$11, %ecx
	rep		movsq	(%rsi), %es:(%rdi)
	movzwl	168(%r14), %eax
	movw	%ax, 168(%rbx)
	leaq	176(%rbx), %r15
	leaq	184(%rbx), %r12
	movq	184(%rbx), %rsi
	movq	%r15, %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	176(%r14), %rax
	movq	%rax, 176(%rbx)
	movq	184(%r14), %rax
	movq	%rax, 184(%rbx)
	movq	192(%r14), %rcx
	movq	%rcx, 192(%rbx)
	testq	%rcx, %rcx
	je	0x100006880
	leaq	184(%r14), %rcx
	movq	%r12, 16(%rax)
	movq	%rcx, 176(%r14)
	movq	$0, 8(%rcx)
	movq	$0, (%rcx)
	jmp	0x100006883
	movq	%r12, (%r15)
	movq	%rbx, %rax
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rdi
	callq	___clang_call_terminate
	nopw	(%rax,%rax)
__ZNSt3__113__vector_baseIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEED2Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rdi, %r14
	movq	(%r14), %r15
	testq	%r15, %r15
	je	0x10000696b
	movq	8(%r14), %rbx
	cmpq	%r15, %rbx
	je	0x100006974
	nopw	(%rax,%rax)
	leaq	-24(%rbx), %rdi
	movq	-16(%rbx), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -144(%rbx)
	jne	0x100006920
	testb	$1, -176(%rbx)
	jne	0x100006932
	leaq	-200(%rbx), %r12
	testb	$1, -200(%rbx)
	jne	0x10000694e
	cmpq	%r12, %r15
	movq	%r12, %rbx
	jne	0x1000068e0
	jmp	0x100006966
	nopl	(%rax)
	movq	-128(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -176(%rbx)
	je	0x1000068ff
	movq	-160(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-200(%rbx), %r12
	testb	$1, -200(%rbx)
	je	0x10000690f
	movq	-184(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%r12, %r15
	movq	%r12, %rbx
	jne	0x1000068e0
	movq	(%r14), %rdi
	jmp	0x100006977
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r15, %rdi
	movq	%r15, 8(%r14)
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopl	(%rax,%rax)
__ZTv0_n24_NSt3__114basic_ofstreamIcNS_11char_traitsIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	(%rdi), %rax
	movq	-24(%rax), %rax
	leaq	(%rdi,%rax), %rbx
	movq	165815(%rip), %rcx
	leaq	24(%rcx), %rdx
	movq	%rdx, (%rdi,%rax)
	leaq	416(%rdi,%rax), %r14
	addq	$64, %rcx
	movq	%rcx, 416(%rdi,%rax)
	leaq	8(%rdi,%rax), %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	movq	165658(%rip), %rsi
	addq	$8, %rsi
	movq	%rbx, %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmp	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	nop
__ZNSt3__114basic_ofstreamIcNS_11char_traitsIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rdi, %rbx
	movq	165727(%rip), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, (%rbx)
	leaq	416(%rbx), %r14
	addq	$64, %rax
	movq	%rax, 416(%rbx)
	leaq	8(%rbx), %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	movq	165574(%rip), %rsi
	addq	$8, %rsi
	movq	%rbx, %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopw	(%rax,%rax)
__ZTv0_n24_NSt3__114basic_ofstreamIcNS_11char_traitsIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	(%rdi), %rax
	movq	-24(%rax), %rax
	leaq	(%rdi,%rax), %rbx
	movq	165623(%rip), %rcx
	leaq	24(%rcx), %rdx
	movq	%rdx, (%rdi,%rax)
	leaq	416(%rdi,%rax), %r14
	addq	$64, %rcx
	movq	%rcx, 416(%rdi,%rax)
	leaq	8(%rdi,%rax), %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	movq	165466(%rip), %rsi
	addq	$8, %rsi
	movq	%rbx, %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopw	%cs:(%rax,%rax)
__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	nopw	(%rax,%rax)
__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	165484(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	120(%rbx), %r14
	testq	%r14, %r14
	je	0x100006b10
	movq	%rbx, %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4syncEv ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::sync()
	movq	%r14, %rdi
	callq	0x1000297b2 ## symbol stub for: _fclose
	testl	%eax, %eax
	jne	0x100006b10
	movq	$0, 120(%rbx)
	cmpb	$0, 400(%rbx)
	je	0x100006b27
	movq	64(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100006b27
	callq	0x100029734 ## symbol stub for: __ZdaPv
	cmpb	$0, 401(%rbx)
	je	0x100006b3e
	movq	104(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100006b3e
	callq	0x100029734 ## symbol stub for: __ZdaPv
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	%rax, %r15
	movq	%r14, %rdi
	callq	0x1000297b2 ## symbol stub for: _fclose
	movq	%r15, %rdi
	callq	0x10002975e ## symbol stub for: ___cxa_begin_catch
	callq	0x100029764 ## symbol stub for: ___cxa_end_catch
	jmp	0x100006b10
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	callq	___clang_call_terminate
	nopl	(%rax)
__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopl	(%rax)
__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	(%rbx), %rax
	callq	*48(%rax)
	movq	165070(%rip), %rsi ## literal pool symbol address: __ZNSt3__17codecvtIcc11__mbstate_tE2idE
	movq	%r14, %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	%rax, 128(%rbx)
	movq	(%rax), %rcx
	movzbl	402(%rbx), %r14d
	movq	%rax, %rdi
	callq	*56(%rcx)
	movb	%al, 402(%rbx)
	movzbl	%al, %ecx
	cmpl	%ecx, %r14d
	je	0x100006cbb
	movq	$0, 56(%rbx)
	movq	$0, 48(%rbx)
	movq	$0, 40(%rbx)
	movq	$0, 32(%rbx)
	movq	$0, 24(%rbx)
	movq	$0, 16(%rbx)
	movb	400(%rbx), %cl
	testb	%al, %al
	je	0x100006c6d
	testb	%cl, %cl
	je	0x100006c38
	movq	64(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100006c38
	callq	0x100029734 ## symbol stub for: __ZdaPv
	movb	401(%rbx), %al
	movb	%al, 400(%rbx)
	movq	104(%rbx), %rax
	movq	112(%rbx), %rcx
	movq	%rcx, 96(%rbx)
	movq	%rax, 64(%rbx)
	movb	$0, 401(%rbx)
	movq	$0, 112(%rbx)
	movq	$0, 104(%rbx)
	jmp	0x100006cbb
	testb	%cl, %cl
	je	0x100006c8b
	movq	96(%rbx), %rdi
	movq	%rdi, 112(%rbx)
	callq	0x100029740 ## symbol stub for: __Znam
	movq	%rax, 104(%rbx)
	movb	$1, 401(%rbx)
	jmp	0x100006cbb
	movq	64(%rbx), %rax
	leaq	88(%rbx), %rcx
	cmpq	%rcx, %rax
	je	0x100006c71
	movq	96(%rbx), %rdi
	movq	%rdi, 112(%rbx)
	movq	%rax, 104(%rbx)
	movb	$0, 401(%rbx)
	callq	0x100029740 ## symbol stub for: __Znam
	movq	%rax, 64(%rbx)
	movb	$1, 400(%rbx)
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE6setbufEPcl:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rdx, %r15
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	$0, 56(%rbx)
	movq	$0, 48(%rbx)
	movq	$0, 40(%rbx)
	movq	$0, 32(%rbx)
	movq	$0, 24(%rbx)
	movq	$0, 16(%rbx)
	cmpb	$0, 400(%rbx)
	je	0x100006d1b
	movq	64(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100006d1b
	callq	0x100029734 ## symbol stub for: __ZdaPv
	cmpb	$0, 401(%rbx)
	je	0x100006d32
	movq	104(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100006d32
	callq	0x100029734 ## symbol stub for: __ZdaPv
	movq	%r15, 96(%rbx)
	cmpq	$9, %r15
	jb	0x100006d54
	movb	402(%rbx), %r12b
	testq	%r14, %r14
	je	0x100006da0
	testb	%r12b, %r12b
	je	0x100006da0
	xorl	%ecx, %ecx
	movq	%r14, %rax
	jmp	0x100006daa
	leaq	88(%rbx), %rax
	movq	%rax, 64(%rbx)
	movq	$8, 96(%rbx)
	movb	402(%rbx), %r12b
	xorl	%ecx, %ecx
	movb	%cl, 400(%rbx)
	testb	%r12b, %r12b
	jne	0x100006db9
	cmpq	$7, %r15
	movl	$8, %edi
	cmovgq	%r15, %rdi
	movq	%rdi, 112(%rbx)
	testq	%r14, %r14
	je	0x100006d94
	cmpq	$7, %rdi
	ja	0x100006dc4
	callq	0x100029740 ## symbol stub for: __Znam
	movq	%rax, %r14
	movb	$1, %al
	jmp	0x100006dc6
	movq	%r15, %rdi
	callq	0x100029740 ## symbol stub for: __Znam
	movb	$1, %cl
	movq	%rax, 64(%rbx)
	movb	%cl, 400(%rbx)
	testb	%r12b, %r12b
	je	0x100006d78
	movq	$0, 112(%rbx)
	xorl	%r14d, %r14d
	xorl	%eax, %eax
	movq	%r14, 104(%rbx)
	movb	%al, 401(%rbx)
	movq	%rbx, %rax
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopl	(%rax)
__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movl	%ecx, %r15d
	movq	%rdx, %r12
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	128(%r14), %rdi
	testq	%rdi, %rdi
	je	0x100006f19
	movq	(%rdi), %rax
	callq	*48(%rax)
	movl	%eax, %r13d
	cmpq	$0, 120(%r14)
	je	0x100006e5a
	testq	%r12, %r12
	je	0x100006e24
	testl	%r13d, %r13d
	jle	0x100006e5a
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*48(%rax)
	testl	%eax, %eax
	jne	0x100006e5a
	cmpl	$3, %r15d
	jae	0x100006e5a
	movq	120(%r14), %rdi
	movslq	%r13d, %rax
	imulq	%rax, %r12
	xorl	%esi, %esi
	testl	%eax, %eax
	cmovgq	%r12, %rsi
	movl	%r15d, %edx
	callq	0x1000297d6 ## symbol stub for: _fseeko
	testl	%eax, %eax
	je	0x100006ef9
	movq	$0, 120(%rbx)
	movq	$0, 112(%rbx)
	movq	$0, 104(%rbx)
	movq	$0, 96(%rbx)
	movq	$0, 88(%rbx)
	movq	$0, 80(%rbx)
	movq	$0, 72(%rbx)
	movq	$0, 64(%rbx)
	movq	$0, 56(%rbx)
	movq	$0, 48(%rbx)
	movq	$0, 40(%rbx)
	movq	$0, 32(%rbx)
	movq	$0, 24(%rbx)
	movq	$0, 16(%rbx)
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	movq	$-1, %rax
	movq	%rax, 128(%rbx)
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	120(%r14), %rdi
	callq	0x1000297dc ## symbol stub for: _ftello
	addq	$136, %r14
	movl	$16, %ecx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	rep		movsq	(%rsi), %es:(%rdi)
	jmp	0x100006ee0
	movl	$8, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movq	%rbx, %rdi
	callq	0x100029728 ## symbol stub for: __ZNSt8bad_castC1Ev
	movq	164259(%rip), %rsi ## literal pool symbol address: __ZTISt8bad_cast
	movq	164196(%rip), %rdx ## literal pool symbol address: __ZNSt8bad_castD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	nopw	%cs:(%rax,%rax)
__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r14
	movq	%rdi, %rbx
	cmpq	$0, 120(%r14)
	je	0x100006f92
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*48(%rax)
	testl	%eax, %eax
	jne	0x100006f92
	leaq	16(%rbp), %r15
	movq	120(%r14), %rdi
	movq	128(%r15), %rsi
	xorl	%edx, %edx
	callq	0x1000297d6 ## symbol stub for: _fseeko
	testl	%eax, %eax
	je	0x10000702a
	movq	$0, 120(%rbx)
	movq	$0, 112(%rbx)
	movq	$0, 104(%rbx)
	movq	$0, 96(%rbx)
	movq	$0, 88(%rbx)
	movq	$0, 80(%rbx)
	movq	$0, 72(%rbx)
	movq	$0, 64(%rbx)
	movq	$0, 56(%rbx)
	movq	$0, 48(%rbx)
	movq	$0, 40(%rbx)
	movq	$0, 32(%rbx)
	movq	$0, 24(%rbx)
	movq	$0, 16(%rbx)
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	movq	$-1, 128(%rbx)
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	addq	$136, %r14
	movl	$16, %ecx
	movq	%r14, %rdi
	movq	%r15, %rsi
	rep		movsq	(%rsi), %es:(%rdi)
	movl	$136, %edx
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	0x10002981e ## symbol stub for: _memcpy
	jmp	0x10000701c
	nopw	%cs:(%rax,%rax)
__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4syncEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$136, %rsp
	movq	%rdi, %r15
	movq	164274(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	movq	%rax, -48(%rbp)
	xorl	%r13d, %r13d
	cmpq	$0, 120(%r15)
	je	0x10000722e
	movq	128(%r15), %rax
	testq	%rax, %rax
	je	0x100007296
	movl	396(%r15), %ecx
	testb	$16, %cl
	jne	0x1000070e9
	testb	$8, %cl
	je	0x10000722b
	leaq	264(%r15), %rsi
	leaq	-176(%rbp), %rdi
	movl	$16, %ecx
	rep		movsq	(%rsi), %es:(%rdi)
	cmpb	$0, 402(%r15)
	je	0x100007193
	movq	32(%r15), %r14
	subq	24(%r15), %r14
	jmp	0x1000071c0
	movq	48(%r15), %rax
	cmpq	40(%r15), %rax
	je	0x100007110
	movq	(%r15), %rax
	movl	$4294967295, %r13d
	movl	$4294967295, %esi
	movq	%r15, %rdi
	callq	*104(%rax)
	cmpl	$-1, %eax
	je	0x10000722e
	leaq	136(%r15), %r14
	movl	$4294967295, %r13d
	nopl	(%rax)
	movq	64(%r15), %rdx
	movq	128(%r15), %rdi
	movq	96(%r15), %rcx
	addq	%rdx, %rcx
	movq	(%rdi), %rax
	movq	%r14, %rsi
	leaq	-176(%rbp), %r8
	callq	*40(%rax)
	movl	%eax, %r12d
	movq	-176(%rbp), %rbx
	movq	64(%r15), %rdi
	movq	120(%r15), %rcx
	subq	%rdi, %rbx
	movl	$1, %esi
	movq	%rbx, %rdx
	callq	0x1000297e2 ## symbol stub for: _fwrite
	cmpq	%rbx, %rax
	jne	0x10000722e
	cmpl	$1, %r12d
	je	0x100007120
	cmpl	$2, %r12d
	je	0x10000722e
	movq	120(%r15), %rdi
	callq	0x1000297b8 ## symbol stub for: _fflush
	testl	%eax, %eax
	jne	0x10000722e
	jmp	0x10000722b
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*48(%rcx)
	movq	72(%r15), %rcx
	movq	80(%r15), %r14
	subq	%rcx, %r14
	testl	%eax, %eax
	jle	0x100007253
	cltq
	movq	32(%r15), %rcx
	subq	24(%r15), %rcx
	imulq	%rax, %rcx
	addq	%rcx, %r14
	xorl	%ebx, %ebx
	movq	120(%r15), %rdi
	negq	%r14
	movl	$1, %edx
	movq	%r14, %rsi
	callq	0x1000297d6 ## symbol stub for: _fseeko
	testl	%eax, %eax
	je	0x1000071e2
	movl	$4294967295, %r13d
	jmp	0x10000722e
	testb	%bl, %bl
	je	0x1000071fc
	leaq	136(%r15), %rdi
	leaq	-176(%rbp), %rsi
	movl	$16, %ecx
	rep		movsq	(%rsi), %es:(%rdi)
	movq	64(%r15), %rax
	movq	%rax, 80(%r15)
	movq	%rax, 72(%r15)
	movl	$0, 396(%r15)
	movq	$0, 32(%r15)
	movq	$0, 24(%r15)
	movq	$0, 16(%r15)
	xorl	%r13d, %r13d
	movq	163835(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	cmpq	-48(%rbp), %rax
	jne	0x100007291
	movl	%r13d, %eax
	addq	$136, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	24(%r15), %r8
	cmpq	32(%r15), %r8
	je	0x1000071c0
	movq	64(%r15), %rdx
	movq	128(%r15), %rdi
	subq	16(%r15), %r8
	movq	(%rdi), %rax
	leaq	-176(%rbp), %rsi
	callq	*64(%rax)
	cltq
	addq	72(%r15), %r14
	subq	%rax, %r14
	subq	64(%r15), %r14
	movb	$1, %bl
	jmp	0x1000071c2
	callq	0x1000297a0 ## symbol stub for: ___stack_chk_fail
	movl	$8, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movq	%rbx, %rdi
	callq	0x100029728 ## symbol stub for: __ZNSt8bad_castC1Ev
	movq	163366(%rip), %rsi ## literal pool symbol address: __ZTISt8bad_cast
	movq	163303(%rip), %rdx ## literal pool symbol address: __ZNSt8bad_castD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	nopw	%cs:(%rax,%rax)
__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9underflowEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rdi, %rbx
	cmpq	$0, 120(%rbx)
	je	0x100007383
	testb	$8, 396(%rbx)
	jne	0x10000738d
	movq	$0, 56(%rbx)
	movq	$0, 48(%rbx)
	movq	$0, 40(%rbx)
	leaq	104(%rbx), %rax
	leaq	112(%rbx), %rcx
	leaq	64(%rbx), %rdx
	leaq	96(%rbx), %rsi
	cmpb	$0, 402(%rbx)
	cmoveq	%rcx, %rsi
	cmoveq	%rax, %rdx
	movq	(%rdx), %rax
	movq	(%rsi), %rsi
	addq	%rax, %rsi
	movq	%rax, 16(%rbx)
	movq	%rsi, 24(%rbx)
	movq	%rsi, 32(%rbx)
	movl	$8, 396(%rbx)
	movb	$1, %al
	testq	%rsi, %rsi
	je	0x100007398
	testb	%al, %al
	je	0x1000073b0
	movq	32(%rbx), %rax
	xorl	%r14d, %r14d
	cmpq	%rax, %rsi
	je	0x1000073db
	movzbl	(%rsi), %eax
	leaq	16(%rbx), %r12
	leaq	-41(%rbp), %rcx
	cmpq	%rcx, (%r12)
	jne	0x100007578
	jmp	0x100007560
	movl	$4294967295, %eax
	jmp	0x100007578
	movq	24(%rbx), %rsi
	xorl	%eax, %eax
	testq	%rsi, %rsi
	jne	0x100007359
	leaq	-40(%rbp), %rsi
	leaq	-41(%rbp), %rcx
	movq	%rcx, 16(%rbx)
	movq	%rsi, 24(%rbx)
	movq	%rsi, 32(%rbx)
	testb	%al, %al
	jne	0x10000735d
	movq	32(%rbx), %rax
	movq	%rax, %rcx
	subq	16(%rbx), %rcx
	movq	%rcx, %rdx
	shrq	$63, %rdx
	addq	%rcx, %rdx
	sarq	%rdx
	cmpq	$4, %rdx
	movl	$4, %r14d
	cmovbq	%rdx, %r14
	cmpq	%rax, %rsi
	jne	0x100007369
	leaq	16(%rbx), %r12
	movq	16(%rbx), %rdi
	subq	%r14, %rsi
	movq	%r14, %rdx
	callq	0x100029824 ## symbol stub for: _memmove
	cmpb	$0, 402(%rbx)
	je	0x10000744a
	movq	16(%rbx), %rdi
	movq	32(%rbx), %rdx
	subq	%r14, %rdx
	subq	%rdi, %rdx
	addq	%r14, %rdi
	movq	120(%rbx), %rcx
	movl	$1, %esi
	callq	0x1000297d0 ## symbol stub for: _fread
	testq	%rax, %rax
	je	0x100007551
	movq	16(%rbx), %rcx
	leaq	(%rcx,%r14), %rdx
	addq	%rdx, %rax
	movq	%rdx, 24(%rbx)
	movq	%rax, 32(%rbx)
	movzbl	(%rcx,%r14), %eax
	leaq	-41(%rbp), %rcx
	cmpq	%rcx, (%r12)
	jne	0x100007578
	jmp	0x100007560
	movq	72(%rbx), %rsi
	movq	80(%rbx), %rax
	movq	%rax, %rdx
	subq	%rsi, %rdx
	je	0x10000746b
	movq	64(%rbx), %rdi
	callq	0x100029824 ## symbol stub for: _memmove
	movq	72(%rbx), %rsi
	movq	80(%rbx), %rax
	subq	%rsi, %rax
	movq	64(%rbx), %rdx
	addq	%rdx, %rax
	movq	%rax, 72(%rbx)
	leaq	88(%rbx), %rcx
	cmpq	%rcx, %rdx
	je	0x100007488
	movq	96(%rbx), %rcx
	jmp	0x10000748d
	movl	$8, %ecx
	addq	%rcx, %rdx
	movq	%rdx, 80(%rbx)
	movq	112(%rbx), %rcx
	subq	%r14, %rcx
	subq	%rax, %rdx
	cmpq	%rcx, %rdx
	cmovaeq	%rcx, %rdx
	leaq	136(%rbx), %r15
	leaq	264(%rbx), %rdi
	movl	$16, %ecx
	movq	%r15, %rsi
	rep		movsq	(%rsi), %es:(%rdi)
	movq	120(%rbx), %rcx
	movl	$1, %esi
	movq	%rax, %rdi
	callq	0x1000297d0 ## symbol stub for: _fread
	testq	%rax, %rax
	je	0x100007551
	movq	128(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100007587
	leaq	72(%rbx), %r8
	addq	72(%rbx), %rax
	movq	%rax, 80(%rbx)
	movq	16(%rbx), %r10
	movq	64(%rbx), %rdx
	leaq	(%r10,%r14), %r9
	addq	112(%rbx), %r10
	movq	(%rdi), %r11
	leaq	-56(%rbp), %r13
	movq	%r15, %rsi
	movq	%rax, %rcx
	pushq	%r13
	pushq	%r10
	callq	*32(%r11)
	addq	$16, %rsp
	cmpl	$3, %eax
	jne	0x10000752c
	movq	64(%rbx), %r14
	movq	80(%rbx), %rax
	movq	%r14, 16(%rbx)
	jmp	0x100007539
	movq	-56(%rbp), %rax
	addq	(%r12), %r14
	cmpq	%r14, %rax
	je	0x100007551
	movq	%r14, 24(%rbx)
	movq	%rax, 32(%rbx)
	movzbl	(%r14), %eax
	leaq	-41(%rbp), %rcx
	cmpq	%rcx, (%r12)
	jne	0x100007578
	jmp	0x100007560
	movl	$4294967295, %eax
	leaq	-41(%rbp), %rcx
	cmpq	%rcx, (%r12)
	jne	0x100007578
	movq	$0, 16(%rbx)
	movq	$0, 24(%rbx)
	movq	$0, 32(%rbx)
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movl	$8, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movq	%rbx, %rdi
	callq	0x100029728 ## symbol stub for: __ZNSt8bad_castC1Ev
	movq	162613(%rip), %rsi ## literal pool symbol address: __ZTISt8bad_cast
	movq	162550(%rip), %rdx ## literal pool symbol address: __ZNSt8bad_castD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	nopw	%cs:(%rax,%rax)
__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$4294967295, %eax
	cmpq	$0, 120(%rdi)
	je	0x1000075fa
	movq	24(%rdi), %rcx
	cmpq	%rcx, 16(%rdi)
	jae	0x1000075fa
	cmpl	$-1, %esi
	je	0x1000075fc
	testb	$16, 392(%rdi)
	jne	0x1000075ee
	cmpb	%sil, -1(%rcx)
	jne	0x1000075fa
	decq	%rcx
	movq	%rcx, 24(%rdi)
	movb	%sil, (%rcx)
	movl	%esi, %eax
	popq	%rbp
	retq
	decq	%rcx
	movq	%rcx, 24(%rdi)
	xorl	%eax, %eax
	popq	%rbp
	retq
	nopw	(%rax,%rax)
__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE8overflowEi:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	movq	%rdi, %r14
	cmpq	$0, 120(%r14)
	je	0x100007874
	testb	$16, 396(%r14)
	jne	0x10000766b
	movq	$0, 32(%r14)
	movq	$0, 24(%r14)
	movq	$0, 16(%r14)
	movq	96(%r14), %rcx
	cmpq	$9, %rcx
	jb	0x100007675
	cmpb	$0, 402(%r14)
	je	0x10000767c
	movq	64(%r14), %rax
	jmp	0x100007684
	movq	40(%r14), %rax
	movq	56(%r14), %r12
	jmp	0x1000076a0
	xorl	%eax, %eax
	xorl	%r12d, %r12d
	jmp	0x100007689
	movq	104(%r14), %rax
	movq	112(%r14), %rcx
	leaq	-1(%rax,%rcx), %r12
	movq	%rax, 48(%r14)
	movq	%rax, 40(%r14)
	movq	%r12, 56(%r14)
	movl	$16, 396(%r14)
	movq	%rax, %r13
	cmpl	$-1, %esi
	movq	48(%r14), %rcx
	je	0x1000076d7
	testq	%rcx, %rcx
	jne	0x1000076c5
	leaq	-40(%rbp), %rax
	leaq	-41(%rbp), %rcx
	movq	%rcx, 48(%r14)
	movq	%rcx, 40(%r14)
	movq	%rax, 56(%r14)
	movb	%sil, (%rcx)
	movq	40(%r14), %rax
	movq	48(%r14), %rcx
	incq	%rcx
	movq	%rcx, 48(%r14)
	movq	%rcx, %r15
	subq	%rax, %r15
	je	0x100007720
	movl	%esi, -68(%rbp)
	cmpb	$0, 402(%r14)
	je	0x10000772d
	movq	120(%r14), %rcx
	movl	$1, %esi
	movq	%rax, %rdi
	movq	%r15, %rdx
	callq	0x1000297e2 ## symbol stub for: _fwrite
	movq	%rax, %rcx
	movl	$4294967295, %eax
	cmpq	%r15, %rcx
	jne	0x100007879
	movq	%r13, 48(%r14)
	movq	%r13, 40(%r14)
	movq	%r12, 56(%r14)
	movl	-68(%rbp), %esi
	xorl	%eax, %eax
	cmpl	$-1, %esi
	cmovnel	%esi, %eax
	jmp	0x100007879
	movq	%r13, -80(%rbp)
	movq	%r12, -88(%rbp)
	movq	64(%r14), %r9
	movq	%r9, -64(%rbp)
	movq	128(%r14), %rdi
	testq	%rdi, %rdi
	je	0x10000781f
	leaq	136(%r14), %r15
	movq	96(%r14), %r10
	addq	%r9, %r10
	movq	(%rdi), %r11
	leaq	-64(%rbp), %rbx
	leaq	-56(%rbp), %r8
	movq	%r15, %rsi
	movq	%rax, %rdx
	pushq	%rbx
	pushq	%r10
	callq	*24(%r11)
	jmp	0x10000779f
	nopw	%cs:(%rax,%rax)
	movq	64(%r14), %r9
	movq	96(%r14), %rax
	addq	%r9, %rax
	movq	(%rdi), %r10
	movq	%r15, %rsi
	leaq	-56(%rbp), %r8
	leaq	-64(%rbp), %rbx
	pushq	%rbx
	pushq	%rax
	callq	*24(%r10)
	addq	$16, %rsp
	movl	%eax, %r13d
	movq	40(%r14), %rdi
	cmpq	%rdi, -56(%rbp)
	je	0x100007874
	cmpl	$3, %r13d
	je	0x10000784a
	cmpl	$1, %r13d
	ja	0x100007874
	movq	-64(%rbp), %r12
	movq	64(%r14), %rdi
	movq	120(%r14), %rcx
	subq	%rdi, %r12
	movl	$1, %esi
	movq	%r12, %rdx
	callq	0x1000297e2 ## symbol stub for: _fwrite
	cmpq	%r12, %rax
	jne	0x100007874
	cmpl	$1, %r13d
	jne	0x100007867
	movq	-56(%rbp), %rdx
	movq	48(%r14), %rax
	movq	%rdx, 40(%r14)
	movq	%rax, 56(%r14)
	subl	%edx, %eax
	movslq	%eax, %rcx
	addq	%rdx, %rcx
	movq	%rcx, 48(%r14)
	movq	128(%r14), %rdi
	testq	%rdi, %rdi
	jne	0x100007780
	movl	$8, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movq	%rbx, %rdi
	callq	0x100029728 ## symbol stub for: __ZNSt8bad_castC1Ev
	movq	161949(%rip), %rsi ## literal pool symbol address: __ZTISt8bad_cast
	movq	161886(%rip), %rdx ## literal pool symbol address: __ZNSt8bad_castD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	48(%r14), %r15
	movq	120(%r14), %rcx
	subq	%rdi, %r15
	movl	$1, %esi
	movq	%r15, %rdx
	callq	0x1000297e2 ## symbol stub for: _fwrite
	cmpq	%r15, %rax
	jne	0x100007874
	movq	-88(%rbp), %r12
	movq	-80(%rbp), %r13
	jmp	0x100007711
	movl	$4294967295, %eax
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %rbx
	leaq	-80(%rbp), %rdi
	movq	%rbx, %rsi
	callq	0x100029638 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
	cmpb	$0, -80(%rbp)
	je	0x10000796e
	movq	(%rbx), %rax
	movq	-24(%rax), %rax
	leaq	(%rbx,%rax), %r12
	movq	40(%rbx,%rax), %rdi
	movl	8(%rbx,%rax), %r13d
	movl	144(%rbx,%rax), %eax
	cmpl	$-1, %eax
	jne	0x10000792b
	movq	%rdi, -64(%rbp)
	leaq	-56(%rbp), %rdi
	movq	%r12, %rsi
	callq	0x1000295c0 ## symbol stub for: __ZNKSt3__18ios_base6getlocEv
	movq	161664(%rip), %rsi ## literal pool symbol address: __ZNSt3__15ctypeIcE2idE
	leaq	-56(%rbp), %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	(%rax), %rcx
	movl	$32, %esi
	movq	%rax, %rdi
	callq	*56(%rcx)
	movb	%al, -41(%rbp)
	leaq	-56(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movsbl	-41(%rbp), %eax
	movl	%eax, 144(%r12)
	movq	-64(%rbp), %rdi
	addq	%r15, %r14
	andl	$176, %r13d
	cmpl	$32, %r13d
	movq	%r15, %rdx
	cmoveq	%r14, %rdx
	movsbl	%al, %r9d
	movq	%r15, %rsi
	movq	%r14, %rcx
	movq	%r12, %r8
	callq	__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ ## std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char)
	testq	%rax, %rax
	jne	0x10000796e
	movq	(%rbx), %rax
	movq	-24(%rax), %rax
	leaq	(%rbx,%rax), %rdi
	movl	32(%rbx,%rax), %esi
	orl	$5, %esi
	callq	0x100029716 ## symbol stub for: __ZNSt3__18ios_base5clearEj
	leaq	-80(%rbp), %rdi
	callq	0x10002963e ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
	movq	%rbx, %rax
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	jmp	0x100007999
	movq	%rax, %r14
	leaq	-56(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	jmp	0x10000799c
	movq	%rax, %r14
	leaq	-80(%rbp), %rdi
	callq	0x10002963e ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
	jmp	0x1000079aa
	movq	%rax, %r14
	movq	%r14, %rdi
	callq	0x10002975e ## symbol stub for: ___cxa_begin_catch
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	addq	-24(%rax), %rdi
	callq	0x100029704 ## symbol stub for: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
	callq	0x100029764 ## symbol stub for: ___cxa_end_catch
	jmp	0x100007977
	movq	%rax, %rbx
	callq	0x100029764 ## symbol stub for: ___cxa_end_catch
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %rdi
	callq	___clang_call_terminate
__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$72, %rsp
	movq	%r8, %r14
	movq	%rcx, %r12
	movq	%rdi, %r13
	testq	%r13, %r13
	je	0x100007b14
	movl	%r9d, -44(%rbp)
	movq	%r12, %rax
	subq	%rsi, %rax
	movq	24(%r14), %rcx
	xorl	%r15d, %r15d
	subq	%rax, %rcx
	cmovgq	%rcx, %r15
	movq	%rdx, -104(%rbp)
	movq	%rdx, %rbx
	subq	%rsi, %rbx
	testq	%rbx, %rbx
	jle	0x100007a40
	movq	(%r13), %rax
	movq	%r13, %rdi
	movq	%rbx, %rdx
	callq	*96(%rax)
	cmpq	%rbx, %rax
	jne	0x100007b14
	testq	%r15, %r15
	jle	0x100007aec
	movq	%r12, -88(%rbp)
	movq	%r14, -96(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -80(%rbp)
	movq	$0, -64(%rbp)
	cmpq	$23, %r15
	jae	0x100007a77
	movl	%r15d, %eax
	addb	%al, %al
	movb	%al, -80(%rbp)
	leaq	-79(%rbp), %r14
	movq	%r14, %r12
	jmp	0x100007a9e
	leaq	16(%r15), %rbx
	andq	$-16, %rbx
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r12
	movq	%r12, -64(%rbp)
	orq	$1, %rbx
	movq	%rbx, -80(%rbp)
	movq	%r15, -72(%rbp)
	leaq	-79(%rbp), %r14
	movl	-44(%rbp), %eax
	movzbl	%al, %esi
	movq	%r12, %rdi
	movq	%r15, %rdx
	callq	0x10002982a ## symbol stub for: _memset
	movb	$0, (%r12,%r15)
	testb	$1, -80(%rbp)
	cmovneq	-64(%rbp), %r14
	movq	(%r13), %rax
	movq	%r13, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	*96(%rax)
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	movq	-96(%rbp), %r14
	movq	-88(%rbp), %r12
	je	0x100007ae7
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%r15, %rbx
	jne	0x100007b14
	movq	-104(%rbp), %rsi
	subq	%rsi, %r12
	testq	%r12, %r12
	jle	0x100007b0a
	movq	(%r13), %rax
	movq	%r13, %rdi
	movq	%r12, %rdx
	callq	*96(%rax)
	cmpq	%r12, %rax
	jne	0x100007b14
	movq	$0, 24(%r14)
	jmp	0x100007b17
	xorl	%r13d, %r13d
	movq	%r13, %rax
	addq	$72, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	je	0x100007b3b
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC2Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	callq	0x10002967a ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
	movq	161255(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	leaq	96(%rbx), %rdi
	movq	$0, 80(%rbx)
	movq	$0, 72(%rbx)
	movq	$0, 64(%rbx)
	movl	$307, %esi
	callq	0x10002974c ## symbol stub for: ___bzero
	leaq	8(%rbx), %r14
	leaq	-32(%rbp), %r15
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	0x1000296e0 ## symbol stub for: __ZNSt3__16localeC1ERKS0_
	movq	160984(%rip), %rsi ## literal pool symbol address: __ZNSt3__17codecvtIcc11__mbstate_tE2idE
	movq	%r15, %rdi
	callq	0x1000295b4 ## symbol stub for: __ZNKSt3__16locale9has_facetERNS0_2idE
	movl	%eax, %r15d
	leaq	-32(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	testb	%r15b, %r15b
	je	0x100007c0a
	leaq	-32(%rbp), %r15
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	0x1000296e0 ## symbol stub for: __ZNSt3__16localeC1ERKS0_
	movq	160937(%rip), %rsi ## literal pool symbol address: __ZNSt3__17codecvtIcc11__mbstate_tE2idE
	movq	%r15, %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	%rax, 128(%rbx)
	leaq	-32(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	128(%rbx), %rdi
	movq	(%rdi), %rax
	callq	*56(%rax)
	movb	%al, 402(%rbx)
	movq	(%rbx), %rax
	xorl	%esi, %esi
	movl	$4096, %edx
	movq	%rbx, %rdi
	callq	*24(%rax)
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %r14
	leaq	-32(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	jmp	0x100007c36
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %rdi
	callq	___clang_call_terminate
	nop
	nop
__GLOBAL__sub_I_benchmark.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movb	__ZGVZN9benchmark8internal17InitializeStreamsEvE4init(%rip), %al ## guard variable for benchmark::internal::InitializeStreams()::init
	testb	%al, %al
	jne	0x100007ca3
	leaq	__ZGVZN9benchmark8internal17InitializeStreamsEvE4init(%rip), %rdi ## guard variable for benchmark::internal::InitializeStreams()::init
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100007ca3
	leaq	__ZZN9benchmark8internal17InitializeStreamsEvE4init(%rip), %rdi ## benchmark::internal::InitializeStreams()::init
	callq	0x10002970a ## symbol stub for: __ZNSt3__18ios_base4InitC1Ev
	movq	160788(%rip), %rdi ## literal pool symbol address: __ZNSt3__18ios_base4InitD1Ev
	leaq	__ZZN9benchmark8internal17InitializeStreamsEvE4init(%rip), %rsi ## benchmark::internal::InitializeStreams()::init
	leaq	__mh_execute_header(%rip), %rdx
	callq	0x100029758 ## symbol stub for: ___cxa_atexit
	leaq	__ZGVZN9benchmark8internal17InitializeStreamsEvE4init(%rip), %rdi ## guard variable for benchmark::internal::InitializeStreams()::init
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	$0, 169210(%rip)
	movq	$0, 169215(%rip)
	movq	$0, 169196(%rip)
	leaq	_FLAGS_benchmark_filter(%rip), %rsi
	movw	$11778, 169172(%rip)
	movb	$0, 169167(%rip)
	movq	160622(%rip), %rbx ## literal pool symbol address: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev
	leaq	__mh_execute_header(%rip), %r14
	movq	%rbx, %rdi
	movq	%r14, %rdx
	callq	0x100029758 ## symbol stub for: ___cxa_atexit
	movq	$0, 169161(%rip)
	movq	$0, 169158(%rip)
	movq	$0, 169155(%rip)
	leaq	_FLAGS_benchmark_format(%rip), %rsi
	movb	$14, 169125(%rip)
	movb	$101, 169125(%rip)
	movw	$27759, 169114(%rip)
	movl	$1936617315, 169100(%rip)
	movb	$0, 169100(%rip)
	movq	%rbx, %rdi
	movq	%r14, %rdx
	callq	0x100029758 ## symbol stub for: ___cxa_atexit
	movq	$0, 169094(%rip)
	movq	$0, 169099(%rip)
	movq	$0, 169080(%rip)
	leaq	_FLAGS_benchmark_out_format(%rip), %rsi
	movb	$8, 169058(%rip)
	movl	$1852797802, 169049(%rip)
	movb	$0, 169046(%rip)
	movq	%rbx, %rdi
	movq	%r14, %rdx
	callq	0x100029758 ## symbol stub for: ___cxa_atexit
	movq	$0, 169059(%rip)
	movq	$0, 169040(%rip)
	movq	$0, 169021(%rip)
	leaq	_FLAGS_benchmark_out(%rip), %rsi
	movq	%rbx, %rdi
	movq	%r14, %rdx
	callq	0x100029758 ## symbol stub for: ___cxa_atexit
	movq	$0, 169016(%rip)
	movq	$0, 169021(%rip)
	movq	$0, 169002(%rip)
	leaq	_FLAGS_benchmark_color(%rip), %rsi
	movb	$8, 168980(%rip)
	movl	$1869903201, 168971(%rip)
	movb	$0, 168968(%rip)
	movq	%rbx, %rdi
	movq	%r14, %rdx
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmp	0x100029758 ## symbol stub for: ___cxa_atexit
	movq	%rax, %rbx
	leaq	__ZGVZN9benchmark8internal17InitializeStreamsEvE4init(%rip), %rdi ## guard variable for benchmark::internal::InitializeStreams()::init
	callq	0x100029770 ## symbol stub for: ___cxa_guard_abort
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
__ZN9benchmark8internal17BenchmarkFamilies11GetInstanceEv:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	__ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %al ## guard variable for benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	testb	%al, %al
	jne	0x100007f05
	leaq	__ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rdi ## guard variable for benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100007f05
	movq	$0, 166111(%rip)
	movq	$0, 166092(%rip)
	movq	$0, 166073(%rip)
	leaq	__ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rsi ## benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	movq	$850045863, 166079(%rip)
	movq	$0, 166124(%rip)
	movq	$0, 166105(%rip)
	movq	$0, 166086(%rip)
	movq	$0, 166067(%rip)
	movq	$0, 166048(%rip)
	movq	$0, 166029(%rip)
	movq	$0, 166010(%rip)
	movq	160075(%rip), %rdi
	leaq	__mh_execute_header(%rip), %rdx
	callq	0x100029758 ## symbol stub for: ___cxa_atexit
	leaq	__ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rdi ## guard variable for benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	leaq	__ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rax ## benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	popq	%rbp
	retq
	nop
__ZN9benchmark8internal17BenchmarkFamiliesD1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %r14
	leaq	24(%r14), %rdi
	callq	0x1000296c2 ## symbol stub for: __ZNSt3__15mutexD1Ev
	movq	(%r14), %r15
	testq	%r15, %r15
	je	0x100007f65
	movq	8(%r14), %rbx
	cmpq	%r15, %rbx
	je	0x100007f70
	nopw	(%rax,%rax)
	movq	-8(%rbx), %rdi
	movq	$0, -8(%rbx)
	leaq	-8(%rbx), %rbx
	testq	%rdi, %rdi
	je	0x100007f5b
	movq	(%rdi), %rax
	callq	*8(%rax)
	cmpq	%rbx, %r15
	jne	0x100007f40
	movq	(%r14), %rdi
	jmp	0x100007f73
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r15, %rdi
	movq	%r15, 8(%r14)
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopw	%cs:(%rax,%rax)
__ZN9benchmark8internal17BenchmarkFamilies12AddBenchmarkENSt3__110unique_ptrINS0_9BenchmarkENS2_14default_deleteIS4_EEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rsi, %r12
	movq	%rdi, %rbx
	leaq	24(%rbx), %r14
	movq	%r14, %rdi
	callq	0x1000296b6 ## symbol stub for: __ZNSt3__15mutex4lockEv
	movq	8(%rbx), %rax
	movq	%rax, %r15
	subq	(%rbx), %r15
	cmpq	%rax, 16(%rbx)
	jbe	0x100007fd3
	movq	(%r12), %rcx
	movq	$0, (%r12)
	movq	%rcx, (%rax)
	addq	$8, 8(%rbx)
	jmp	0x100007fde
	movq	%rbx, %rdi
	movq	%r12, %rsi
	callq	__ZNSt3__16vectorINS_10unique_ptrIN9benchmark8internal9BenchmarkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ ## void std::__1::vector<std::__1::unique_ptr<benchmark::internal::Benchmark, std::__1::default_delete<benchmark::internal::Benchmark> >, std::__1::allocator<std::__1::unique_ptr<benchmark::internal::Benchmark, std::__1::default_delete<benchmark::internal::Benchmark> > > >::__push_back_slow_path<std::__1::unique_ptr<benchmark::internal::Benchmark, std::__1::default_delete<benchmark::internal::Benchmark> > >(std::__1::unique_ptr<benchmark::internal::Benchmark, std::__1::default_delete<benchmark::internal::Benchmark> >&&)
	sarq	$3, %r15
	movq	%r14, %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	movq	%r15, %rax
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax)
__ZN9benchmark8internal17BenchmarkFamilies15ClearBenchmarksEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rdi, %r15
	leaq	24(%r15), %r14
	movq	%r14, %rdi
	callq	0x1000296b6 ## symbol stub for: __ZNSt3__15mutex4lockEv
	movq	(%r15), %r12
	movq	8(%r15), %rbx
	cmpq	%r12, %rbx
	je	0x100008060
	nopw	%cs:(%rax,%rax)
	movq	-8(%rbx), %rdi
	movq	$0, -8(%rbx)
	leaq	-8(%rbx), %rbx
	testq	%rdi, %rdi
	je	0x10000805b
	movq	(%rdi), %rax
	callq	*8(%rax)
	cmpq	%rbx, %r12
	jne	0x100008040
	movq	%r12, 8(%r15)
	movq	%r15, %rdi
	callq	__ZNSt3__16vectorINS_10unique_ptrIN9benchmark8internal9BenchmarkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE13shrink_to_fitEv ## std::__1::vector<std::__1::unique_ptr<benchmark::internal::Benchmark, std::__1::default_delete<benchmark::internal::Benchmark> >, std::__1::allocator<std::__1::unique_ptr<benchmark::internal::Benchmark, std::__1::default_delete<benchmark::internal::Benchmark> > > >::shrink_to_fit()
	movq	%r14, %rdi
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	nopl	(%rax)
__ZNSt3__16vectorINS_10unique_ptrIN9benchmark8internal9BenchmarkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE13shrink_to_fitEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rdi, %r14
	movq	16(%r14), %rax
	movq	(%r14), %r15
	movq	8(%r14), %rbx
	subq	%r15, %rax
	sarq	$3, %rax
	movq	%rbx, %rdi
	subq	%r15, %rdi
	movq	%rdi, %r12
	sarq	$3, %r12
	cmpq	%r12, %rax
	jbe	0x100008281
	testq	%r12, %r12
	je	0x1000080cf
	movq	%r12, %rax
	shrq	$61, %rax
	jne	0x100008224
	callq	0x100029746 ## symbol stub for: __Znwm
	jmp	0x1000080d1
	xorl	%eax, %eax
	leaq	(%rax,%r12,8), %rax
	movq	%rbx, %rdx
	subq	%r15, %rdx
	je	0x1000081ca
	addq	$-8, %rdx
	movl	%edx, %esi
	shrl	$3, %esi
	incl	%esi
	andq	$7, %rsi
	je	0x100008215
	negq	%rsi
	movq	%rax, %rcx
	nopl	(%rax)
	movq	-8(%rbx), %rdi
	movq	$0, -8(%rbx)
	leaq	-8(%rbx), %rbx
	movq	%rdi, -8(%rcx)
	addq	$-8, %rcx
	incq	%rsi
	jne	0x100008100
	cmpq	$56, %rdx
	jb	0x1000081c1
	nopw	(%rax,%rax)
	movq	-8(%rbx), %rdx
	movq	$0, -8(%rbx)
	movq	%rdx, -8(%rcx)
	movq	-16(%rbx), %rdx
	movq	$0, -16(%rbx)
	movq	%rdx, -16(%rcx)
	movq	-24(%rbx), %rdx
	movq	$0, -24(%rbx)
	movq	%rdx, -24(%rcx)
	movq	-32(%rbx), %rdx
	movq	$0, -32(%rbx)
	movq	%rdx, -32(%rcx)
	movq	-40(%rbx), %rdx
	movq	$0, -40(%rbx)
	movq	%rdx, -40(%rcx)
	movq	-48(%rbx), %rdx
	movq	$0, -48(%rbx)
	movq	%rdx, -48(%rcx)
	movq	-56(%rbx), %rdx
	movq	$0, -56(%rbx)
	movq	%rdx, -56(%rcx)
	movq	-64(%rbx), %rdx
	movq	$0, -64(%rbx)
	leaq	-64(%rbx), %rbx
	movq	%rdx, -64(%rcx)
	addq	$-64, %rcx
	cmpq	%rbx, %r15
	jne	0x100008130
	movq	(%r14), %r15
	movq	8(%r14), %rbx
	jmp	0x1000081d0
	movq	%r15, %rbx
	movq	%rax, %rcx
	movq	%rcx, (%r14)
	movq	%rax, 8(%r14)
	movq	%rax, 16(%r14)
	cmpq	%r15, %rbx
	je	0x100008200
	movq	-8(%rbx), %rdi
	movq	$0, -8(%rbx)
	leaq	-8(%rbx), %rbx
	testq	%rdi, %rdi
	je	0x1000081fb
	movq	(%rdi), %rax
	callq	*8(%rax)
	cmpq	%rbx, %r15
	jne	0x1000081e0
	testq	%r15, %r15
	je	0x100008281
	movq	%r15, %rdi
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rax, %rcx
	cmpq	$56, %rdx
	jae	0x100008130
	jmp	0x1000081c1
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	leaq	155006(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%r14, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	159665(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%r14)
	movq	159355(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	159204(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%r14, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	jmp	0x100008274
	movq	%rax, %rbx
	movq	%rbx, %rdi
	callq	0x10002975e ## symbol stub for: ___cxa_begin_catch
	callq	0x100029764 ## symbol stub for: ___cxa_end_catch
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rdi
	callq	___clang_call_terminate
	nopw	%cs:(%rax,%rax)
__ZN9benchmark8internal17BenchmarkFamilies14FindBenchmarksENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS2_6vectorINS0_9Benchmark8InstanceENS6_ISB_EEEEPNS2_13basic_ostreamIcS5_EE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$504, %rsp
	movq	%rcx, %r12
	movq	%rdx, %r13
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	159065(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x1000082f7
	movq	159052(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x1000082f7
	movq	159532(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	159022(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -416(%rbp)
	movq	$0, -400(%rbp)
	movb	$0, -496(%rbp)
	leaq	-488(%rbp), %r15
	movq	%r15, %rdi
	callq	0x1000296e6 ## symbol stub for: __ZNSt3__16localeC1Ev
	movq	159055(%rip), %rsi ## literal pool symbol address: __ZNSt3__15ctypeIcE2idE
	movq	%r15, %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	%rax, -480(%rbp)
	movq	159057(%rip), %rsi ## literal pool symbol address: __ZNSt3__17collateIcE2idE
	movq	%r15, %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	%rax, -472(%rbp)
	movq	$0, -432(%rbp)
	movq	$0, -440(%rbp)
	movq	$0, -448(%rbp)
	movq	$0, -456(%rbp)
	movq	$0, -464(%rbp)
	testb	$1, (%rbx)
	jne	0x10000839c
	leaq	1(%rbx), %rax
	cmpb	$45, (%rax)
	je	0x1000083a5
	movl	$0, -48(%rbp)
	jmp	0x1000083c0
	movq	16(%rbx), %rax
	cmpb	$45, (%rax)
	jne	0x100008393
	movb	$1, %al
	movl	%eax, -48(%rbp)
	leaq	154364(%rip), %rcx ## literal pool for: ""
	xorl	%esi, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	0x1000295f0 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEmmPKc
	leaq	-496(%rbp), %rdi
	leaq	-416(%rbp), %rdx
	movq	%rbx, %rsi
	callq	__ZN9benchmark5Regex4InitERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_ ## benchmark::Regex::Init(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
	testb	%al, %al
	je	0x100008eee
	movq	%rbx, -424(%rbp)
	movq	%r13, -192(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -384(%rbp)
	movq	$0, -368(%rbp)
	movl	$4, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	%r12, -528(%rbp)
	movq	%rbx, -384(%rbp)
	movq	%rbx, %rax
	addq	$4, %rax
	movq	%rax, -368(%rbp)
	movl	$1, (%rbx)
	movq	%rax, -376(%rbp)
	leaq	24(%r14), %r13
	movq	%r13, %rdi
	callq	0x1000296b6 ## symbol stub for: __ZNSt3__15mutex4lockEv
	movq	(%r14), %r12
	movq	8(%r14), %rax
	movq	%rax, -544(%rbp)
	cmpq	%rax, %r12
	je	0x100008fa1
	movl	-48(%rbp), %eax
	xorb	$1, %al
	movb	%al, -41(%rbp)
	leaq	-384(%rbp), %r14
	movq	(%r12), %rdi
	testq	%rdi, %rdi
	je	0x100008ec0
	movq	64(%rdi), %rcx
	cmpq	72(%rdi), %rcx
	je	0x100008492
	movq	8(%rcx), %rax
	subq	(%rcx), %rax
	shrq	$3, %rax
	cmpl	$-1, %eax
	jne	0x1000084fd
	jmp	0x1000084c0
	movq	40(%rdi), %rcx
	movq	48(%rdi), %rax
	cmpq	%rax, %rcx
	je	0x1000084c0
	subq	%rcx, %rax
	sarq	$3, %rax
	movabsq	$-6148914691236517205, %rcx
	imulq	%rcx, %rax
	cmpl	$-1, %eax
	jne	0x1000084fd
	nopl	(%rax)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -352(%rbp)
	movq	$0, -336(%rbp)
	leaq	-352(%rbp), %rsi
	callq	__ZN9benchmark8internal9Benchmark4ArgsERKNSt3__16vectorIxNS2_9allocatorIxEEEE ## benchmark::internal::Benchmark::Args(std::__1::vector<long long, std::__1::allocator<long long> > const&)
	movq	-352(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x1000084f9
	movq	%rdi, -344(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	(%r12), %rdi
	leaq	160(%rdi), %rcx
	movq	72(%rdi), %rbx
	movq	160(%rdi), %rax
	cmpq	168(%rdi), %rax
	cmoveq	%r14, %rcx
	subq	64(%rdi), %rbx
	sarq	$3, %rbx
	movq	8(%rcx), %rax
	movq	%rcx, -536(%rbp)
	subq	(%rcx), %rax
	sarq	$2, %rax
	movabsq	$-6148914691236517205, %rcx
	imulq	%rcx, %rbx
	imulq	%rax, %rbx
	cmpq	$101, %rbx
	jb	0x1000085c2
	movl	$36, %edx
	movq	-528(%rbp), %rdi
	leaq	153968(%rip), %rsi ## literal pool for: "The number of inputs is very large. "
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%r12), %rcx
	movzbl	8(%rcx), %edi
	leaq	9(%rcx), %rsi
	movq	%rdi, %rdx
	shrq	%rdx
	andb	$1, %dil
	cmovneq	16(%rcx), %rdx
	testb	%dil, %dil
	cmovneq	24(%rcx), %rsi
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movl	$27, %edx
	movq	%rax, %rdi
	leaq	153942(%rip), %rsi ## literal pool for: " will be repeated at least "
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	0x100029656 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm
	movl	$8, %edx
	movq	%rax, %rdi
	leaq	153939(%rip), %rsi ## literal pool for: " times.\n"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	-424(%rbp), %rdx
	movzbl	(%rdx), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	8(%rdx), %rcx
	cmpq	$1, %rcx
	jne	0x100008620
	xorl	%esi, %esi
	movq	$-1, %rdx
	movl	$1, %r8d
	movq	-424(%rbp), %rdi
	leaq	152556(%rip), %rcx ## literal pool for: "."
	callq	0x100029596 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
	testl	%eax, %eax
	jne	0x100008620
	movq	-192(%rbp), %rdi
	movq	%rbx, %rsi
	callq	__ZNSt3__16vectorIN9benchmark8internal9Benchmark8InstanceENS_9allocatorIS4_EEE7reserveEm ## std::__1::vector<benchmark::internal::Benchmark::Instance, std::__1::allocator<benchmark::internal::Benchmark::Instance> >::reserve(unsigned long)
	nopw	%cs:(%rax,%rax)
	movq	(%r12), %rax
	movq	64(%rax), %rcx
	movq	72(%rax), %rdx
	cmpq	%rdx, %rcx
	je	0x100008ec0
	movq	%r13, -56(%rbp)
	movq	%rdx, -504(%rbp)
	movq	-536(%rbp), %rax
	movq	(%rax), %rsi
	movq	8(%rax), %rax
	cmpq	%rax, %rsi
	je	0x100008eae
	movq	%rax, -512(%rbp)
	movq	%rcx, -184(%rbp)
	movq	%r13, %r14
	movq	%rsi, -520(%rbp)
	movl	(%rsi), %ebx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -352(%rbp)
	movq	$0, -336(%rbp)
	leaq	-312(%rbp), %r13
	movq	$0, 16(%r13)
	movq	$0, 8(%r13)
	movq	$0, (%r13)
	leaq	-256(%rbp), %rax
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	movq	%rax, -264(%rbp)
	movq	(%r12), %rsi
	addq	$8, %rsi
	leaq	-352(%rbp), %rdi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	movq	-184(%rbp), %rdx
	cmpq	%rdx, %r13
	movq	(%r12), %rax
	movq	%rax, -328(%rbp)
	movq	(%r12), %rax
	movl	32(%rax), %ecx
	movl	%ecx, -320(%rbp)
	je	0x100008714
	movq	(%rdx), %rsi
	movq	8(%rdx), %rdx
	movq	%r13, %rdi
	callq	__ZNSt3__16vectorIxNS_9allocatorIxEEE6assignIPxEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIxNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ ## std::__1::enable_if<(__is_forward_iterator<long long*>::value) && (is_constructible<long long, std::__1::iterator_traits<long long*>::reference>::value), void>::type std::__1::vector<long long, std::__1::allocator<long long> >::assign<long long*>(long long*, long long*)
	movq	(%r12), %rax
	movq	-184(%rbp), %rdx
	movl	88(%rax), %ecx
	movl	%ecx, -288(%rbp)
	movl	92(%rax), %ecx
	movl	%ecx, -284(%rbp)
	movups	96(%rax), %xmm0
	movaps	%xmm0, -224(%rbp)
	movl	112(%rax), %ecx
	movl	%ecx, -228(%rbp)
	movb	116(%rax), %cl
	movb	%cl, -280(%rbp)
	movb	117(%rax), %cl
	movb	%cl, -279(%rbp)
	movl	120(%rax), %ecx
	movl	%ecx, -276(%rbp)
	movq	128(%rax), %rax
	movq	%rax, -272(%rbp)
	movq	(%r12), %rax
	addq	$136, %rax
	movq	%rax, -240(%rbp)
	movl	%ebx, -208(%rbp)
	movq	(%rdx), %rbx
	movq	8(%rdx), %r14
	cmpq	%r14, %rbx
	je	0x100008909
	movl	$16, %r13d
	xorl	%r15d, %r15d
	nopw	%cs:(%rax,%rax)
	leaq	-352(%rbp), %rdi
	leaq	153234(%rip), %rsi ## literal pool for: "/"
	callq	0x1000295d2 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
	movq	(%r12), %rcx
	movq	40(%rcx), %rax
	movq	48(%rcx), %rcx
	subq	%rax, %rcx
	sarq	$3, %rcx
	movabsq	$-6148914691236517205, %rdx
	imulq	%rdx, %rcx
	cmpq	%rcx, %r15
	jae	0x100008890
	movzbl	-16(%rax,%r13), %ecx
	testb	$1, %cl
	jne	0x100008810
	movq	%rcx, %rdx
	shrq	%rdx
	testq	%rdx, %rdx
	je	0x100008890
	testb	$1, %cl
	jne	0x10000881c
	leaq	-15(%rax,%r13), %rdx
	jmp	0x100008820
	nopw	%cs:(%rax,%rax)
	movq	-8(%rax,%r13), %rdx
	testq	%rdx, %rdx
	jne	0x1000087f7
	jmp	0x100008890
	movq	(%rax,%r13), %rdx
	xorl	%eax, %eax
	leaq	-176(%rbp), %rdi
	leaq	153321(%rip), %rsi ## literal pool for: "%s:"
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-176(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-160(%rbp), %rsi
	leaq	-175(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-168(%rbp), %rdx
	leaq	-352(%rbp), %rdi
	callq	0x1000295d8 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
	testb	$1, -176(%rbp)
	je	0x100008890
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	nopw	%cs:(%rax,%rax)
	movq	(%rbx,%r15,8), %rdx
	xorl	%eax, %eax
	leaq	-176(%rbp), %rdi
	leaq	153209(%rip), %rsi ## literal pool for: "%d"
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-176(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-160(%rbp), %rsi
	leaq	-175(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-168(%rbp), %rdx
	leaq	-352(%rbp), %rdi
	callq	0x1000295d8 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
	testb	$1, -176(%rbp)
	je	0x1000088f5
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	incq	%r15
	addq	$24, %r13
	addq	$-8, %r14
	cmpq	%r14, %rbx
	jne	0x1000087a0
	movq	(%r12), %rax
	movsd	96(%rax), %xmm0
	leaq	-488(%rbp), %r15
	movq	-56(%rbp), %r13
	callq	__ZN9benchmark8internal6IsZeroEd ## benchmark::internal::IsZero(double)
	leaq	-384(%rbp), %r14
	testb	%al, %al
	jne	0x100008997
	movq	(%r12), %rax
	movsd	96(%rax), %xmm0
	movb	$1, %al
	leaq	-176(%rbp), %rdi
	leaq	153050(%rip), %rsi ## literal pool for: "/min_time:%0.3f"
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-176(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-160(%rbp), %rsi
	leaq	-175(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-168(%rbp), %rdx
	leaq	-352(%rbp), %rdi
	callq	0x1000295d8 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
	testb	$1, -176(%rbp)
	je	0x100008997
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	(%r12), %rax
	movq	104(%rax), %rdx
	testq	%rdx, %rdx
	je	0x100008a09
	xorl	%eax, %eax
	leaq	-176(%rbp), %rdi
	leaq	152956(%rip), %rsi ## literal pool for: "/iterations:%d"
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-176(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-160(%rbp), %rsi
	leaq	-175(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-168(%rbp), %rdx
	leaq	-352(%rbp), %rdi
	callq	0x1000295d8 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
	testb	$1, -176(%rbp)
	je	0x100008a05
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	(%r12), %rax
	movl	112(%rax), %edx
	testl	%edx, %edx
	je	0x100008a75
	xorl	%eax, %eax
	leaq	-176(%rbp), %rdi
	leaq	152863(%rip), %rsi ## literal pool for: "/repeats:%d"
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-176(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-160(%rbp), %rsi
	leaq	-175(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-168(%rbp), %rdx
	leaq	-352(%rbp), %rdi
	callq	0x1000295d8 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
	testb	$1, -176(%rbp)
	je	0x100008a71
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	(%r12), %rax
	cmpb	$0, 117(%rax)
	je	0x100008a90
	leaq	-352(%rbp), %rdi
	leaq	152770(%rip), %rsi ## literal pool for: "/manual_time"
	callq	0x1000295d2 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
	jmp	0x100008aa9
	cmpb	$0, 116(%rax)
	je	0x100008aa9
	leaq	-352(%rbp), %rdi
	leaq	152756(%rip), %rsi ## literal pool for: "/real_time"
	callq	0x1000295d2 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
	movq	(%r12), %rax
	movq	160(%rax), %rcx
	cmpq	168(%rax), %rcx
	je	0x100008b24
	movl	-208(%rbp), %edx
	xorl	%eax, %eax
	leaq	-176(%rbp), %rdi
	leaq	152720(%rip), %rsi ## literal pool for: "/threads:%d"
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-176(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-160(%rbp), %rsi
	leaq	-175(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-168(%rbp), %rdx
	leaq	-352(%rbp), %rdi
	callq	0x1000295d8 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
	testb	$1, -176(%rbp)
	je	0x100008b24
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpb	$0, -496(%rbp)
	je	0x100008cc7
	leaq	-128(%rbp), %rax
	movb	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	movb	$0, 40(%rax)
	movq	$0, 32(%rax)
	movq	$0, 24(%rax)
	movb	$0, -80(%rbp)
	movq	$0, -72(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -176(%rbp)
	movaps	%xmm0, -160(%rbp)
	movq	$0, -144(%rbp)
	movb	$0, -136(%rbp)
	movzbl	-352(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-344(%rbp), %rdx
	testb	%al, %al
	movq	-336(%rbp), %rsi
	leaq	-351(%rbp), %rax
	cmoveq	%rax, %rsi
	addq	%rsi, %rdx
	xorl	%r8d, %r8d
	leaq	-488(%rbp), %rdi
	leaq	-176(%rbp), %rcx
	callq	__ZNKSt3__111basic_regexIcNS_12regex_traitsIcEEE8__searchINS_9allocatorINS_9sub_matchIPKcEEEEEEbS8_S8_RNS_13match_resultsIS8_T_EENS_15regex_constants15match_flag_typeE ## bool std::__1::basic_regex<char, std::__1::regex_traits<char> >::__search<std::__1::allocator<std::__1::sub_match<char const*> > >(char const*, char const*, std::__1::match_results<char const*, std::__1::allocator<std::__1::sub_match<char const*> > >&, std::__1::regex_constants::match_flag_type) const
	movl	%eax, %ebx
	movq	-176(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100008be9
	movq	%rdi, -168(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	xorb	$1, %bl
	orb	-48(%rbp), %bl
	cmpb	$1, %bl
	jne	0x100008cd2
	cmpb	$0, -496(%rbp)
	je	0x100008cc7
	leaq	-128(%rbp), %rax
	movb	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	movb	$0, 40(%rax)
	movq	$0, 32(%rax)
	movq	$0, 24(%rax)
	movb	$0, -80(%rbp)
	movq	$0, -72(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -176(%rbp)
	movaps	%xmm0, -160(%rbp)
	movq	$0, -144(%rbp)
	movb	$0, -136(%rbp)
	movzbl	-352(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-344(%rbp), %rdx
	testb	%al, %al
	movq	-336(%rbp), %rsi
	leaq	-351(%rbp), %rax
	cmoveq	%rax, %rsi
	addq	%rsi, %rdx
	xorl	%r8d, %r8d
	leaq	-488(%rbp), %rdi
	leaq	-176(%rbp), %rcx
	callq	__ZNKSt3__111basic_regexIcNS_12regex_traitsIcEEE8__searchINS_9allocatorINS_9sub_matchIPKcEEEEEEbS8_S8_RNS_13match_resultsIS8_T_EENS_15regex_constants15match_flag_typeE ## bool std::__1::basic_regex<char, std::__1::regex_traits<char> >::__search<std::__1::allocator<std::__1::sub_match<char const*> > >(char const*, char const*, std::__1::match_results<char const*, std::__1::allocator<std::__1::sub_match<char const*> > >&, std::__1::regex_constants::match_flag_type) const
	movb	%al, %bl
	movq	-176(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100008cc9
	movq	%rdi, -168(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	orb	-41(%rbp), %bl
	je	0x100008cd2
	jmp	0x100008e45
	xorl	%ebx, %ebx
	orb	-41(%rbp), %bl
	jne	0x100008e45
	movq	(%r12), %rax
	movq	72(%rax), %rax
	addq	$-24, %rax
	cmpq	%rax, -184(%rbp)
	sete	-232(%rbp)
	movq	-192(%rbp), %rdi
	movq	8(%rdi), %rax
	cmpq	16(%rdi), %rax
	jae	0x100008df5
	movq	-336(%rbp), %rcx
	movq	%rcx, 16(%rax)
	movq	-352(%rbp), %rcx
	movq	-344(%rbp), %rdx
	movq	%rdx, 8(%rax)
	movq	%rcx, (%rax)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -352(%rbp)
	movq	$0, -336(%rbp)
	leaq	-312(%rbp), %rdi
	movq	-16(%rdi), %rcx
	movq	%rcx, 24(%rax)
	movl	-8(%rdi), %ecx
	movl	%ecx, 32(%rax)
	movq	$0, 56(%rax)
	movq	$0, 48(%rax)
	movq	$0, 40(%rax)
	movups	-312(%rbp), %xmm0
	movups	%xmm0, 40(%rax)
	movq	-296(%rbp), %rcx
	movq	%rcx, 56(%rax)
	movq	$0, 16(%rdi)
	movq	$0, 8(%rdi)
	movq	$0, (%rdi)
	movq	40(%rdi), %rcx
	movq	%rcx, 80(%rax)
	movq	24(%rdi), %rcx
	movq	32(%rdi), %rdx
	movq	%rdx, 72(%rax)
	movq	%rcx, 64(%rax)
	movq	-264(%rbp), %rcx
	movq	%rcx, 88(%rax)
	leaq	96(%rax), %rcx
	movq	-256(%rbp), %rdx
	movq	%rdx, 96(%rax)
	movq	-248(%rbp), %rsi
	movq	%rsi, 104(%rax)
	testq	%rsi, %rsi
	je	0x100008e03
	movq	%rcx, 16(%rdx)
	leaq	-256(%rbp), %rcx
	movq	%rcx, -264(%rbp)
	movq	$0, 8(%rcx)
	movq	$0, (%rcx)
	jmp	0x100008e07
	leaq	-352(%rbp), %rsi
	callq	__ZNSt3__16vectorIN9benchmark8internal9Benchmark8InstanceENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ ## void std::__1::vector<benchmark::internal::Benchmark::Instance, std::__1::allocator<benchmark::internal::Benchmark::Instance> >::__push_back_slow_path<benchmark::internal::Benchmark::Instance>(benchmark::internal::Benchmark::Instance&&)
	jmp	0x100008e45
	movq	%rcx, 88(%rax)
	movl	104(%rdi), %ecx
	movl	%ecx, 144(%rax)
	movq	96(%rdi), %rcx
	movq	%rcx, 136(%rax)
	movq	88(%rdi), %rcx
	movq	%rcx, 128(%rax)
	movq	72(%rdi), %rcx
	movq	80(%rdi), %rdx
	movq	%rdx, 120(%rax)
	movq	%rcx, 112(%rax)
	movq	-192(%rbp), %rax
	addq	$152, 8(%rax)
	movq	-256(%rbp), %rsi
	leaq	-264(%rbp), %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	-312(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100008e70
	movq	%rdi, -304(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -352(%rbp)
	je	0x100008e85
	movq	-336(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-520(%rbp), %rsi
	addq	$4, %rsi
	movq	-512(%rbp), %rax
	cmpq	%rax, %rsi
	movq	-184(%rbp), %rcx
	movq	-504(%rbp), %rdx
	jne	0x100008657
	addq	$24, %rcx
	cmpq	%rdx, %rcx
	jne	0x100008640
	nopl	(%rax,%rax)
	addq	$8, %r12
	cmpq	-544(%rbp), %r12
	jne	0x100008469
	movq	-384(%rbp), %rbx
	movq	%r13, %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	testq	%rbx, %rbx
	jne	0x100008fa9
	jmp	0x100008fb8
	leaq	151481(%rip), %rsi ## literal pool for: "Could not compile benchmark re: "
	movl	$32, %edx
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-416(%rbp), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	leaq	-415(%rbp), %rsi
	cmovneq	-400(%rbp), %rsi
	testb	%cl, %cl
	cmovneq	-408(%rbp), %rdx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	movq	(%rbx), %rax
	movq	-24(%rax), %rsi
	addq	%rbx, %rsi
	leaq	-352(%rbp), %rdi
	callq	0x1000295c0 ## symbol stub for: __ZNKSt3__18ios_base6getlocEv
	movq	155941(%rip), %rsi ## literal pool symbol address: __ZNSt3__15ctypeIcE2idE
	leaq	-352(%rbp), %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	(%rax), %rcx
	movl	$10, %esi
	movq	%rax, %rdi
	callq	*56(%rcx)
	movl	%eax, %r14d
	leaq	-352(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movsbl	%r14b, %esi
	movq	%rbx, %rdi
	callq	0x10002962c ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc
	movq	%rbx, %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	xorl	%r14d, %r14d
	movq	-440(%rbp), %rbx
	testq	%rbx, %rbx
	jne	0x100008fc7
	jmp	0x100008fea
	movq	%r13, %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	movq	%rbx, -376(%rbp)
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movb	$1, %r14b
	movq	-440(%rbp), %rbx
	testq	%rbx, %rbx
	je	0x100008fea
	movq	$-1, %rax
	lock
	xaddq	%rax, 8(%rbx)
	testq	%rax, %rax
	jne	0x100008fea
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movq	%rbx, %rdi
	callq	0x100029698 ## symbol stub for: __ZNSt3__119__shared_weak_count14__release_weakEv
	movq	%r15, %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	testb	$1, -416(%rbp)
	je	0x100009007
	movq	-400(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movl	%r14d, %eax
	addq	$504, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %r12
	jmp	0x100009187
	jmp	0x100009052
	movq	%rax, %r12
	leaq	-352(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	-440(%rbp), %rbx
	testq	%rbx, %rbx
	jne	0x1000091a2
	jmp	0x1000091c5
	movq	%rax, %r12
	jmp	0x1000091c5
	movq	%rax, %r12
	movq	-440(%rbp), %rbx
	testq	%rbx, %rbx
	jne	0x1000091a2
	jmp	0x1000091c5
	jmp	0x100009076
	jmp	0x1000090ae
	movq	%rax, %r12
	jmp	0x100009133
	movq	%rax, %r12
	movq	-176(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100009133
	movq	%rdi, -168(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x100009133
	jmp	0x1000090ae
	movq	%rax, %r12
	jmp	0x100009133
	jmp	0x1000090ae
	movq	%rax, %r12
	jmp	0x100009133
	movq	%rax, %r12
	testb	$1, -176(%rbp)
	jne	0x100009115
	jmp	0x100009133
	movq	%rax, %r12
	jmp	0x100009133
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %r12
	movq	-352(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100009173
	movq	%rdi, -344(%rbp)
	jmp	0x10000916e
	movq	%rax, %r12
	jmp	0x100009133
	jmp	0x1000090fe
	jmp	0x100009125
	movq	%rax, %r12
	movq	%r14, %r13
	jmp	0x100009133
	movq	%rax, %r12
	jmp	0x100009173
	movq	%rax, %r12
	testb	$1, -176(%rbp)
	leaq	-488(%rbp), %r15
	movq	-56(%rbp), %r13
	je	0x100009133
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x100009133
	jmp	0x100009125
	movq	%rax, %r12
	leaq	-488(%rbp), %r15
	movq	-56(%rbp), %r13
	movq	-256(%rbp), %rsi
	leaq	-264(%rbp), %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	-312(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000915e
	movq	%rdi, -304(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -352(%rbp)
	je	0x100009173
	movq	-336(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r13, %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	movq	-384(%rbp), %rbx
	testq	%rbx, %rbx
	je	0x100009196
	movq	%rbx, -376(%rbp)
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-440(%rbp), %rbx
	testq	%rbx, %rbx
	je	0x1000091c5
	movq	$-1, %rax
	lock
	xaddq	%rax, 8(%rbx)
	testq	%rax, %rax
	jne	0x1000091c5
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movq	%rbx, %rdi
	callq	0x100029698 ## symbol stub for: __ZNSt3__119__shared_weak_count14__release_weakEv
	movq	%r15, %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	testb	$1, -416(%rbp)
	je	0x1000091e2
	movq	-400(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r12, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	(%rax,%rax)
__ZN9benchmark5Regex4InitERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$72, %rsp
	movq	%rdx, %r14
	movq	%rsi, %rbx
	movq	%rdi, %r12
	leaq	-104(%rbp), %r15
	movq	%r15, %rdi
	callq	0x1000296e6 ## symbol stub for: __ZNSt3__16localeC1Ev
	movq	155227(%rip), %rsi ## literal pool symbol address: __ZNSt3__15ctypeIcE2idE
	movq	%r15, %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	%rax, -96(%rbp)
	movq	155232(%rip), %rsi ## literal pool symbol address: __ZNSt3__17collateIcE2idE
	leaq	-104(%rbp), %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	%rax, -88(%rbp)
	movl	$32, -80(%rbp)
	movl	$0, -44(%rbp)
	movq	$0, -52(%rbp)
	movq	$0, -60(%rbp)
	movq	$0, -68(%rbp)
	movq	$0, -76(%rbp)
	movzbl	(%rbx), %eax
	leaq	1(%rbx), %rsi
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	16(%rbx), %rsi
	testb	%al, %al
	cmovneq	8(%rbx), %rdx
	addq	%rsi, %rdx
	leaq	-104(%rbp), %rdi
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE7__parseINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	leaq	-96(%rbp), %rbx
	leaq	8(%r12), %rdi
	leaq	-104(%rbp), %rsi
	callq	0x1000296f2 ## symbol stub for: __ZNSt3__16localeaSERKS0_
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	movq	%rcx, 24(%r12)
	movq	%rax, 16(%r12)
	movq	16(%rbx), %rax
	movq	24(%rbx), %rcx
	movq	%rcx, 40(%r12)
	movq	%rax, 32(%r12)
	movups	-64(%rbp), %xmm0
	movq	$0, -56(%rbp)
	movq	$0, -64(%rbp)
	movq	56(%r12), %rbx
	movups	%xmm0, 48(%r12)
	testq	%rbx, %rbx
	je	0x10000930e
	movq	$-1, %rax
	lock
	xaddq	%rax, 8(%rbx)
	testq	%rax, %rax
	jne	0x10000930e
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movq	%rbx, %rdi
	callq	0x100029698 ## symbol stub for: __ZNSt3__119__shared_weak_count14__release_weakEv
	movq	-48(%rbp), %rax
	movq	%rax, 64(%r12)
	movq	-56(%rbp), %rbx
	testq	%rbx, %rbx
	je	0x100009343
	movq	$-1, %rax
	lock
	xaddq	%rax, 8(%rbx)
	testq	%rax, %rax
	jne	0x100009343
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movq	%rbx, %rdi
	callq	0x100029698 ## symbol stub for: __ZNSt3__119__shared_weak_count14__release_weakEv
	leaq	-104(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movb	$1, (%r12)
	movb	$1, %al
	addq	$72, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rdx, %rbx
	movq	%rax, %r15
	movq	-56(%rbp), %r13
	testq	%r13, %r13
	je	0x10000939d
	movq	$-1, %rax
	lock
	xaddq	%rax, 8(%r13)
	testq	%rax, %rax
	jne	0x10000939d
	movq	(%r13), %rax
	movq	%r13, %rdi
	callq	*16(%rax)
	movq	%r13, %rdi
	callq	0x100029698 ## symbol stub for: __ZNSt3__119__shared_weak_count14__release_weakEv
	jmp	0x10000939d
	movq	%rdx, %rbx
	movq	%rax, %r15
	leaq	-104(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	cmpl	$1, %ebx
	jne	0x1000093e6
	movq	%r15, %rdi
	callq	0x10002975e ## symbol stub for: ___cxa_begin_catch
	testq	%r14, %r14
	je	0x1000093cc
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*16(%rcx)
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	0x1000295de ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
	callq	0x100029764 ## symbol stub for: ___cxa_end_catch
	cmpb	$0, (%r12)
	setne	%al
	jmp	0x100009353
	movq	%rax, %r15
	callq	0x100029764 ## symbol stub for: ___cxa_end_catch
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %rdi
	callq	___clang_call_terminate
	nopw	%cs:(%rax,%rax)
__ZNK9benchmark8internal9Benchmark7ArgsCntEv:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	64(%rdi), %rcx
	cmpq	72(%rdi), %rcx
	je	0x10000941b
	movq	8(%rcx), %rax
	subq	(%rcx), %rax
	shrq	$3, %rax
	popq	%rbp
	retq
	movq	40(%rdi), %rcx
	movq	48(%rdi), %rax
	cmpq	%rax, %rcx
	je	0x100009437
	subq	%rcx, %rax
	shrq	$3, %rax
	imull	$2863311531, %eax, %eax
	popq	%rbp
	retq
	movl	$4294967295, %eax
	popq	%rbp
	retq
	nop
__ZN9benchmark8internal9Benchmark4ArgsERKNSt3__16vectorIxNS2_9allocatorIxEEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r15
	movq	%rdi, %r14
	movq	154565(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x10000948b
	movq	154552(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000948b
	movq	155032(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	154522(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	72(%r14), %rbx
	cmpq	80(%r14), %rbx
	je	0x100009504
	movq	$0, 16(%rbx)
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	movq	8(%r15), %rdi
	subq	(%r15), %rdi
	movq	%rdi, %r13
	sarq	$3, %r13
	je	0x1000094fd
	movq	%r13, %rax
	shrq	$61, %rax
	jne	0x100009522
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r12
	movq	%r12, 8(%rbx)
	movq	%r12, (%rbx)
	leaq	(%r12,%r13,8), %rax
	movq	%rax, 16(%rbx)
	movq	(%r15), %rsi
	movq	8(%r15), %r15
	subq	%rsi, %r15
	testq	%r15, %r15
	jle	0x1000094fd
	movq	%r12, %rdi
	movq	%r15, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	addq	%r15, %r12
	movq	%r12, 8(%rbx)
	addq	$24, 72(%r14)
	jmp	0x100009510
	leaq	64(%r14), %rdi
	movq	%r15, %rsi
	callq	__ZNSt3__16vectorINS0_IxNS_9allocatorIxEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ ## void std::__1::vector<std::__1::vector<long long, std::__1::allocator<long long> >, std::__1::allocator<std::__1::vector<long long, std::__1::allocator<long long> > > >::__push_back_slow_path<std::__1::vector<long long, std::__1::allocator<long long> > const&>(std::__1::vector<long long, std::__1::allocator<long long> > const&)
	movq	%r14, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rbx, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r14
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000953e
	movq	%rdi, 8(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorIN9benchmark8internal9Benchmark8InstanceENS_9allocatorIS4_EEE7reserveEm:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %r14
	movq	(%r14), %r12
	movq	16(%r14), %rax
	subq	%r12, %rax
	sarq	$3, %rax
	movabsq	$-8737931403336103397, %rcx
	imulq	%rax, %rcx
	cmpq	%rsi, %rcx
	jae	0x100009786
	movabsq	$121360158379668103, %rax
	cmpq	%rax, %rsi
	jae	0x100009795
	movq	8(%r14), %rbx
	movq	%rbx, %r13
	subq	%r12, %r13
	imulq	$152, %rsi, %r15
	movq	%r15, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	addq	%rax, %r13
	addq	%r15, %rax
	cmpq	%r12, %rbx
	je	0x100009703
	addq	$-56, %rbx
	negq	%r12
	movq	%r13, %rcx
	nopl	(%rax,%rax)
	movq	-80(%rbx), %rdx
	movq	%rdx, -136(%rcx)
	movq	-96(%rbx), %rdx
	movq	-88(%rbx), %rsi
	movq	%rsi, -144(%rcx)
	movq	%rdx, -152(%rcx)
	movq	$0, -80(%rbx)
	movq	$0, -88(%rbx)
	movq	$0, -96(%rbx)
	movl	-64(%rbx), %edx
	movl	%edx, -120(%rcx)
	movq	-72(%rbx), %rdx
	movq	%rdx, -128(%rcx)
	movq	$0, -96(%rcx)
	movq	$0, -104(%rcx)
	movq	$0, -112(%rcx)
	movups	-56(%rbx), %xmm0
	movups	%xmm0, -112(%rcx)
	movq	-40(%rbx), %rdx
	movq	%rdx, -96(%rcx)
	movq	$0, -40(%rbx)
	movq	$0, -48(%rbx)
	movq	$0, -56(%rbx)
	movq	-16(%rbx), %rdx
	movq	%rdx, -72(%rcx)
	movq	-32(%rbx), %rdx
	movq	-24(%rbx), %rsi
	movq	%rsi, -80(%rcx)
	movq	%rdx, -88(%rcx)
	movq	-8(%rbx), %rdx
	movq	%rdx, -64(%rcx)
	leaq	-56(%rcx), %rdx
	movq	(%rbx), %rsi
	movq	%rsi, -56(%rcx)
	movq	8(%rbx), %rdi
	movq	%rdi, -48(%rcx)
	testq	%rdi, %rdi
	je	0x1000096b0
	movq	%rdx, 16(%rsi)
	movq	%rbx, -8(%rbx)
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	jmp	0x1000096b4
	nopl	(%rax,%rax)
	movq	%rdx, -64(%rcx)
	movl	48(%rbx), %edx
	movl	%edx, -8(%rcx)
	movq	40(%rbx), %rdx
	movq	%rdx, -16(%rcx)
	movq	32(%rbx), %rdx
	movq	%rdx, -24(%rcx)
	movq	16(%rbx), %rdx
	movq	24(%rbx), %rsi
	movq	%rsi, -32(%rcx)
	movq	%rdx, -40(%rcx)
	addq	$-152, %rcx
	leaq	-152(%rbx,%r12), %rdx
	addq	$-152, %rbx
	cmpq	$-56, %rdx
	jne	0x1000095d0
	movq	(%r14), %rbx
	movq	8(%r14), %r12
	jmp	0x100009706
	movq	%r13, %rcx
	movq	%rcx, (%r14)
	movq	%r13, 8(%r14)
	movq	%rax, 16(%r14)
	cmpq	%rbx, %r12
	je	0x10000976b
	nopw	%cs:(%rax,%rax)
	leaq	-64(%r12), %rdi
	movq	-56(%r12), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	-112(%r12), %rdi
	testq	%rdi, %rdi
	je	0x100009743
	movq	%rdi, -104(%r12)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-152(%r12), %r14
	testb	$1, -152(%r12)
	je	0x100009763
	movq	-136(%r12), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%r14, %rbx
	movq	%r14, %r12
	jne	0x100009720
	testq	%rbx, %rbx
	je	0x100009786
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	149517(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	154176(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	153866(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	153715(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax,%rax)
__ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	subq	$16, %rsp
	movq	%rdi, %rbx
	movb	__ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %al ## guard variable for benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	testb	%al, %al
	jne	0x1000098bf
	leaq	__ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rdi ## guard variable for benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x1000098bf
	movq	$0, 159525(%rip)
	movq	$0, 159506(%rip)
	movq	$0, 159487(%rip)
	leaq	__ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rsi ## benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	movq	$850045863, 159493(%rip)
	movq	$0, 159538(%rip)
	movq	$0, 159519(%rip)
	movq	$0, 159500(%rip)
	movq	$0, 159481(%rip)
	movq	$0, 159462(%rip)
	movq	$0, 159443(%rip)
	movq	$0, 159424(%rip)
	movq	153489(%rip), %rdi
	leaq	__mh_execute_header(%rip), %rdx
	callq	0x100029758 ## symbol stub for: ___cxa_atexit
	leaq	__ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rdi ## guard variable for benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	%rbx, -24(%rbp)
	leaq	159374(%rip), %rdi
	callq	0x1000296b6 ## symbol stub for: __ZNSt3__15mutex4lockEv
	movq	159346(%rip), %rax
	cmpq	%rax, 159347(%rip)
	jbe	0x1000098f7
	movq	$0, -24(%rbp)
	movq	%rbx, (%rax)
	addq	$8, %rax
	movq	%rax, 159315(%rip)
	jmp	0x100009907
	leaq	__ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rdi ## benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	leaq	-24(%rbp), %rsi
	callq	__ZNSt3__16vectorINS_10unique_ptrIN9benchmark8internal9BenchmarkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ ## void std::__1::vector<std::__1::unique_ptr<benchmark::internal::Benchmark, std::__1::default_delete<benchmark::internal::Benchmark> >, std::__1::allocator<std::__1::unique_ptr<benchmark::internal::Benchmark, std::__1::default_delete<benchmark::internal::Benchmark> > > >::__push_back_slow_path<std::__1::unique_ptr<benchmark::internal::Benchmark, std::__1::default_delete<benchmark::internal::Benchmark> > >(std::__1::unique_ptr<benchmark::internal::Benchmark, std::__1::default_delete<benchmark::internal::Benchmark> >&&)
	leaq	159306(%rip), %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	movq	-24(%rbp), %rdi
	movq	$0, -24(%rbp)
	testq	%rdi, %rdi
	je	0x10000992a
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	%rbx, %rax
	addq	$16, %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	movq	%rax, %r14
	leaq	159256(%rip), %rdi
	callq	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	movq	-24(%rbp), %rbx
	movq	$0, -24(%rbp)
	testq	%rbx, %rbx
	jne	0x100009968
	jmp	0x100009971
	movq	%rax, %r14
	movq	$0, -24(%rbp)
	testq	%rbx, %rbx
	je	0x100009971
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*8(%rax)
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax)
__ZN9benchmark8internal22FindBenchmarksInternalERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS0_9Benchmark8InstanceENS5_ISC_EEEEPNS1_13basic_ostreamIcS4_EE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$32, %rsp
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %r12
	movb	__ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %al ## guard variable for benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	testb	%al, %al
	jne	0x100009a59
	leaq	__ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rdi ## guard variable for benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100009a59
	movq	$0, 159115(%rip)
	movq	$0, 159096(%rip)
	movq	$0, 159077(%rip)
	leaq	__ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rsi ## benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	movq	$850045863, 159083(%rip)
	movq	$0, 159128(%rip)
	movq	$0, 159109(%rip)
	movq	$0, 159090(%rip)
	movq	$0, 159071(%rip)
	movq	$0, 159052(%rip)
	movq	$0, 159033(%rip)
	movq	$0, 159014(%rip)
	movq	153079(%rip), %rdi
	leaq	__mh_execute_header(%rip), %rdx
	callq	0x100029758 ## symbol stub for: ___cxa_atexit
	leaq	__ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rdi ## guard variable for benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	leaq	-56(%rbp), %rbx
	movq	%rbx, %rdi
	movq	%r12, %rsi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	leaq	__ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rdi ## benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	movq	%rbx, %rsi
	movq	%r15, %rdx
	movq	%r14, %rcx
	callq	__ZN9benchmark8internal17BenchmarkFamilies14FindBenchmarksENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS2_6vectorINS0_9Benchmark8InstanceENS6_ISB_EEEEPNS2_13basic_ostreamIcS5_EE ## benchmark::internal::BenchmarkFamilies::FindBenchmarks(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<benchmark::internal::Benchmark::Instance, std::__1::allocator<benchmark::internal::Benchmark::Instance> >*, std::__1::basic_ostream<char, std::__1::char_traits<char> >*)
	movl	%eax, %ebx
	testb	$1, -56(%rbp)
	je	0x100009a8e
	movq	-40(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movl	%ebx, %eax
	addq	$32, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	testb	$1, -56(%rbp)
	je	0x100009aaf
	movq	-40(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	(%rax,%rax)
__ZN9benchmark8internal9BenchmarkC2EPKc:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$88, %rsp
	movq	%rsi, %r15
	movq	%rdi, %r12
	leaq	154642(%rip), %rax
	movq	%rax, (%r12)
	leaq	8(%r12), %r14
	movq	$0, 24(%r12)
	movq	$0, 16(%r12)
	movq	$0, 8(%r12)
	movq	%r15, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	%rax, %rbx
	cmpq	$-16, %rbx
	jae	0x100009d13
	cmpq	$23, %rbx
	movq	%r14, -120(%rbp)
	jae	0x100009b33
	movl	%ebx, %eax
	addb	%al, %al
	movb	%al, (%r14)
	leaq	1(%r14), %r13
	testq	%rbx, %rbx
	jne	0x100009b5c
	jmp	0x100009b6a
	movq	%rbx, %r14
	addq	$16, %r14
	andq	$-16, %r14
	movq	%r14, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r13
	movq	%r13, 24(%r12)
	orq	$1, %r14
	movq	%r14, 8(%r12)
	movq	%rbx, 16(%r12)
	movq	%r13, %rdi
	movq	%r15, %rsi
	movq	%rbx, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	movb	$0, (%r13,%rbx)
	movl	$0, 32(%r12)
	movabsq	$34359738368, %rax
	movq	%rax, 88(%r12)
	movq	$0, 80(%r12)
	movq	$0, 72(%r12)
	movq	$0, 64(%r12)
	movq	$0, 56(%r12)
	movq	$0, 48(%r12)
	movq	$0, 40(%r12)
	movl	$0, 120(%r12)
	movq	$0, 110(%r12)
	movq	$0, 104(%r12)
	movq	$0, 96(%r12)
	movq	$0, 176(%r12)
	movq	$0, 168(%r12)
	movq	$0, 160(%r12)
	movq	$0, 152(%r12)
	movq	$0, 144(%r12)
	movq	$0, 136(%r12)
	movq	$0, 128(%r12)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -112(%rbp)
	movq	$0, -96(%rbp)
	movb	$8, -112(%rbp)
	movl	$1851876717, -111(%rbp)
	movb	$0, -107(%rbp)
	leaq	__ZN9benchmark14StatisticsMeanERKNSt3__16vectorIdNS0_9allocatorIdEEEE(%rip), %rdx ## benchmark::StatisticsMean(std::__1::vector<double, std::__1::allocator<double> > const&)
	leaq	-112(%rbp), %rsi
	movq	%r12, %rdi
	callq	__ZN9benchmark8internal9Benchmark17ComputeStatisticsENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPFdRKNS2_6vectorIdNS6_IdEEEEE ## benchmark::internal::Benchmark::ComputeStatistics(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double (*)(std::__1::vector<double, std::__1::allocator<double> > const&))
	testb	$1, -112(%rbp)
	je	0x100009c76
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	$0, -72(%rbp)
	movq	$0, -80(%rbp)
	movb	$12, -88(%rbp)
	movw	$28257, -83(%rbp)
	movl	$1768187245, -87(%rbp)
	movb	$0, -81(%rbp)
	leaq	__ZN9benchmark16StatisticsMedianERKNSt3__16vectorIdNS0_9allocatorIdEEEE(%rip), %rdx ## benchmark::StatisticsMedian(std::__1::vector<double, std::__1::allocator<double> > const&)
	leaq	-88(%rbp), %rsi
	movq	%r12, %rdi
	callq	__ZN9benchmark8internal9Benchmark17ComputeStatisticsENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPFdRKNS2_6vectorIdNS6_IdEEEEE ## benchmark::internal::Benchmark::ComputeStatistics(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double (*)(std::__1::vector<double, std::__1::allocator<double> > const&))
	testb	$1, -88(%rbp)
	je	0x100009cbd
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	$0, -48(%rbp)
	movq	$0, -56(%rbp)
	movb	$12, -64(%rbp)
	movw	$30309, -59(%rbp)
	movl	$1684305011, -63(%rbp)
	movb	$0, -57(%rbp)
	leaq	__ZN9benchmark16StatisticsStdDevERKNSt3__16vectorIdNS0_9allocatorIdEEEE(%rip), %rdx ## benchmark::StatisticsStdDev(std::__1::vector<double, std::__1::allocator<double> > const&)
	leaq	-64(%rbp), %rsi
	movq	%r12, %rdi
	callq	__ZN9benchmark8internal9Benchmark17ComputeStatisticsENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPFdRKNS2_6vectorIdNS6_IdEEEEE ## benchmark::internal::Benchmark::ComputeStatistics(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double (*)(std::__1::vector<double, std::__1::allocator<double> > const&))
	testb	$1, -64(%rbp)
	je	0x100009d04
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$88, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r14, %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r15
	testb	$1, -64(%rbp)
	je	0x100009d4b
	movq	-48(%rbp), %rdi
	jmp	0x100009d46
	movq	%rax, %r15
	testb	$1, -88(%rbp)
	je	0x100009d4b
	movq	-72(%rbp), %rdi
	jmp	0x100009d46
	movq	%rax, %r15
	testb	$1, -112(%rbp)
	je	0x100009d4b
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	160(%r12), %rdi
	testq	%rdi, %rdi
	je	0x100009d65
	movq	%rdi, 168(%r12)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	136(%r12), %r14
	testq	%r14, %r14
	je	0x100009db4
	movq	144(%r12), %rax
	cmpq	%r14, %rax
	je	0x100009da4
	leaq	-32(%rax), %rbx
	testb	$1, -32(%rax)
	je	0x100009d92
	movq	-16(%rax), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r14
	movq	%rbx, %rax
	jne	0x100009d7f
	movq	136(%r12), %rdi
	jmp	0x100009da7
	movq	%r14, %rdi
	movq	%r14, 144(%r12)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	40(%r12), %r14
	movq	64(%r12), %r13
	testq	%r13, %r13
	je	0x100009dff
	movq	72(%r12), %rax
	cmpq	%r13, %rax
	je	0x100009df2
	leaq	-24(%rax), %rbx
	movq	-24(%rax), %rdi
	testq	%rdi, %rdi
	je	0x100009de3
	movq	%rdi, -16(%rax)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r13
	movq	%rbx, %rax
	jne	0x100009dcd
	movq	64(%r12), %rdi
	jmp	0x100009df5
	movq	%r13, %rdi
	movq	%r13, 72(%r12)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	(%r14), %r13
	testq	%r13, %r13
	je	0x100009e48
	movq	48(%r12), %rax
	cmpq	%r13, %rax
	je	0x100009e63
	nopw	%cs:(%rax,%rax)
	leaq	-24(%rax), %rbx
	testb	$1, -24(%rax)
	je	0x100009e33
	movq	-8(%rax), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r13
	movq	%rbx, %rax
	jne	0x100009e20
	movq	(%r14), %rdi
	movq	%r13, 48(%r12)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-120(%rbp), %rax
	testb	$1, (%rax)
	je	0x100009e5b
	movq	24(%r12), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%r13, %rdi
	jmp	0x100009e3e
	nopl	(%rax,%rax)
__ZN9benchmark8internal9Benchmark17ComputeStatisticsENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPFdRKNS2_6vectorIdNS6_IdEEEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$32, %rsp
	movq	%rdi, %rbx
	movq	%rdx, -40(%rbp)
	movq	144(%rbx), %r14
	cmpq	152(%rbx), %r14
	jae	0x100009ece
	leaq	-64(%rbp), %r15
	movq	%r15, %rdi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	movq	-40(%rbp), %r12
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	movq	%r12, 24(%r14)
	testb	$1, -64(%rbp)
	je	0x100009ec4
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$32, 144(%rbx)
	jmp	0x100009ede
	leaq	136(%rbx), %rdi
	leaq	-40(%rbp), %rdx
	callq	__ZNSt3__16vectorIN9benchmark10StatisticsENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEERPFdRKNS0_IdNS3_IdEEEEEEEEvDpOT_ ## void std::__1::vector<benchmark::Statistics, std::__1::allocator<benchmark::Statistics> >::__emplace_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, double (*&)(std::__1::vector<double, std::__1::allocator<double> > const&)>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, double (*&)(std::__1::vector<double, std::__1::allocator<double> > const&))
	movq	%rbx, %rax
	addq	$32, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x100009f00
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax,%rax)
__ZN9benchmark8internal9BenchmarkD2Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %r14
	leaq	153548(%rip), %rax
	movq	%rax, (%r14)
	movq	160(%r14), %rdi
	testq	%rdi, %rdi
	je	0x100009f3f
	movq	%rdi, 168(%r14)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	136(%r14), %r15
	testq	%r15, %r15
	je	0x100009f93
	movq	144(%r14), %rax
	cmpq	%r15, %rax
	je	0x100009f84
	nopw	(%rax,%rax)
	leaq	-32(%rax), %rbx
	testb	$1, -32(%rax)
	je	0x100009f73
	movq	-16(%rax), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r15
	movq	%rbx, %rax
	jne	0x100009f60
	movq	136(%r14), %rdi
	jmp	0x100009f87
	movq	%r15, %rdi
	movq	%r15, 144(%r14)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	64(%r14), %r15
	testq	%r15, %r15
	je	0x100009fe0
	movq	72(%r14), %rax
	cmpq	%r15, %rax
	je	0x100009fd4
	nopw	%cs:(%rax,%rax)
	leaq	-24(%rax), %rbx
	movq	-24(%rax), %rdi
	testq	%rdi, %rdi
	je	0x100009fc6
	movq	%rdi, -16(%rax)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r15
	movq	%rbx, %rax
	jne	0x100009fb0
	movq	64(%r14), %rdi
	jmp	0x100009fd7
	movq	%r15, %rdi
	movq	%r15, 72(%r14)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	40(%r14), %r15
	testq	%r15, %r15
	je	0x10000a02d
	movq	48(%r14), %rax
	cmpq	%r15, %rax
	je	0x10000a021
	nopw	%cs:(%rax,%rax)
	leaq	-24(%rax), %rbx
	testb	$1, -24(%rax)
	je	0x10000a013
	movq	-8(%rax), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r15
	movq	%rbx, %rax
	jne	0x10000a000
	movq	40(%r14), %rdi
	jmp	0x10000a024
	movq	%r15, %rdi
	movq	%r15, 48(%r14)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, 8(%r14)
	jne	0x10000a03f
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	24(%r14), %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopw	%cs:(%rax,%rax)
__ZN9benchmark8internal9BenchmarkD1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	ud2
	nopw	%cs:(%rax,%rax)
__ZN9benchmark8internal9BenchmarkD0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	ud2
	nopw	%cs:(%rax,%rax)
__ZN9benchmark8internal9Benchmark3ArgEx:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	subq	$32, %rsp
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	151432(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x10000a0c8
	movq	151419(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000a0c8
	movq	151899(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	151389(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -48(%rbp)
	movq	$0, -32(%rbp)
	movl	$8, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, -48(%rbp)
	leaq	8(%rax), %rcx
	movq	%rcx, -32(%rbp)
	movq	%r14, (%rax)
	movq	%rcx, -40(%rbp)
	movq	72(%rbx), %rax
	cmpq	80(%rbx), %rax
	jae	0x10000a13a
	movq	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	movaps	-48(%rbp), %xmm0
	movups	%xmm0, (%rax)
	movq	-32(%rbp), %rcx
	movq	%rcx, 16(%rax)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -48(%rbp)
	movq	$0, -32(%rbp)
	addq	$24, 72(%rbx)
	jmp	0x10000a159
	leaq	64(%rbx), %rdi
	leaq	-48(%rbp), %rsi
	callq	__ZNSt3__16vectorINS0_IxNS_9allocatorIxEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_ ## void std::__1::vector<std::__1::vector<long long, std::__1::allocator<long long> >, std::__1::allocator<std::__1::vector<long long, std::__1::allocator<long long> > > >::__push_back_slow_path<std::__1::vector<long long, std::__1::allocator<long long> > >(std::__1::vector<long long, std::__1::allocator<long long> >&&)
	movq	-48(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000a159
	movq	%rdi, -40(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rax
	addq	$32, %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	movq	%rax, %rbx
	movq	-48(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000a17a
	movq	%rdi, -40(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark8internal9Benchmark4UnitENS_8TimeUnitE:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%esi, 88(%rdi)
	movq	%rdi, %rax
	popq	%rbp
	retq
	nopl	(%rax)
__ZN9benchmark8internal9Benchmark5RangeExx:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	movq	%rdx, %r15
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	151135(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x10000a1f1
	movq	151122(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000a1f1
	movq	151602(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	151092(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -96(%rbp)
	movq	$0, -80(%rbp)
	movl	92(%r14), %ecx
	leaq	-96(%rbp), %rdi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	callq	__Z8AddRangeIxEvPNSt3__16vectorIT_NS0_9allocatorIS2_EEEES2_S2_i ## void AddRange<long long>(std::__1::vector<long long, std::__1::allocator<long long> >*, long long, long long, int)
	movq	-96(%rbp), %rbx
	movq	-88(%rbp), %r13
	cmpq	%r13, %rbx
	je	0x10000a2ef
	leaq	64(%r14), %r15
	nopl	(%rax,%rax)
	movq	(%rbx), %r12
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movl	$8, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, -64(%rbp)
	movq	%rax, %rcx
	addq	$8, %rcx
	movq	%rcx, -48(%rbp)
	movq	%r12, (%rax)
	movq	%rcx, -56(%rbp)
	movq	72(%r14), %rax
	cmpq	80(%r14), %rax
	jae	0x10000a2c0
	movq	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	movaps	-64(%rbp), %xmm0
	movups	%xmm0, (%rax)
	movq	-48(%rbp), %rcx
	movq	%rcx, 16(%rax)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	addq	$24, 72(%r14)
	addq	$8, %rbx
	cmpq	%rbx, %r13
	jne	0x10000a230
	jmp	0x10000a2eb
	nopw	%cs:(%rax,%rax)
	movq	%r15, %rdi
	leaq	-64(%rbp), %rsi
	callq	__ZNSt3__16vectorINS0_IxNS_9allocatorIxEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_ ## void std::__1::vector<std::__1::vector<long long, std::__1::allocator<long long> >, std::__1::allocator<std::__1::vector<long long, std::__1::allocator<long long> > > >::__push_back_slow_path<std::__1::vector<long long, std::__1::allocator<long long> > >(std::__1::vector<long long, std::__1::allocator<long long> >&&)
	movq	-64(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000a2de
	movq	%rdi, -56(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$8, %rbx
	cmpq	%rbx, %r13
	jne	0x10000a230
	movq	-96(%rbp), %rbx
	testq	%rbx, %rbx
	je	0x10000a300
	movq	%rbx, -88(%rbp)
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rax
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	jmp	0x10000a345
	movq	%rax, %rbx
	movq	-64(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x10000a331
	movq	-96(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x10000a351
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rdi, -56(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-96(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000a329
	jmp	0x10000a351
	movq	%rax, %rbx
	movq	-96(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000a329
	movq	%rdi, -88(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__Z8AddRangeIxEvPNSt3__16vectorIT_NS0_9allocatorIS2_EEEES2_S2_i:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$32, %rsp
	movl	%ecx, %r14d
	movq	%rdi, %r15
	movq	%rsi, -40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	150668(%rip), %rbx ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rbx), %al
	testb	%al, %al
	jne	0x10000a3c4
	movq	150655(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000a3c4
	movq	151135(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	150625(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	(%rbx), %al
	testb	%al, %al
	jne	0x10000a3f4
	movq	150607(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000a3f4
	movq	151087(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	150577(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	(%rbx), %al
	testb	%al, %al
	jne	0x10000a424
	movq	150559(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000a424
	movq	151039(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	150529(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	8(%r15), %rax
	cmpq	16(%r15), %rax
	je	0x10000a43f
	movq	-40(%rbp), %rcx
	movq	%rcx, (%rax)
	addq	$8, %rax
	movq	%rax, 8(%r15)
	jmp	0x10000a44b
	leaq	-40(%rbp), %rsi
	movq	%r15, %rdi
	callq	__ZNSt3__16vectorIxNS_9allocatorIxEEE21__push_back_slow_pathIRKxEEvOT_ ## void std::__1::vector<long long, std::__1::allocator<long long> >::__push_back_slow_path<long long const&>(long long const&)
	movq	$1, -48(%rbp)
	movslq	%r14d, %r12
	movabsq	$9223372036854775807, %rax
	xorl	%edx, %edx
	idivq	%r12
	movq	%rax, %rbx
	cmpq	$2, %rbx
	movq	-56(%rbp), %rax
	jl	0x10000a4da
	cmpq	$2, %rax
	jl	0x10000a4da
	movl	$1, %ecx
	leaq	-48(%rbp), %r14
	nopw	%cs:(%rax,%rax)
	cmpq	-40(%rbp), %rcx
	jle	0x10000a4c0
	movq	8(%r15), %rax
	cmpq	16(%r15), %rax
	je	0x10000a4ad
	movq	%rcx, (%rax)
	addq	$8, %rax
	movq	%rax, 8(%r15)
	jmp	0x10000a4c0
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	__ZNSt3__16vectorIxNS_9allocatorIxEEE21__push_back_slow_pathIRKxEEvOT_ ## void std::__1::vector<long long, std::__1::allocator<long long> >::__push_back_slow_path<long long const&>(long long const&)
	nopl	(%rax,%rax)
	movq	-48(%rbp), %rcx
	imulq	%r12, %rcx
	movq	%rcx, -48(%rbp)
	cmpq	%rbx, %rcx
	movq	-56(%rbp), %rax
	jge	0x10000a4da
	cmpq	%rax, %rcx
	jl	0x10000a490
	cmpq	-40(%rbp), %rax
	je	0x10000a503
	movq	8(%r15), %rcx
	cmpq	16(%r15), %rcx
	je	0x10000a4f7
	movq	%rax, (%rcx)
	addq	$8, %rcx
	movq	%rcx, 8(%r15)
	jmp	0x10000a503
	leaq	-56(%rbp), %rsi
	movq	%r15, %rdi
	callq	__ZNSt3__16vectorIxNS_9allocatorIxEEE21__push_back_slow_pathIRKxEEvOT_ ## void std::__1::vector<long long, std::__1::allocator<long long> >::__push_back_slow_path<long long const&>(long long const&)
	addq	$32, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
__ZN9benchmark8internal9Benchmark6RangesERKNSt3__16vectorINS2_4pairIxxEENS2_9allocatorIS5_EEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$104, %rsp
	movq	%rsi, %r14
	movq	%rdi, %r12
	movq	150258(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x10000a55e
	movq	150245(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000a55e
	movq	150725(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	150215(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	8(%r14), %rsi
	subq	(%r14), %rsi
	sarq	$4, %rsi
	leaq	-64(%rbp), %rdi
	callq	__ZNSt3__16vectorINS0_IxNS_9allocatorIxEEEENS1_IS3_EEEC2Em ## std::__1::vector<std::__1::vector<long long, std::__1::allocator<long long> >, std::__1::allocator<std::__1::vector<long long, std::__1::allocator<long long> > > >::vector(unsigned long)
	movq	(%r14), %rcx
	cmpq	%rcx, 8(%r14)
	movq	%r12, -136(%rbp)
	jne	0x10000a591
	movq	-64(%rbp), %r15
	movl	$1, %eax
	movq	%rax, -72(%rbp)
	jmp	0x10000a610
	movq	-64(%rbp), %r15
	movl	$1, %eax
	movq	%rax, -72(%rbp)
	xorl	%ebx, %ebx
	movl	$8, %r13d
	xorl	%r12d, %r12d
	nopl	(%rax)
	addq	%rbx, %r15
	movq	-8(%rcx,%r13), %rsi
	movq	(%rcx,%r13), %rdx
	movq	-136(%rbp), %rax
	movl	92(%rax), %ecx
	movq	%r15, %rdi
	callq	__Z8AddRangeIxEvPNSt3__16vectorIT_NS0_9allocatorIS2_EEEES2_S2_i ## void AddRange<long long>(std::__1::vector<long long, std::__1::allocator<long long> >*, long long, long long, int)
	movq	-64(%rbp), %r15
	movq	8(%r15,%rbx), %rax
	subq	(%r15,%rbx), %rax
	sarq	$3, %rax
	movq	-72(%rbp), %rcx
	imulq	%rax, %rcx
	movq	%rcx, -72(%rbp)
	incq	%r12
	movq	(%r14), %rcx
	movq	8(%r14), %rax
	subq	%rcx, %rax
	sarq	$4, %rax
	addq	$24, %rbx
	addq	$16, %r13
	cmpq	%rax, %r12
	jb	0x10000a5b0
	movq	-136(%rbp), %r12
	movq	-56(%rbp), %r13
	movq	%r13, %rbx
	subq	%r15, %rbx
	movabsq	$-6148914691236517205, %rax
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -128(%rbp)
	movq	$0, -112(%rbp)
	je	0x10000a6e7
	sarq	$3, %rbx
	imulq	%rax, %rbx
	movq	%rbx, %rax
	shrq	$61, %rax
	jne	0x10000a8fc
	leaq	(,%rbx,8), %rdi
	movq	%rdi, %r12
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r14
	movq	%r14, -128(%rbp)
	leaq	(%r14,%rbx,8), %rbx
	movq	%rbx, -112(%rbp)
	movq	%r14, %rdi
	movq	%r12, %rsi
	callq	0x10002974c ## symbol stub for: ___bzero
	movq	%rbx, -120(%rbp)
	movq	-136(%rbp), %r12
	cmpq	$0, -72(%rbp)
	jne	0x10000a6f1
	testq	%r14, %r14
	je	0x10000a69b
	movq	%r14, -120(%rbp)
	movq	%r14, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-64(%rbp), %r14
	testq	%r14, %r14
	je	0x10000a8d0
	movq	-56(%rbp), %rax
	cmpq	%r14, %rax
	je	0x10000a8c4
	nopw	%cs:(%rax,%rax)
	leaq	-24(%rax), %rbx
	movq	-24(%rax), %rdi
	testq	%rdi, %rdi
	je	0x10000a6d6
	movq	%rdi, -16(%rax)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r14
	movq	%rbx, %rax
	jne	0x10000a6c0
	movq	-64(%rbp), %rdi
	jmp	0x10000a8c7
	xorl	%r14d, %r14d
	cmpq	$0, -72(%rbp)
	je	0x10000a68a
	leaq	64(%r12), %rax
	movq	%rax, -144(%rbp)
	xorl	%r14d, %r14d
	jmp	0x10000a748
	nopw	%cs:(%rax,%rax)
	movq	-96(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000a722
	movq	%rdi, -88(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	incq	%r14
	cmpq	-72(%rbp), %r14
	jb	0x10000a740
	jmp	0x10000a8e2
	movq	%rdi, (%rdx,%rsi,8)
	movq	-96(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x10000a719
	jmp	0x10000a722
	nop
	movq	-64(%rbp), %r15
	movq	-56(%rbp), %r13
	subq	%r15, %r13
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -96(%rbp)
	movq	$0, -80(%rbp)
	sarq	$3, %r13
	movabsq	$-6148914691236517205, %r15
	imulq	%r15, %r13
	leaq	-96(%rbp), %rdi
	movq	%r13, %rsi
	callq	__ZNSt3__16vectorIxNS_9allocatorIxEEE7reserveEm ## std::__1::vector<long long, std::__1::allocator<long long> >::reserve(unsigned long)
	movq	-64(%rbp), %rdi
	movq	-56(%rbp), %rcx
	cmpq	%rdi, %rcx
	je	0x10000a7fb
	xorl	%r13d, %r13d
	xorl	%ebx, %ebx
	nopw	(%rax,%rax)
	movq	-128(%rbp), %rax
	movq	(%rax,%rbx,8), %rax
	movq	(%rdi,%r13), %rdx
	movq	8(%rdi,%r13), %rsi
	subq	%rdx, %rsi
	sarq	$3, %rsi
	cmpq	%rax, %rsi
	jbe	0x10000a8f4
	leaq	(%rdx,%rax,8), %rsi
	movq	-88(%rbp), %rax
	cmpq	-80(%rbp), %rax
	je	0x10000a7d0
	movq	(%rsi), %rdx
	movq	%rdx, (%rax)
	addq	$8, %rax
	movq	%rax, -88(%rbp)
	jmp	0x10000a7e1
	nop
	leaq	-96(%rbp), %rdi
	callq	__ZNSt3__16vectorIxNS_9allocatorIxEEE21__push_back_slow_pathIRKxEEvOT_ ## void std::__1::vector<long long, std::__1::allocator<long long> >::__push_back_slow_path<long long const&>(long long const&)
	movq	-64(%rbp), %rdi
	movq	-56(%rbp), %rcx
	incq	%rbx
	movq	%rcx, %rax
	subq	%rdi, %rax
	sarq	$3, %rax
	imulq	%r15, %rax
	addq	$24, %r13
	cmpq	%rax, %rbx
	jb	0x10000a790
	movq	72(%r12), %rax
	cmpq	80(%r12), %rax
	jae	0x10000a850
	movq	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	movaps	-96(%rbp), %xmm0
	movups	%xmm0, (%rax)
	movq	-80(%rbp), %rcx
	movq	%rcx, 16(%rax)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -96(%rbp)
	movq	$0, -80(%rbp)
	addq	$24, 72(%r12)
	jmp	0x10000a860
	nopw	%cs:(%rax,%rax)
	movq	-144(%rbp), %rdi
	leaq	-96(%rbp), %rsi
	callq	__ZNSt3__16vectorINS0_IxNS_9allocatorIxEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_ ## void std::__1::vector<std::__1::vector<long long, std::__1::allocator<long long> >, std::__1::allocator<std::__1::vector<long long, std::__1::allocator<long long> > > >::__push_back_slow_path<std::__1::vector<long long, std::__1::allocator<long long> > >(std::__1::vector<long long, std::__1::allocator<long long> >&&)
	movq	-64(%rbp), %rax
	movq	-56(%rbp), %rcx
	subq	%rax, %rcx
	je	0x10000a710
	movq	-128(%rbp), %rdx
	sarq	$3, %rcx
	imulq	%r15, %rcx
	addq	$8, %rax
	xorl	%esi, %esi
	nopw	%cs:(%rax,%rax)
	movq	(%rdx,%rsi,8), %rdi
	incq	%rdi
	movq	(%rax), %rbx
	subq	-8(%rax), %rbx
	sarq	$3, %rbx
	cmpq	%rbx, %rdi
	jb	0x10000a730
	movq	$0, (%rdx,%rsi,8)
	incq	%rsi
	addq	$24, %rax
	cmpq	%rcx, %rsi
	jb	0x10000a890
	jmp	0x10000a710
	movq	%r14, %rdi
	movq	%r14, -56(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r12, %rax
	addq	$104, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	-128(%rbp), %r14
	testq	%r14, %r14
	jne	0x10000a68f
	jmp	0x10000a69b
	addq	%r13, %rdi
	callq	0x1000295a2 ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv
	leaq	-128(%rbp), %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	jmp	0x10000a925
	movq	%rax, %r14
	movq	-128(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x10000a943
	jmp	0x10000a94c
	jmp	0x10000a925
	movq	%rax, %r14
	movq	-64(%rbp), %r15
	testq	%r15, %r15
	jne	0x10000a955
	jmp	0x10000a98b
	movq	%rax, %r14
	movq	-96(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000a93a
	movq	%rdi, -88(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-128(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000a94c
	movq	%rdi, -120(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-64(%rbp), %r15
	testq	%r15, %r15
	je	0x10000a98b
	movq	-56(%rbp), %rax
	cmpq	%r15, %rax
	je	0x10000a993
	nop
	leaq	-24(%rax), %rbx
	movq	-24(%rax), %rdi
	testq	%rdi, %rdi
	je	0x10000a976
	movq	%rdi, -16(%rax)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r15
	movq	%rbx, %rax
	jne	0x10000a960
	movq	-64(%rbp), %rdi
	movq	%r15, -56(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%r15, %rdi
	jmp	0x10000a982
	nopl	(%rax,%rax)
__ZNSt3__16vectorIxNS_9allocatorIxEEE7reserveEm:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r15
	movq	%rdi, %rbx
	movq	(%rbx), %r14
	movq	16(%rbx), %rax
	subq	%r14, %rax
	sarq	$3, %rax
	cmpq	%r15, %rax
	jae	0x10000aa31
	movq	%r15, %rax
	shrq	$61, %rax
	jne	0x10000aa40
	movq	8(%rbx), %r12
	subq	%r14, %r12
	leaq	(,%r15,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r13
	leaq	(%r13,%r15,8), %rax
	movq	%r13, %r15
	addq	%r12, %r15
	testq	%r12, %r12
	jle	0x10000aa0b
	movq	%r13, %rdi
	movq	%r14, %rsi
	movq	%r12, %rdx
	movq	%rax, %r12
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r12, %rax
	movq	%r13, (%rbx)
	movq	%r15, 8(%rbx)
	movq	%rax, 16(%rbx)
	testq	%r14, %r14
	je	0x10000aa31
	movq	%r14, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	144738(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	149397(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	149087(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	148936(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark8internal9Benchmark7ArgNameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	subq	$32, %rsp
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	149368(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)
	movq	148826(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x10000aaf6
	movq	148813(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000aaf6
	movq	149293(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	148783(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	leaq	-48(%rbp), %rdi
	movq	%rbx, %rsi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	leaq	40(%r14), %rdi
	leaq	-24(%rbp), %rdx
	leaq	-48(%rbp), %rsi
	callq	__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPKS6_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_ ## std::__1::enable_if<(__is_forward_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*>::value) && (is_constructible<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::iterator_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*>::reference>::value), void>::type std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::assign<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*)
	testb	$1, -48(%rbp)
	je	0x10000ab22
	movq	-32(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	149255(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	cmpq	-24(%rbp), %rax
	jne	0x10000ab3e
	movq	%r14, %rax
	addq	$32, %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	callq	0x1000297a0 ## symbol stub for: ___stack_chk_fail
	movq	%rax, %rbx
	testb	$1, -48(%rbp)
	je	0x10000ab55
	movq	-32(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %rbx
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax,%rax)
__ZN9benchmark8internal9Benchmark8ArgNamesERKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	148636(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x10000abb4
	movq	148623(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000abb4
	movq	149103(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	148593(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	leaq	40(%r14), %rdi
	cmpq	%rbx, %rdi
	je	0x10000abc9
	movq	(%rbx), %rsi
	movq	8(%rbx), %rdx
	callq	__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPKS6_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_ ## std::__1::enable_if<(__is_forward_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*>::value) && (is_constructible<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::iterator_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*>::reference>::value), void>::type std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::assign<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*)
	movq	%r14, %rax
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZN9benchmark8internal9Benchmark10DenseRangeExxi:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movl	%ecx, %r12d
	movq	%rdx, %r14
	movq	%rsi, %rbx
	movq	%rdi, %r15
	movq	148508(%rip), %r13 ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%r13), %al
	testb	%al, %al
	jne	0x10000ac36
	movq	148493(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000ac36
	movq	148973(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	148463(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	(%r13), %al
	testb	%al, %al
	jne	0x10000ac68
	movq	148443(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000ac68
	movq	148923(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	148413(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	(%r13), %al
	testb	%al, %al
	jne	0x10000ac9a
	movq	148393(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000ac9a
	movq	148873(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	148363(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	cmpq	%r14, %rbx
	jg	0x10000ad50
	leaq	64(%r15), %r13
	movslq	%r12d, %r12
	xorps	%xmm0, %xmm0
	nopl	(%rax)
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movl	$8, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, -64(%rbp)
	leaq	8(%rax), %rcx
	movq	%rcx, -48(%rbp)
	movq	%rbx, (%rax)
	movq	%rcx, -56(%rbp)
	movq	72(%r15), %rax
	cmpq	80(%r15), %rax
	jae	0x10000ad20
	movq	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	movaps	-64(%rbp), %xmm0
	movups	%xmm0, (%rax)
	movq	-48(%rbp), %rcx
	movq	%rcx, 16(%rax)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	addq	$24, 72(%r15)
	jmp	0x10000ad41
	nop
	movq	%r13, %rdi
	leaq	-64(%rbp), %rsi
	callq	__ZNSt3__16vectorINS0_IxNS_9allocatorIxEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_ ## void std::__1::vector<std::__1::vector<long long, std::__1::allocator<long long> >, std::__1::allocator<std::__1::vector<long long, std::__1::allocator<long long> > > >::__push_back_slow_path<std::__1::vector<long long, std::__1::allocator<long long> > >(std::__1::vector<long long, std::__1::allocator<long long> >&&)
	movq	-64(%rbp), %rdi
	testq	%rdi, %rdi
	xorps	%xmm0, %xmm0
	je	0x10000ad44
	movq	%rdi, -56(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	xorps	%xmm0, %xmm0
	addq	%r12, %rbx
	cmpq	%r14, %rbx
	jle	0x10000acb0
	movq	%r15, %rax
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	movq	-64(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000ad77
	movq	%rdi, -56(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nop
__ZN9benchmark8internal9Benchmark5ApplyEPFvPS1_E:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	callq	*%rsi
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZN9benchmark8internal9Benchmark15RangeMultiplierEi:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movl	%esi, %r14d
	movq	%rdi, %rbx
	movq	148076(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x10000ade4
	movq	148063(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000ade4
	movq	148543(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	148033(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movl	%r14d, 92(%rbx)
	movq	%rbx, %rax
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
__ZN9benchmark8internal9Benchmark7MinTimeEd:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	subq	$16, %rsp
	movsd	%xmm0, -24(%rbp)
	movq	%rdi, %rbx
	movq	147990(%rip), %r14 ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%r14), %al
	testb	%al, %al
	jne	0x10000ae3b
	movq	147976(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000ae3b
	movq	148456(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	147946(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	(%r14), %al
	testb	%al, %al
	jne	0x10000ae6c
	movq	147927(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000ae6c
	movq	148407(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	147897(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movsd	-24(%rbp), %xmm0
	movsd	%xmm0, 96(%rbx)
	movq	%rbx, %rax
	addq	$16, %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZN9benchmark8internal9Benchmark10IterationsEm:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	147833(%rip), %r15 ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%r15), %al
	testb	%al, %al
	jne	0x10000aed8
	movq	147819(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000aed8
	movq	148299(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	147789(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	(%r15), %al
	testb	%al, %al
	jne	0x10000af09
	movq	147770(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000af09
	movq	148250(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	147740(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	%r14, 104(%rbx)
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZN9benchmark8internal9Benchmark11RepetitionsEi:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movl	%esi, %r14d
	movq	%rdi, %rbx
	movq	147692(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x10000af64
	movq	147679(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000af64
	movq	148159(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	147649(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movl	%r14d, 112(%rbx)
	movq	%rbx, %rax
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
__ZN9benchmark8internal9Benchmark20ReportAggregatesOnlyEb:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	%sil, %eax
	incl	%eax
	movl	%eax, 32(%rdi)
	movq	%rdi, %rax
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZN9benchmark8internal9Benchmark11UseRealTimeEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	147584(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x10000afd0
	movq	147571(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000afd0
	movq	148051(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	147541(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	148025(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	0x10000aff0
	leaq	143255(%rip), %rsi ## literal pool for: "Cannot set UseRealTime and UseManualTime simultaneously."
	movl	$56, %edx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movb	$1, 116(%rbx)
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nop
__ZN9benchmark8internal9Benchmark13UseManualTimeEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	147472(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x10000b040
	movq	147459(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000b040
	movq	147939(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	147429(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	147913(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	0x10000b060
	leaq	143143(%rip), %rsi ## literal pool for: "Cannot set UseRealTime and UseManualTime simultaneously."
	movl	$56, %edx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movb	$1, 117(%rbx)
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nop
__ZN9benchmark8internal9Benchmark10ComplexityENS_4BigOE:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%esi, 120(%rdi)
	movq	%rdi, %rax
	popq	%rbp
	retq
	nopl	(%rax)
__ZN9benchmark8internal9Benchmark10ComplexityEPFdxE:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rsi, 128(%rdi)
	movl	$8, 120(%rdi)
	movq	%rdi, %rax
	popq	%rbp
	retq
	nopw	(%rax,%rax)
__ZN9benchmark8internal9Benchmark7ThreadsEi:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movl	%esi, -12(%rbp)
	movq	147309(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x10000b0e3
	movq	147296(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000b0e3
	movq	147776(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	147266(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	168(%rbx), %rax
	cmpq	176(%rbx), %rax
	je	0x10000b105
	movl	-12(%rbp), %ecx
	movl	%ecx, (%rax)
	addq	$4, %rax
	movq	%rax, 168(%rbx)
	jmp	0x10000b115
	leaq	160(%rbx), %rdi
	leaq	-12(%rbp), %rsi
	callq	__ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_ ## void std::__1::vector<int, std::__1::allocator<int> >::__push_back_slow_path<int const&>(int const&)
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nop
__ZN9benchmark8internal9Benchmark11ThreadRangeEii:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movl	%edx, %r14d
	movl	%esi, %r15d
	movq	%rdi, %rbx
	movq	147173(%rip), %r12 ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%r12), %al
	testb	%al, %al
	jne	0x10000b16d
	movq	147158(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000b16d
	movq	147638(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	147128(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	(%r12), %al
	testb	%al, %al
	jne	0x10000b19f
	movq	147108(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000b19f
	movq	147588(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	147078(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	leaq	160(%rbx), %rdi
	movl	$2, %ecx
	movl	%r15d, %esi
	movl	%r14d, %edx
	callq	__Z8AddRangeIiEvPNSt3__16vectorIT_NS0_9allocatorIS2_EEEES2_S2_i ## void AddRange<int>(std::__1::vector<int, std::__1::allocator<int> >*, int, int, int)
	movq	%rbx, %rax
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__Z8AddRangeIiEvPNSt3__16vectorIT_NS0_9allocatorIS2_EEEES2_S2_i:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$16, %rsp
	movl	%ecx, %r14d
	movq	%rdi, %r15
	movl	%esi, -36(%rbp)
	movl	%edx, -44(%rbp)
	movq	146990(%rip), %rbx ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rbx), %al
	testb	%al, %al
	jne	0x10000b222
	movq	146977(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000b222
	movq	147457(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	146947(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	(%rbx), %al
	testb	%al, %al
	jne	0x10000b252
	movq	146929(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000b252
	movq	147409(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	146899(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	(%rbx), %al
	testb	%al, %al
	jne	0x10000b282
	movq	146881(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000b282
	movq	147361(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	146851(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	8(%r15), %rax
	cmpq	16(%r15), %rax
	je	0x10000b29b
	movl	-36(%rbp), %ecx
	movl	%ecx, (%rax)
	addq	$4, %rax
	movq	%rax, 8(%r15)
	jmp	0x10000b2a7
	leaq	-36(%rbp), %rsi
	movq	%r15, %rdi
	callq	__ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_ ## void std::__1::vector<int, std::__1::allocator<int> >::__push_back_slow_path<int const&>(int const&)
	movl	$1, -40(%rbp)
	movl	$2147483647, %eax
	xorl	%edx, %edx
	idivl	%r14d
	movl	%eax, %ebx
	cmpl	$2, %ebx
	movl	-44(%rbp), %eax
	jl	0x10000b315
	cmpl	$2, %eax
	jl	0x10000b315
	movl	$1, %ecx
	leaq	-40(%rbp), %r12
	cmpl	-36(%rbp), %ecx
	jle	0x10000b300
	movq	8(%r15), %rax
	cmpq	16(%r15), %rax
	je	0x10000b2eb
	movl	%ecx, (%rax)
	addq	$4, %rax
	movq	%rax, 8(%r15)
	jmp	0x10000b300
	movq	%r15, %rdi
	movq	%r12, %rsi
	callq	__ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_ ## void std::__1::vector<int, std::__1::allocator<int> >::__push_back_slow_path<int const&>(int const&)
	nopw	%cs:(%rax,%rax)
	movl	-40(%rbp), %ecx
	imull	%r14d, %ecx
	movl	%ecx, -40(%rbp)
	cmpl	%ebx, %ecx
	movl	-44(%rbp), %eax
	jge	0x10000b315
	cmpl	%eax, %ecx
	jl	0x10000b2d0
	cmpl	-36(%rbp), %eax
	je	0x10000b33c
	movq	8(%r15), %rcx
	cmpq	16(%r15), %rcx
	je	0x10000b330
	movl	%eax, (%rcx)
	addq	$4, %rcx
	movq	%rcx, 8(%r15)
	jmp	0x10000b33c
	leaq	-44(%rbp), %rsi
	movq	%r15, %rdi
	callq	__ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_ ## void std::__1::vector<int, std::__1::allocator<int> >::__push_back_slow_path<int const&>(int const&)
	addq	$16, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopl	(%rax)
__ZN9benchmark8internal9Benchmark16DenseThreadRangeEiii:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movl	%ecx, %r14d
	movl	%esi, %ebx
	movq	%rdi, %r15
	movl	%edx, -48(%rbp)
	movq	146608(%rip), %r12 ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%r12), %al
	testb	%al, %al
	jne	0x10000b3a2
	movq	146593(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000b3a2
	movq	147073(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	146563(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	(%r12), %al
	testb	%al, %al
	jne	0x10000b3d4
	movq	146543(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000b3d4
	movq	147023(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	146513(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	(%r12), %al
	testb	%al, %al
	jne	0x10000b406
	movq	146493(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000b406
	movq	146973(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	146463(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movl	%ebx, -44(%rbp)
	movl	-48(%rbp), %eax
	cmpl	%ebx, %eax
	jle	0x10000b45b
	leaq	160(%r15), %r12
	leaq	-44(%rbp), %r13
	nopl	(%rax,%rax)
	movq	168(%r15), %rax
	cmpq	176(%r15), %rax
	je	0x10000b440
	movl	%ebx, (%rax)
	addq	$4, %rax
	movq	%rax, 168(%r15)
	jmp	0x10000b44b
	nop
	movq	%r12, %rdi
	movq	%r13, %rsi
	callq	__ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_ ## void std::__1::vector<int, std::__1::allocator<int> >::__push_back_slow_path<int const&>(int const&)
	movl	-44(%rbp), %ebx
	addl	%r14d, %ebx
	movl	%ebx, -44(%rbp)
	movl	-48(%rbp), %eax
	cmpl	%eax, %ebx
	jl	0x10000b420
	movq	168(%r15), %rcx
	cmpq	176(%r15), %rcx
	je	0x10000b47a
	movl	%eax, (%rcx)
	addq	$4, %rcx
	movq	%rcx, 168(%r15)
	jmp	0x10000b48a
	leaq	160(%r15), %rdi
	leaq	-48(%rbp), %rsi
	callq	__ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_ ## void std::__1::vector<int, std::__1::allocator<int> >::__push_back_slow_path<int const&>(int const&)
	movq	%r15, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopl	(%rax)
__ZN9benchmark8internal9Benchmark12ThreadPerCpuEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	callq	__ZN9benchmark7CPUInfo3GetEv ## benchmark::CPUInfo::Get()
	movq	168(%rbx), %rcx
	cmpq	176(%rbx), %rcx
	je	0x10000b4cf
	movl	(%rax), %eax
	movl	%eax, (%rcx)
	addq	$4, %rcx
	movq	%rcx, 168(%rbx)
	jmp	0x10000b4de
	leaq	160(%rbx), %rdi
	movq	%rax, %rsi
	callq	__ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_ ## void std::__1::vector<int, std::__1::allocator<int> >::__push_back_slow_path<int const&>(int const&)
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZN9benchmark8internal9Benchmark7SetNameEPKc:
	pushq	%rbp
	movq	%rsp, %rbp
	addq	$8, %rdi
	popq	%rbp
	jmp	0x1000295de ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
	nop
__ZN9benchmark8internal17FunctionBenchmark3RunERNS_5StateE:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, %rax
	movq	%rsi, %rdi
	popq	%rbp
	jmpq	*184(%rax)
	nopw	%cs:(%rax,%rax)
__ZN9benchmark25ClearRegisteredBenchmarksEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movb	__ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %al ## guard variable for benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	testb	%al, %al
	jne	0x10000b5e8
	leaq	__ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rdi ## guard variable for benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10000b5e8
	movq	$0, 152060(%rip)
	movq	$0, 152041(%rip)
	movq	$0, 152022(%rip)
	leaq	__ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rsi ## benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	movq	$850045863, 152028(%rip)
	movq	$0, 152073(%rip)
	movq	$0, 152054(%rip)
	movq	$0, 152035(%rip)
	movq	$0, 152016(%rip)
	movq	$0, 151997(%rip)
	movq	$0, 151978(%rip)
	movq	$0, 151959(%rip)
	movq	146024(%rip), %rdi
	leaq	__mh_execute_header(%rip), %rdx
	callq	0x100029758 ## symbol stub for: ___cxa_atexit
	leaq	__ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rdi ## guard variable for benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	leaq	151913(%rip), %rdi
	callq	0x1000296b6 ## symbol stub for: __ZNSt3__15mutex4lockEv
	movq	__ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %r14 ## benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	movq	151878(%rip), %rbx
	cmpq	%r14, %rbx
	je	0x10000b630
	nopw	(%rax,%rax)
	movq	-8(%rbx), %rdi
	movq	$0, -8(%rbx)
	leaq	-8(%rbx), %rbx
	testq	%rdi, %rdi
	je	0x10000b62b
	movq	(%rdi), %rax
	callq	*8(%rax)
	cmpq	%rbx, %r14
	jne	0x10000b610
	movq	%r14, 151825(%rip)
	leaq	__ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance(%rip), %rdi ## benchmark::internal::BenchmarkFamilies::GetInstance()::instance
	callq	__ZNSt3__16vectorINS_10unique_ptrIN9benchmark8internal9BenchmarkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE13shrink_to_fitEv ## std::__1::vector<std::__1::unique_ptr<benchmark::internal::Benchmark, std::__1::default_delete<benchmark::internal::Benchmark> >, std::__1::allocator<std::__1::unique_ptr<benchmark::internal::Benchmark, std::__1::default_delete<benchmark::internal::Benchmark> > > >::shrink_to_fit()
	leaq	151822(%rip), %rdi
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmp	0x1000296bc ## symbol stub for: __ZNSt3__15mutex6unlockEv
	nopw	%cs:(%rax,%rax)
__ZN9benchmark8internal17FunctionBenchmarkD1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark8internal9BenchmarkD2Ev ## benchmark::internal::Benchmark::~Benchmark()
	nopw	(%rax,%rax)
__ZN9benchmark8internal17FunctionBenchmarkD0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	callq	__ZN9benchmark8internal9BenchmarkD2Ev ## benchmark::internal::Benchmark::~Benchmark()
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopl	(%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE7__parseINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rdx, -48(%rbp)
	movq	%rsi, %r15
	movq	%rdi, %r13
	movl	$8, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r12
	movq	146025(%rip), %r14
	addq	$16, %r14
	movq	%r14, (%r12)
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	%r12, 8(%rbx)
	movq	146025(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	%rbx, -64(%rbp)
	movl	$32, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	146109(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, (%rax)
	movq	%rbx, 24(%rax)
	movq	%rax, -56(%rbp)
	leaq	-64(%rbp), %rdi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	movq	%rbx, %rdx
	callq	__ZNSt3__110shared_ptrINS_13__empty_stateIcEEE18__enable_weak_thisEz ## std::__1::shared_ptr<std::__1::__empty_state<char> >::__enable_weak_this(...)
	movdqu	40(%r13), %xmm0
	movaps	-64(%rbp), %xmm1
	movdqa	%xmm0, -64(%rbp)
	movups	%xmm1, 40(%r13)
	pextrq	$1, %xmm0, %rbx
	testq	%rbx, %rbx
	je	0x10000b76e
	movq	$-1, %rax
	lock
	xaddq	%rax, 8(%rbx)
	testq	%rax, %rax
	jne	0x10000b76e
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movq	%rbx, %rdi
	callq	0x100029698 ## symbol stub for: __ZNSt3__119__shared_weak_count14__release_weakEv
	movq	40(%r13), %rax
	movq	%rax, 56(%r13)
	movl	$496, %eax
	andl	24(%r13), %eax
	cmpl	$63, %eax
	jg	0x10000b7a2
	testw	%ax, %ax
	je	0x10000b7c2
	movzwl	%ax, %eax
	cmpl	$16, %eax
	jne	0x10000b7d3
	movq	%r13, %rdi
	movq	%r15, %rsi
	movq	-48(%rbp), %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE21__parse_basic_reg_expINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_basic_reg_exp<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	jmp	0x10000b7ff
	movzwl	%ax, %eax
	cmpl	$64, %eax
	je	0x10000b7d8
	cmpl	$128, %eax
	jne	0x10000b7e9
	movq	%r13, %rdi
	movq	%r15, %rsi
	movq	-48(%rbp), %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE12__parse_grepINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_grep<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	jmp	0x10000b7ff
	movq	%r13, %rdi
	movq	%r15, %rsi
	movq	-48(%rbp), %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE16__parse_ecma_expINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_ecma_exp<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	jmp	0x10000b7ff
	cmpl	$32, %eax
	jne	0x10000b80e
	movq	%r13, %rdi
	movq	%r15, %rsi
	movq	-48(%rbp), %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE24__parse_extended_reg_expINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_extended_reg_exp<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	jmp	0x10000b7ff
	cmpl	$256, %eax
	jne	0x10000b80e
	movq	%r13, %rdi
	movq	%r15, %rsi
	movq	-48(%rbp), %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE13__parse_egrepINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_egrep<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$14, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	145561(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	145426(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r15
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %r15
	movq	145701(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	%r12, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	(%r12), %r14
	jmp	0x10000b87b
	movq	%rax, %r15
	movq	%r12, %rdi
	callq	*8(%r14)
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE16__parse_ecma_expINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	movq	%rdx, %r14
	movq	%rdi, %r12
	movq	56(%r12), %rax
	movq	%rax, -80(%rbp)
	movq	%rsi, -48(%rbp)
	movq	%rsi, %rax
	nopw	(%rax,%rax)
	movq	%rax, %rbx
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE17__parse_assertionINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_assertion<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	cmpq	%rbx, %rax
	jne	0x10000b918
	movq	56(%r12), %r15
	movl	28(%r12), %r13d
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE12__parse_atomINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_atom<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rax, %rcx
	cmpq	%rbx, %rcx
	movq	%rbx, %rax
	je	0x10000b918
	incl	%r13d
	movl	28(%r12), %r9d
	incl	%r9d
	movq	%r12, %rdi
	movq	%rcx, %rsi
	movq	%r14, %rdx
	movq	%r15, %rcx
	movl	%r13d, %r8d
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE23__parse_ERE_dupl_symbolINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_16__owns_one_stateIcEEjj ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_ERE_dupl_symbol<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::__owns_one_state<char>*, unsigned int, unsigned int)
	cmpq	%rbx, %rax
	jne	0x10000b8c0
	cmpq	-48(%rbp), %rbx
	jne	0x10000b95a
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%r12), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	145415(%rip), %rdx
	addq	$16, %rdx
	movq	%rdx, (%rax)
	movq	%rax, 8(%rcx)
	movq	56(%r12), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r12)
	cmpq	%r14, %rbx
	je	0x10000bae0
	movq	145374(%rip), %rax
	addq	$16, %rax
	movq	%rax, -56(%rbp)
	movq	145319(%rip), %rax
	addq	$16, %rax
	movq	%rax, -72(%rbp)
	movq	145480(%rip), %rax
	addq	$16, %rax
	movq	%rax, -64(%rbp)
	cmpb	$124, (%rbx)
	jne	0x10000badd
	movq	56(%r12), %rax
	movq	%rax, -88(%rbp)
	incq	%rbx
	movq	%rbx, -48(%rbp)
	movq	%rbx, %rax
	nopl	(%rax)
	movq	%rax, %rbx
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE17__parse_assertionINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_assertion<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	cmpq	%rbx, %rax
	jne	0x10000ba08
	movq	56(%r12), %r13
	movl	28(%r12), %r15d
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE12__parse_atomINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_atom<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rax, %rcx
	cmpq	%rbx, %rcx
	movq	%rbx, %rax
	je	0x10000ba08
	incl	%r15d
	movl	28(%r12), %r9d
	incl	%r9d
	movq	%r12, %rdi
	movq	%rcx, %rsi
	movq	%r14, %rdx
	movq	%r13, %rcx
	movl	%r15d, %r8d
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE23__parse_ERE_dupl_symbolINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_16__owns_one_stateIcEEjj ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_ERE_dupl_symbol<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::__owns_one_state<char>*, unsigned int, unsigned int)
	cmpq	%rbx, %rax
	jne	0x10000b9b0
	cmpq	%rbx, -48(%rbp)
	jne	0x10000ba43
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%r12), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	-56(%rbp), %rdx
	movq	%rdx, (%rax)
	movq	%rax, 8(%rcx)
	movq	56(%r12), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r12)
	movl	$24, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	-80(%rbp), %rsi
	movq	8(%rsi), %rcx
	movq	-88(%rbp), %r15
	movq	8(%r15), %rdx
	movq	%rcx, 8(%rax)
	movq	%rdx, 16(%rax)
	movq	-72(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	%rax, 8(%rsi)
	movq	$0, 8(%r15)
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%r12), %rcx
	movq	8(%rcx), %rcx
	movq	%rcx, 8(%rax)
	movq	-56(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	%rax, 8(%r15)
	movq	56(%r12), %rax
	movq	$0, 8(%rax)
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	8(%r15), %rcx
	movq	%rcx, 8(%rax)
	movq	-64(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	56(%r12), %rcx
	movq	%rax, 8(%rcx)
	movq	8(%r15), %rax
	movq	%rax, 56(%r12)
	cmpq	%r14, %rbx
	jne	0x10000b990
	jmp	0x10000bae0
	movq	%rbx, %r14
	movq	%r14, %rax
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE21__parse_basic_reg_expINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rdx, %r14
	movq	%rsi, %r12
	movq	%rdi, %r15
	cmpq	%r14, %r12
	je	0x10000bbb7
	cmpb	$94, (%r12)
	jne	0x10000bb5e
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%r15), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	144844(%rip), %rdx
	addq	$16, %rdx
	movq	%rdx, (%rax)
	movq	%rax, 8(%rcx)
	movq	56(%r15), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r15)
	incq	%r12
	cmpq	%r14, %r12
	je	0x10000bc0d
	nopw	(%rax,%rax)
	movq	56(%r15), %r13
	movl	28(%r15), %ebx
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE18__parse_nondupl_REINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_nondupl_RE<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	cmpq	%r12, %rax
	je	0x10000bbbc
	incl	%ebx
	movl	28(%r15), %r9d
	incl	%r9d
	movq	%r15, %rdi
	movq	%rax, %rsi
	movq	%r14, %rdx
	movq	%r13, %rcx
	movl	%ebx, %r8d
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE22__parse_RE_dupl_symbolINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_16__owns_one_stateIcEEjj ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_RE_dupl_symbol<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::__owns_one_state<char>*, unsigned int, unsigned int)
	cmpq	%r12, %rax
	je	0x10000bbbc
	cmpq	%r14, %rax
	movq	%rax, %r12
	jne	0x10000bb70
	jmp	0x10000bc0d
	movq	%r12, %r14
	jmp	0x10000bc0d
	cmpq	%r14, %r12
	je	0x10000bc0d
	leaq	1(%r12), %rax
	cmpq	%r14, %rax
	jne	0x10000bc08
	cmpb	$36, (%r12)
	jne	0x10000bc08
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%r15), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	144681(%rip), %rdx
	addq	$16, %rdx
	movq	%rdx, (%rax)
	movq	%rax, 8(%rcx)
	movq	56(%r15), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r15)
	jmp	0x10000bc0d
	cmpq	%r14, %r12
	jne	0x10000bc1f
	movq	%r14, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$15, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	144520(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	144385(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE24__parse_extended_reg_expINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	movq	%rdx, %r14
	movq	%rsi, %r12
	movq	%rdi, %r15
	movq	56(%r15), %rax
	movq	%rax, -72(%rbp)
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE18__parse_ERE_branchINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_ERE_branch<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rax, %rbx
	cmpq	%r12, %rbx
	je	0x10000bddf
	cmpq	%r14, %rbx
	je	0x10000bda2
	movq	144493(%rip), %rax
	addq	$16, %rax
	movq	%rax, -64(%rbp)
	movq	144518(%rip), %rax
	addq	$16, %rax
	movq	%rax, -56(%rbp)
	movq	144639(%rip), %rax
	addq	$16, %rax
	movq	%rax, -48(%rbp)
	nopl	(%rax)
	cmpb	$124, (%rbx)
	jne	0x10000bd9f
	movq	56(%r15), %r13
	incq	%rbx
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE18__parse_ERE_branchINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_ERE_branch<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rax, %r12
	movl	$24, %edi
	cmpq	%rbx, %r12
	je	0x10000bdb4
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	-72(%rbp), %rsi
	movq	8(%rsi), %rcx
	movq	8(%r13), %rdx
	movq	%rcx, 8(%rax)
	movq	%rdx, 16(%rax)
	movq	-64(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	%rax, 8(%rsi)
	movq	$0, 8(%r13)
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%r15), %rcx
	movq	8(%rcx), %rcx
	movq	%rcx, 8(%rax)
	movq	-56(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	%rax, 8(%r13)
	movq	56(%r15), %rax
	movq	$0, 8(%rax)
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	8(%r13), %rcx
	movq	%rcx, 8(%rax)
	movq	-48(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	56(%r15), %rcx
	movq	%rax, 8(%rcx)
	movq	8(%r13), %rax
	movq	%rax, 56(%r15)
	cmpq	%r14, %r12
	movq	%r12, %rbx
	jne	0x10000bce0
	jmp	0x10000bda2
	movq	%rbx, %r14
	movq	%r14, %rax
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$15, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	144120(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	143985(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$15, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000bdc9
	jmp	0x10000bdfd
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE12__parse_grepINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rdx, %r15
	movq	%rsi, %r12
	movq	%rdi, %r14
	movq	56(%r14), %rax
	movq	%rax, -48(%rbp)
	movq	%r12, %rbx
	cmpq	%r15, %r12
	je	0x10000be68
	nopw	(%rax,%rax)
	cmpb	$10, (%rbx)
	je	0x10000be50
	incq	%rbx
	cmpq	%rbx, %r15
	jne	0x10000be40
	movq	%r15, %rbx
	cmpq	%r12, %rbx
	je	0x10000be68
	movq	%r14, %rdi
	movq	%r12, %rsi
	movq	%rbx, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE21__parse_basic_reg_expINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_basic_reg_exp<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rbx, %r12
	jmp	0x10000be9c
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	-48(%rbp), %rdx
	movq	8(%rdx), %rcx
	movq	%rcx, 8(%rax)
	movq	144067(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, (%rax)
	movq	%rax, 8(%rdx)
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r14)
	cmpq	%r15, %r12
	leaq	1(%r12), %rsi
	cmoveq	%rbx, %rsi
	cmpq	%r15, %rsi
	je	0x10000bfdc
	movq	144016(%rip), %r12
	addq	$16, %r12
	movq	143965(%rip), %rax
	addq	$16, %rax
	movq	%rax, -64(%rbp)
	movq	144126(%rip), %rax
	addq	$16, %rax
	movq	%rax, -56(%rbp)
	nopw	(%rax,%rax)
	movq	%rsi, %rbx
	nopw	%cs:(%rax,%rax)
	cmpb	$10, (%rbx)
	je	0x10000bf00
	incq	%rbx
	cmpq	%rbx, %r15
	jne	0x10000bef0
	movq	%r15, %rbx
	movq	56(%r14), %r13
	cmpq	%rsi, %rbx
	je	0x10000bf20
	movq	%r14, %rdi
	movq	%rbx, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE21__parse_basic_reg_expINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_basic_reg_exp<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	jmp	0x10000bf45
	nopw	%cs:(%rax,%rax)
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	8(%r13), %rcx
	movq	%rcx, 8(%rax)
	movq	%r12, (%rax)
	movq	%rax, 8(%r13)
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r14)
	movl	$24, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	-48(%rbp), %rsi
	movq	8(%rsi), %rcx
	movq	8(%r13), %rdx
	movq	%rcx, 8(%rax)
	movq	%rdx, 16(%rax)
	movq	-64(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	%rax, 8(%rsi)
	movq	$0, 8(%r13)
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%r14), %rcx
	movq	8(%rcx), %rcx
	movq	%rcx, 8(%rax)
	movq	%r12, (%rax)
	movq	%rax, 8(%r13)
	movq	56(%r14), %rax
	movq	$0, 8(%rax)
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	8(%r13), %rcx
	movq	%rcx, 8(%rax)
	movq	-56(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	56(%r14), %rcx
	movq	%rax, 8(%rcx)
	movq	8(%r13), %rax
	movq	%rax, 56(%r14)
	leaq	1(%rbx), %rsi
	cmpq	%r15, %rbx
	cmoveq	%rbx, %rsi
	cmpq	%r15, %rsi
	jne	0x10000bee0
	movq	%r15, %rax
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nop
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE13__parse_egrepINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rdx, %r15
	movq	%rsi, %r12
	movq	%rdi, %r14
	movq	56(%r14), %rax
	movq	%rax, -48(%rbp)
	movq	%r12, %rbx
	cmpq	%r15, %r12
	je	0x10000c048
	nopw	(%rax,%rax)
	cmpb	$10, (%rbx)
	je	0x10000c030
	incq	%rbx
	cmpq	%rbx, %r15
	jne	0x10000c020
	movq	%r15, %rbx
	cmpq	%r12, %rbx
	je	0x10000c048
	movq	%r14, %rdi
	movq	%r12, %rsi
	movq	%rbx, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE24__parse_extended_reg_expINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_extended_reg_exp<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rbx, %r12
	jmp	0x10000c07c
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	-48(%rbp), %rdx
	movq	8(%rdx), %rcx
	movq	%rcx, 8(%rax)
	movq	143587(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, (%rax)
	movq	%rax, 8(%rdx)
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r14)
	cmpq	%r15, %r12
	leaq	1(%r12), %rsi
	cmoveq	%rbx, %rsi
	cmpq	%r15, %rsi
	je	0x10000c1bc
	movq	143536(%rip), %r12
	addq	$16, %r12
	movq	143485(%rip), %rax
	addq	$16, %rax
	movq	%rax, -64(%rbp)
	movq	143646(%rip), %rax
	addq	$16, %rax
	movq	%rax, -56(%rbp)
	nopw	(%rax,%rax)
	movq	%rsi, %rbx
	nopw	%cs:(%rax,%rax)
	cmpb	$10, (%rbx)
	je	0x10000c0e0
	incq	%rbx
	cmpq	%rbx, %r15
	jne	0x10000c0d0
	movq	%r15, %rbx
	movq	56(%r14), %r13
	cmpq	%rsi, %rbx
	je	0x10000c100
	movq	%r14, %rdi
	movq	%rbx, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE24__parse_extended_reg_expINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_extended_reg_exp<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	jmp	0x10000c125
	nopw	%cs:(%rax,%rax)
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	8(%r13), %rcx
	movq	%rcx, 8(%rax)
	movq	%r12, (%rax)
	movq	%rax, 8(%r13)
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r14)
	movl	$24, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	-48(%rbp), %rsi
	movq	8(%rsi), %rcx
	movq	8(%r13), %rdx
	movq	%rcx, 8(%rax)
	movq	%rdx, 16(%rax)
	movq	-64(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	%rax, 8(%rsi)
	movq	$0, 8(%r13)
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%r14), %rcx
	movq	8(%rcx), %rcx
	movq	%rcx, 8(%rax)
	movq	%r12, (%rax)
	movq	%rax, 8(%r13)
	movq	56(%r14), %rax
	movq	$0, 8(%rax)
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	8(%r13), %rcx
	movq	%rcx, 8(%rax)
	movq	-56(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	56(%r14), %rcx
	movq	%rax, 8(%rcx)
	movq	8(%r13), %rax
	movq	%rax, 56(%r14)
	leaq	1(%rbx), %rsi
	cmpq	%r15, %rbx
	cmoveq	%rbx, %rsi
	cmpq	%r15, %rsi
	jne	0x10000c0c0
	movq	%r15, %rax
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nop
__ZNSt3__117__repeat_one_loopIcED1Ev:
__ZNSt3__121__empty_non_own_stateIcED1Ev:
__ZN9benchmark17BenchmarkReporter8FinalizeEv:
__ZNSt3__111__end_stateIcED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__121__empty_non_own_stateIcED0Ev:
__ZNSt3__120__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv:
__ZNSt3__111__end_stateIcED0Ev:
__ZNSt3__117__repeat_one_loopIcED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopw	(%rax,%rax)
__ZNKSt3__111__end_stateIcE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$4294966296, (%rsi)
	popq	%rbp
	retq
	nopl	(%rax)
__ZNKSt3__16__nodeIcE12__exec_splitEbRNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNKSt3__16__nodeIcE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__110shared_ptrINS_13__empty_stateIcEEE18__enable_weak_thisEz:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__120__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	0x10002969e ## symbol stub for: __ZNSt3__119__shared_weak_countD2Ev
	nopw	(%rax,%rax)
__ZNSt3__120__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	callq	0x10002969e ## symbol stub for: __ZNSt3__119__shared_weak_countD2Ev
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopl	(%rax)
__ZNSt3__120__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	24(%rdi), %rdi
	testq	%rdi, %rdi
	je	0x10000c274
	movq	(%rdi), %rax
	popq	%rbp
	jmpq	*8(%rax)
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNKSt3__120__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	8(%rsi), %rcx
	addq	$24, %rdi
	xorl	%eax, %eax
	cmpq	142923(%rip), %rcx ## literal pool symbol address: __ZTSNSt3__114default_deleteINS_13__empty_stateIcEEEE
	cmoveq	%rdi, %rax
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZNSt3__110__l_anchorIcED1Ev:
__ZNSt3__113__empty_stateIcED1Ev:
__ZNSt3__111__match_anyIcED1Ev:
__ZNSt3__126__end_marked_subexpressionIcED1Ev:
__ZNSt3__128__begin_marked_subexpressionIcED1Ev:
__ZNSt3__110__back_refIcED1Ev:
__ZNSt3__112__match_charIcED1Ev:
__ZNSt3__123__match_any_but_newlineIcED1Ev:
__ZNSt3__110__r_anchorIcED1Ev:
__ZNSt3__116__owns_one_stateIcED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	143061(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rdi)
	movq	8(%rdi), %rdi
	testq	%rdi, %rdi
	je	0x10000c2c2
	movq	(%rdi), %rax
	popq	%rbp
	jmpq	*8(%rax)
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__112__match_charIcED0Ev:
__ZNSt3__123__match_any_but_newlineIcED0Ev:
__ZNSt3__110__back_refIcED0Ev:
__ZNSt3__128__begin_marked_subexpressionIcED0Ev:
__ZNSt3__126__end_marked_subexpressionIcED0Ev:
__ZNSt3__111__match_anyIcED0Ev:
__ZNSt3__113__empty_stateIcED0Ev:
__ZNSt3__110__r_anchorIcED0Ev:
__ZNSt3__116__owns_one_stateIcED0Ev:
__ZNSt3__110__l_anchorIcED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	143008(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000c2f6
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopw	%cs:(%rax,%rax)
__ZNKSt3__121__empty_non_own_stateIcE6__execERNS_7__stateIcEE:
__ZNKSt3__113__empty_stateIcE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$4294966302, (%rsi)
	movq	8(%rdi), %rax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE17__parse_assertionINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$72, %rsp
	movq	%rdx, %r15
	movq	%rsi, %rbx
	movq	%rdi, %r14
	cmpq	%r15, %rbx
	je	0x10000c57d
	movsbl	(%rbx), %eax
	cmpl	$91, %eax
	jg	0x10000c51d
	cmpl	$36, %eax
	je	0x10000c546
	cmpl	$40, %eax
	jne	0x10000c57d
	leaq	1(%rbx), %rax
	cmpq	%r15, %rax
	je	0x10000c57d
	cmpb	$63, 1(%rbx)
	jne	0x10000c57d
	leaq	2(%rbx), %rax
	cmpq	%r15, %rax
	je	0x10000c57d
	movsbl	2(%rbx), %eax
	cmpl	$33, %eax
	je	0x10000c652
	cmpl	$61, %eax
	jne	0x10000c57d
	leaq	-112(%rbp), %r12
	movq	%r12, %rdi
	callq	0x1000296e6 ## symbol stub for: __ZNSt3__16localeC1Ev
	movq	142522(%rip), %rsi ## literal pool symbol address: __ZNSt3__15ctypeIcE2idE
	movq	%r12, %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	%rax, -104(%rbp)
	movq	142527(%rip), %rsi ## literal pool symbol address: __ZNSt3__17collateIcE2idE
	leaq	-112(%rbp), %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	%rax, -96(%rbp)
	movq	$0, -56(%rbp)
	movq	$0, -64(%rbp)
	movq	$0, -72(%rbp)
	movq	$0, -80(%rbp)
	movq	$0, -88(%rbp)
	movl	24(%r14), %eax
	movl	%eax, -88(%rbp)
	addq	$3, %rbx
	leaq	-112(%rbp), %rdi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE7__parseINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rax, %rbx
	movl	-84(%rbp), %eax
	movl	%eax, -48(%rbp)
	movl	28(%r14), %eax
	movl	%eax, -44(%rbp)
	movl	$88, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r12
	leaq	-104(%rbp), %r13
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 8(%r12)
	movq	142555(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%r12)
	movq	%r12, %rdi
	addq	$16, %rdi
	leaq	-112(%rbp), %rsi
	callq	0x1000296e0 ## symbol stub for: __ZNSt3__16localeC1ERKS0_
	movq	(%r13), %rax
	movq	8(%r13), %rcx
	movq	%rcx, 32(%r12)
	movq	%rax, 24(%r12)
	movq	16(%r13), %rax
	movq	24(%r13), %rcx
	movq	%rcx, 48(%r12)
	movq	%rax, 40(%r12)
	movq	-72(%rbp), %rax
	movq	%rax, 56(%r12)
	movq	-64(%rbp), %rax
	movq	%rax, 64(%r12)
	testq	%rax, %rax
	je	0x10000c4ad
	lock
	incq	8(%rax)
	movq	-56(%rbp), %rax
	movq	%rax, 72(%r12)
	movl	-44(%rbp), %eax
	movl	%eax, 80(%r12)
	movb	$0, 84(%r12)
	movq	56(%r14), %rax
	movq	%r12, 8(%rax)
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r14)
	movl	-48(%rbp), %eax
	addl	%eax, 28(%r14)
	cmpq	%r15, %rbx
	je	0x10000c4ed
	cmpb	$41, (%rbx)
	je	0x10000c790
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	movl	$6, %esi
	movq	%r14, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	142266(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	142131(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%r14, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	cmpl	$92, %eax
	je	0x10000c58f
	cmpl	$94, %eax
	jne	0x10000c57d
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%r14), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	142284(%rip), %rdx
	jmp	0x10000c563
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%r14), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	142261(%rip), %rdx
	addq	$16, %rdx
	movq	%rdx, (%rax)
	movq	%rax, 8(%rcx)
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r14)
	incq	%rbx
	movq	%rbx, %rax
	addq	$72, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	leaq	1(%rbx), %rax
	cmpq	%r15, %rax
	je	0x10000c57d
	movb	1(%rbx), %al
	cmpb	$66, %al
	je	0x10000c5ed
	cmpb	$98, %al
	jne	0x10000c57d
	movl	$48, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r15
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 8(%r15)
	movq	142245(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%r15)
	leaq	16(%r15), %rdi
	movq	%r14, %rsi
	callq	0x1000296e0 ## symbol stub for: __ZNSt3__16localeC1ERKS0_
	movq	8(%r14), %rax
	movq	16(%r14), %rcx
	movq	%rcx, 32(%r15)
	movq	%rax, 24(%r15)
	movb	$0, 40(%r15)
	jmp	0x10000c635
	movl	$48, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r15
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 8(%r15)
	movq	142171(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%r15)
	leaq	16(%r15), %rdi
	movq	%r14, %rsi
	callq	0x1000296e0 ## symbol stub for: __ZNSt3__16localeC1ERKS0_
	movq	8(%r14), %rax
	movq	16(%r14), %rcx
	movq	%rcx, 32(%r15)
	movq	%rax, 24(%r15)
	movb	$1, 40(%r15)
	movq	56(%r14), %rax
	movq	%r15, 8(%rax)
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r14)
	addq	$2, %rbx
	jmp	0x10000c57d
	leaq	-112(%rbp), %r12
	movq	%r12, %rdi
	callq	0x1000296e6 ## symbol stub for: __ZNSt3__16localeC1Ev
	movq	141843(%rip), %rsi ## literal pool symbol address: __ZNSt3__15ctypeIcE2idE
	movq	%r12, %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	%rax, -104(%rbp)
	movq	141848(%rip), %rsi ## literal pool symbol address: __ZNSt3__17collateIcE2idE
	leaq	-112(%rbp), %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	%rax, -96(%rbp)
	movq	$0, -56(%rbp)
	movq	$0, -64(%rbp)
	movq	$0, -72(%rbp)
	movq	$0, -80(%rbp)
	movq	$0, -88(%rbp)
	movl	24(%r14), %eax
	movl	%eax, -88(%rbp)
	addq	$3, %rbx
	leaq	-112(%rbp), %rdi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE7__parseINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rax, %rbx
	movl	-84(%rbp), %eax
	movl	%eax, -48(%rbp)
	movl	28(%r14), %eax
	movl	%eax, -44(%rbp)
	movl	$88, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r12
	leaq	-104(%rbp), %r13
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 8(%r12)
	movq	141876(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%r12)
	movq	%r12, %rdi
	addq	$16, %rdi
	leaq	-112(%rbp), %rsi
	callq	0x1000296e0 ## symbol stub for: __ZNSt3__16localeC1ERKS0_
	movq	(%r13), %rax
	movq	8(%r13), %rcx
	movq	%rcx, 32(%r12)
	movq	%rax, 24(%r12)
	movq	16(%r13), %rax
	movq	24(%r13), %rcx
	movq	%rcx, 48(%r12)
	movq	%rax, 40(%r12)
	movq	-72(%rbp), %rax
	movq	%rax, 56(%r12)
	movq	-64(%rbp), %rax
	movq	%rax, 64(%r12)
	testq	%rax, %rax
	je	0x10000c754
	lock
	incq	8(%rax)
	movq	-56(%rbp), %rax
	movq	%rax, 72(%r12)
	movl	-44(%rbp), %eax
	movl	%eax, 80(%r12)
	movb	$1, 84(%r12)
	movq	56(%r14), %rax
	movq	%r12, 8(%rax)
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r14)
	movl	-48(%rbp), %eax
	addl	%eax, 28(%r14)
	cmpq	%r15, %rbx
	je	0x10000c7cd
	cmpb	$41, (%rbx)
	jne	0x10000c7cd
	incq	%rbx
	movq	-64(%rbp), %r14
	testq	%r14, %r14
	je	0x10000c7bf
	movq	$-1, %rax
	lock
	xaddq	%rax, 8(%r14)
	testq	%rax, %rax
	jne	0x10000c7bf
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
	movq	%r14, %rdi
	callq	0x100029698 ## symbol stub for: __ZNSt3__119__shared_weak_count14__release_weakEv
	leaq	-112(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	jmp	0x10000c57d
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	movl	$6, %esi
	movq	%r14, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	141530(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	141395(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%r14, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	jmp	0x10000c7ff
	movq	%rax, %r15
	movq	%r14, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	-64(%rbp), %rbx
	testq	%rbx, %rbx
	jne	0x10000c827
	jmp	0x10000c851
	jmp	0x10000c81b
	jmp	0x10000c81b
	jmp	0x10000c81b
	movq	%rax, %r15
	movq	-64(%rbp), %rbx
	testq	%rbx, %rbx
	je	0x10000c851
	movq	$-1, %rax
	lock
	xaddq	%rax, 8(%rbx)
	testq	%rax, %rax
	jne	0x10000c851
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movq	%rbx, %rdi
	callq	0x100029698 ## symbol stub for: __ZNSt3__119__shared_weak_count14__release_weakEv
	jmp	0x10000c851
	jmp	0x10000c84e
	movq	%rax, %r15
	leaq	-112(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE12__parse_atomINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rdx, %r15
	movq	%rsi, %rbx
	movq	%rdi, %r14
	cmpq	%r15, %rbx
	je	0x10000ca76
	movsbl	(%rbx), %ecx
	leal	-40(%rcx), %eax
	cmpl	$52, %eax
	ja	0x10000c9e0
	leaq	614(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
	leaq	1(%rbx), %r12
	cmpq	%r15, %r12
	je	0x10000cad4
	leaq	2(%rbx), %rax
	cmpq	%r15, %rax
	je	0x10000c994
	cmpb	$63, (%r12)
	jne	0x10000c994
	cmpb	$58, (%rax)
	jne	0x10000c994
	incl	36(%r14)
	addq	$3, %rbx
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE16__parse_ecma_expINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_ecma_exp<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rax, %rbx
	cmpq	%r15, %rbx
	je	0x10000c904
	cmpb	$41, (%rbx)
	je	0x10000ca6f
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$6, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000caa2
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE26__parse_bracket_expressionINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_bracket_expression<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%r14), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	141436(%rip), %rdx
	addq	$16, %rdx
	movq	%rdx, (%rax)
	movq	%rax, 8(%rcx)
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r14)
	jmp	0x10000ca73
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE19__parse_atom_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_atom_escape<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	testb	$2, 24(%r14)
	jne	0x10000ca05
	movl	$24, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movl	28(%r14), %r13d
	incl	%r13d
	movl	%r13d, 28(%r14)
	movq	56(%r14), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	141349(%rip), %rdx
	addq	$16, %rdx
	movq	%rdx, (%rax)
	movl	%r13d, 16(%rax)
	movq	%rax, 8(%rcx)
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r14)
	jmp	0x10000ca09
	cmpl	$123, %ecx
	je	0x10000ca88
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE25__parse_pattern_characterINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_pattern_character<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movl	28(%r14), %r13d
	incl	36(%r14)
	movq	%r14, %rdi
	movq	%r12, %rsi
	movq	%r15, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE16__parse_ecma_expINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_ecma_exp<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rax, %rbx
	cmpq	%r15, %rbx
	je	0x10000cab8
	cmpb	$41, (%rbx)
	jne	0x10000cab8
	testb	$2, 24(%r14)
	jne	0x10000ca6f
	movl	$24, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%r14), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	141196(%rip), %rdx
	addq	$16, %rdx
	movq	%rdx, (%rax)
	movl	%r13d, 16(%rax)
	movq	%rax, 8(%rcx)
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r14)
	decl	36(%r14)
	incq	%rbx
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$11, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	140831(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	140696(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$6, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000caa2
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$6, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000caa2
	jmp	0x10000caf6
	jmp	0x10000caf6
	jmp	0x10000caf6
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax)
	movabsl	%eax, 9007199249875599357
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jl	0x10000cb19
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	pushq	(%rbx)
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jl	0x10000cb69
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdd #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	callq	*(%rdi)
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	ljmpl	*-1(%rsi,%rdi,8)
	callq	*72(%rbp)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE23__parse_ERE_dupl_symbolINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_16__owns_one_stateIcEEjj:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$16, %rsp
	movq	%rsi, %rbx
	cmpq	%rdx, %rbx
	je	0x10000cf7f
	movl	24(%rdi), %r10d
	movsbl	(%rbx), %eax
	cmpl	$62, %eax
	jg	0x10000cc5f
	cmpl	$42, %eax
	je	0x10000cd5b
	cmpl	$43, %eax
	jne	0x10000cf7f
	leaq	1(%rbx), %r14
	cmpq	%rdx, %r14
	je	0x10000cdc9
	andl	$496, %r10d
	jne	0x10000cdc9
	cmpb	$63, (%r14)
	jne	0x10000cdc9
	addq	$2, %rbx
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$0, (%rsp)
	movl	$1, %esi
	movq	$-1, %rdx
	jmp	0x10000cdbf
	cmpl	$63, %eax
	je	0x10000cd8f
	cmpl	$123, %eax
	jne	0x10000cf7f
	leaq	1(%rbx), %r11
	cmpq	%rdx, %r11
	je	0x10000cf8f
	movzbl	(%r11), %r12d
	movl	%r12d, %eax
	andl	$248, %eax
	cmpl	$48, %eax
	je	0x10000cca0
	movl	%r12d, %eax
	andl	$254, %eax
	cmpl	$56, %eax
	jne	0x10000cf8f
	addl	$-48, %r12d
	cmpl	$-1, %r12d
	je	0x10000cf8f
	addq	$2, %rbx
	cmpq	%rdx, %rbx
	je	0x10000ccf5
	nopw	(%rax,%rax)
	movzbl	(%rbx), %eax
	movl	%eax, %esi
	andl	$248, %esi
	cmpl	$48, %esi
	je	0x10000ccdd
	movl	%eax, %esi
	andl	$254, %esi
	cmpl	$56, %esi
	jne	0x10000ccf8
	addl	$-48, %eax
	cmpl	$-1, %eax
	je	0x10000ccf8
	leal	(%r12,%r12,4), %esi
	leal	(%rax,%rsi,2), %r12d
	incq	%rbx
	cmpq	%rbx, %rdx
	jne	0x10000ccc0
	movq	%rdx, %rbx
	cmpq	%r11, %rbx
	je	0x10000cf8f
	cmpq	%rdx, %rbx
	je	0x10000cfbf
	movsbl	(%rbx), %eax
	cmpl	$44, %eax
	je	0x10000ce11
	cmpl	$125, %eax
	jne	0x10000cfdb
	leaq	1(%rbx), %r14
	testw	$496, %r10w
	jne	0x10000ce6b
	cmpq	%rdx, %r14
	je	0x10000ce6b
	cmpb	$63, (%r14)
	jne	0x10000ce6b
	addq	$2, %rbx
	movslq	%r12d, %rsi
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$0, (%rsp)
	movq	%rsi, %rdx
	jmp	0x10000cdbf
	leaq	1(%rbx), %r14
	cmpq	%rdx, %r14
	je	0x10000cddd
	andl	$496, %r10d
	jne	0x10000cddd
	cmpb	$63, (%r14)
	jne	0x10000cddd
	addq	$2, %rbx
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$0, (%rsp)
	xorl	%esi, %esi
	movq	$-1, %rdx
	jmp	0x10000cdbf
	leaq	1(%rbx), %r14
	cmpq	%rdx, %r14
	je	0x10000cdf8
	andl	$496, %r10d
	jne	0x10000cdf8
	cmpb	$63, (%r14)
	jne	0x10000cdf8
	addq	$2, %rbx
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$0, (%rsp)
	xorl	%esi, %esi
	movl	$1, %edx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_loopEmmPNS_16__owns_one_stateIcEEmmb ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_loop(unsigned long, unsigned long, std::__1::__owns_one_state<char>*, unsigned long, unsigned long, bool)
	jmp	0x10000cf7f
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$1, (%rsp)
	movl	$1, %esi
	jmp	0x10000cdec
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$1, (%rsp)
	xorl	%esi, %esi
	movq	$-1, %rdx
	jmp	0x10000cf77
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$1, (%rsp)
	xorl	%esi, %esi
	movl	$1, %edx
	jmp	0x10000cf77
	leaq	1(%rbx), %r11
	cmpq	%rdx, %r11
	je	0x10000d013
	movzbl	(%r11), %r15d
	cmpl	$125, %r15d
	jne	0x10000ce83
	leaq	2(%rbx), %r14
	testw	$496, %r10w
	jne	0x10000cf4f
	cmpq	%rdx, %r14
	je	0x10000cf4f
	cmpb	$63, (%r14)
	jne	0x10000cf4f
	addq	$3, %rbx
	movslq	%r12d, %rsi
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$0, (%rsp)
	movq	$-1, %rdx
	jmp	0x10000cdbf
	movslq	%r12d, %rsi
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$1, (%rsp)
	movq	%rsi, %rdx
	jmp	0x10000cf77
	movl	%r15d, %eax
	andl	$248, %eax
	cmpl	$48, %eax
	je	0x10000cea1
	movl	%r15d, %eax
	andl	$254, %eax
	cmpl	$56, %eax
	jne	0x10000cff7
	addl	$-48, %r15d
	cmpl	$-1, %r15d
	je	0x10000cff7
	addq	$2, %rbx
	cmpq	%rdx, %rbx
	je	0x10000cef5
	nopl	(%rax,%rax)
	movzbl	(%rbx), %eax
	movl	%eax, %esi
	andl	$248, %esi
	cmpl	$48, %esi
	je	0x10000cedd
	movl	%eax, %esi
	andl	$254, %esi
	cmpl	$56, %esi
	jne	0x10000cef8
	addl	$-48, %eax
	cmpl	$-1, %eax
	je	0x10000cef8
	leal	(%r15,%r15,4), %esi
	leal	(%rax,%rsi,2), %r15d
	incq	%rbx
	cmpq	%rbx, %rdx
	jne	0x10000cec0
	movq	%rdx, %rbx
	cmpq	%r11, %rbx
	je	0x10000cff7
	cmpq	%rdx, %rbx
	je	0x10000d032
	cmpb	$125, (%rbx)
	jne	0x10000d032
	cmpl	%r12d, %r15d
	jl	0x10000d051
	leaq	1(%rbx), %r14
	testw	$496, %r10w
	jne	0x10000cf64
	cmpq	%rdx, %r14
	je	0x10000cf64
	cmpb	$63, (%r14)
	jne	0x10000cf64
	addq	$2, %rbx
	movslq	%r12d, %rsi
	movslq	%r15d, %rdx
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$0, (%rsp)
	jmp	0x10000cdbf
	movslq	%r12d, %rsi
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$1, (%rsp)
	jmp	0x10000cdec
	movslq	%r12d, %rsi
	movslq	%r15d, %rdx
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$1, (%rsp)
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_loopEmmPNS_16__owns_one_stateIcEEmmb ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_loop(unsigned long, unsigned long, std::__1::__owns_one_state<char>*, unsigned long, unsigned long, bool)
	movq	%r14, %rbx
	movq	%rbx, %rax
	addq	$16, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$8, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	139544(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	139409(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$7, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000cfa9
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$8, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000cfa9
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$7, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000cfa9
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$8, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000cfa9
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$7, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000cfa9
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$8, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000cfa9
	jmp	0x10000d07c
	jmp	0x10000d07c
	jmp	0x10000d07c
	jmp	0x10000d07c
	jmp	0x10000d07c
	jmp	0x10000d07c
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nop
__ZNKSt3__110__l_anchorIcE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	cmpb	$0, 92(%rsi)
	je	0x10000d0ba
	movq	16(%rsi), %rax
	cmpq	8(%rsi), %rax
	jne	0x10000d0ba
	testb	$1, 88(%rsi)
	jne	0x10000d0ba
	movl	$4294966302, (%rsi)
	movq	8(%rdi), %rax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	movl	$4294966303, (%rsi)
	xorl	%eax, %eax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZNKSt3__110__r_anchorIcE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	16(%rsi), %rax
	cmpq	24(%rsi), %rax
	jne	0x10000d0f4
	testb	$2, 88(%rsi)
	jne	0x10000d0f4
	movl	$4294966302, (%rsi)
	movq	8(%rdi), %rax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	movl	$4294966303, (%rsi)
	xorl	%eax, %eax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__115__word_boundaryIcNS_12regex_traitsIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	139336(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	leaq	16(%rbx), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	139337(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000d153
	movq	(%rdi), %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmpq	*8(%rax)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nopw	(%rax,%rax)
__ZNSt3__115__word_boundaryIcNS_12regex_traitsIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	139256(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	leaq	16(%rbx), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	139257(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000d19d
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopl	(%rax,%rax)
__ZNKSt3__115__word_boundaryIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	8(%rsi), %rcx
	movq	24(%rsi), %rax
	xorl	%r9d, %r9d
	cmpq	%rax, %rcx
	je	0x10000d2aa
	movq	16(%rsi), %rdx
	cmpq	%rax, %rdx
	je	0x10000d23d
	cmpq	%rcx, %rdx
	je	0x10000d275
	movsbq	-1(%rdx), %rcx
	cmpq	$95, %rcx
	movsbq	(%rdx), %rdx
	movl	$1, %r8d
	movl	$1, %r9d
	je	0x10000d211
	testb	%cl, %cl
	js	0x10000d20e
	movq	24(%rdi), %rax
	movq	16(%rax), %rax
	testb	$5, 1(%rax,%rcx,4)
	movl	$1, %r9d
	jne	0x10000d211
	xorl	%r9d, %r9d
	cmpb	$95, %dl
	je	0x10000d22c
	testb	%dl, %dl
	js	0x10000d229
	movq	24(%rdi), %rax
	movq	16(%rax), %rax
	testb	$5, 1(%rax,%rdx,4)
	jne	0x10000d22c
	xorl	%r8d, %r8d
	xorl	%r8d, %r9d
	movzbl	40(%rdi), %eax
	cmpl	%eax, %r9d
	je	0x10000d2b3
	jmp	0x10000d2c1
	testb	$8, 88(%rsi)
	jne	0x10000d2aa
	movsbq	-1(%rax), %rax
	cmpq	$95, %rax
	movl	$1, %r9d
	je	0x10000d2aa
	testb	%al, %al
	js	0x10000d267
	movq	24(%rdi), %rcx
	movq	16(%rcx), %rcx
	testb	$5, 1(%rcx,%rax,4)
	jne	0x10000d2aa
	xorl	%r9d, %r9d
	movzbl	40(%rdi), %eax
	cmpl	%eax, %r9d
	je	0x10000d2b3
	jmp	0x10000d2c1
	movl	88(%rsi), %eax
	testb	%al, %al
	js	0x10000d1da
	testb	$4, %al
	jne	0x10000d2aa
	movsbq	(%rcx), %rax
	cmpq	$95, %rax
	movl	$1, %r9d
	je	0x10000d2aa
	testb	%al, %al
	js	0x10000d2a7
	movq	24(%rdi), %rcx
	movq	16(%rcx), %rcx
	testb	$5, 1(%rcx,%rax,4)
	jne	0x10000d2aa
	xorl	%r9d, %r9d
	movzbl	40(%rdi), %eax
	cmpl	%eax, %r9d
	jne	0x10000d2c1
	movl	$4294966303, (%rsi)
	xorl	%eax, %eax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	movl	$4294966302, (%rsi)
	movq	8(%rdi), %rax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__111__lookaheadIcNS_12regex_traitsIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rdi, %rbx
	movq	138815(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	64(%rbx), %r14
	testq	%r14, %r14
	je	0x10000d324
	movq	$-1, %rax
	lock
	xaddq	%rax, 8(%r14)
	testq	%rax, %rax
	jne	0x10000d324
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
	movq	%r14, %rdi
	callq	0x100029698 ## symbol stub for: __ZNSt3__119__shared_weak_count14__release_weakEv
	leaq	16(%rbx), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	138828(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000d34e
	movq	(%rdi), %rax
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmpq	*8(%rax)
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__111__lookaheadIcNS_12regex_traitsIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rdi, %rbx
	movq	138687(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	64(%rbx), %r14
	testq	%r14, %r14
	je	0x10000d3a4
	movq	$-1, %rax
	lock
	xaddq	%rax, 8(%r14)
	testq	%rax, %rax
	jne	0x10000d3a4
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
	movq	%r14, %rdi
	callq	0x100029698 ## symbol stub for: __ZNSt3__119__shared_weak_count14__release_weakEv
	leaq	16(%rbx), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	138700(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000d3ca
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	%rbx, %rdi
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopw	%cs:(%rax,%rax)
__ZNKSt3__111__lookaheadIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	subq	$120, %rsp
	movq	%rsi, %r15
	movq	%rdi, %r14
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -96(%rbp)
	movb	$0, -80(%rbp)
	movb	$0, -56(%rbp)
	movq	$0, -64(%rbp)
	movq	$0, -72(%rbp)
	movb	$0, -48(%rbp)
	movq	$0, -40(%rbp)
	movaps	%xmm0, -144(%rbp)
	movq	$0, -128(%rbp)
	movl	44(%r14), %esi
	incl	%esi
	movq	16(%r15), %rbx
	movq	24(%r15), %rax
	leaq	-120(%rbp), %rdx
	movq	%rax, -120(%rbp)
	movq	%rax, -112(%rbp)
	movb	$0, -104(%rbp)
	leaq	-144(%rbp), %rdi
	callq	__ZNSt3__16vectorINS_9sub_matchIPKcEENS_9allocatorIS4_EEE6assignEmRKS4_ ## std::__1::vector<std::__1::sub_match<char const*>, std::__1::allocator<std::__1::sub_match<char const*> > >::assign(unsigned long, std::__1::sub_match<char const*> const&)
	leaq	16(%r14), %rdi
	movq	%rbx, -96(%rbp)
	movq	%rbx, -88(%rbp)
	movb	$0, -80(%rbp)
	movups	-120(%rbp), %xmm0
	movups	%xmm0, -72(%rbp)
	movb	-104(%rbp), %al
	movb	%al, -56(%rbp)
	movq	%rbx, -40(%rbp)
	movb	$1, -48(%rbp)
	movq	16(%r15), %rsi
	movq	24(%r15), %rdx
	movl	$4031, %r8d
	andl	88(%r15), %r8d
	orl	$64, %r8d
	cmpb	$0, 92(%r15)
	je	0x10000d4a3
	cmpq	8(%r15), %rsi
	sete	%al
	jmp	0x10000d4a5
	xorl	%eax, %eax
	movzbl	%al, %r9d
	leaq	-144(%rbp), %rcx
	callq	__ZNKSt3__111basic_regexIcNS_12regex_traitsIcEEE21__match_at_start_ecmaINS_9allocatorINS_9sub_matchIPKcEEEEEEbS8_S8_RNS_13match_resultsIS8_T_EENS_15regex_constants15match_flag_typeEb ## bool std::__1::basic_regex<char, std::__1::regex_traits<char> >::__match_at_start_ecma<std::__1::allocator<std::__1::sub_match<char const*> > >(char const*, char const*, std::__1::match_results<char const*, std::__1::allocator<std::__1::sub_match<char const*> > >&, std::__1::regex_constants::match_flag_type, bool) const
	movzbl	%al, %eax
	movzbl	84(%r14), %ecx
	cmpl	%ecx, %eax
	jne	0x10000d4dc
	movl	$4294966303, (%r15)
	movq	$0, 80(%r15)
	movq	-144(%rbp), %rdi
	jmp	0x10000d559
	movl	$4294966302, (%r15)
	movq	8(%r14), %rax
	movq	%rax, 80(%r15)
	movq	-144(%rbp), %rdi
	movq	-136(%rbp), %rax
	subq	%rdi, %rax
	sarq	$3, %rax
	movabsq	$-6148914691236517205, %rcx
	imulq	%rax, %rcx
	cmpq	$2, %rcx
	jb	0x10000d559
	movl	80(%r14), %r8d
	movq	32(%r15), %rdx
	movl	$2, %esi
	movl	$1, %ebx
	nopw	%cs:(%rax,%rax)
	leaq	(%rbx,%rbx,2), %rbx
	leal	-2(%r8,%rsi), %eax
	leaq	(%rax,%rax,2), %rax
	movups	(%rdi,%rbx,8), %xmm0
	movups	%xmm0, (%rdx,%rax,8)
	movzbl	16(%rdi,%rbx,8), %ebx
	movb	%bl, 16(%rdx,%rax,8)
	movl	%esi, %ebx
	incl	%esi
	cmpq	%rbx, %rcx
	ja	0x10000d530
	jmp	0x10000d55e
	testq	%rdi, %rdi
	je	0x10000d56a
	movq	%rdi, -136(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$120, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	jmp	0x10000d577
	movq	%rax, %rbx
	movq	-144(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000d592
	movq	%rdi, -136(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	(%rax,%rax)
__ZNKSt3__111basic_regexIcNS_12regex_traitsIcEEE21__match_at_start_ecmaINS_9allocatorINS_9sub_matchIPKcEEEEEEbS8_S8_RNS_13match_resultsIS8_T_EENS_15regex_constants15match_flag_typeEb:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$184, %rsp
	movl	%r9d, %r12d
	movl	%r8d, -68(%rbp)
	movq	%rcx, %rbx
	movq	%rsi, -80(%rbp)
	movq	%rdi, %r15
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movq	40(%r15), %r14
	testq	%r14, %r14
	je	0x10000d70c
	movq	%rdx, -216(%rbp)
	movq	%rdx, -184(%rbp)
	movq	%rdx, -208(%rbp)
	movb	$0, -200(%rbp)
	movl	$0, -176(%rbp)
	movl	$0, -88(%rbp)
	movq	$0, -96(%rbp)
	movq	$0, -104(%rbp)
	movq	$0, -112(%rbp)
	movq	$0, -120(%rbp)
	movq	$0, -128(%rbp)
	movq	$0, -136(%rbp)
	movq	$0, -144(%rbp)
	movq	$0, -152(%rbp)
	movq	$0, -160(%rbp)
	movq	$0, -168(%rbp)
	leaq	-64(%rbp), %rdi
	leaq	-176(%rbp), %rsi
	callq	__ZNSt3__16vectorINS_7__stateIcEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ ## void std::__1::vector<std::__1::__state<char>, std::__1::allocator<std::__1::__state<char> > >::__push_back_slow_path<std::__1::__state<char> >(std::__1::__state<char>&&)
	movq	-120(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000d68f
	movq	%rdi, -112(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-144(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000d6a7
	movq	%rdi, -136(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-56(%rbp), %r13
	movl	$0, -96(%r13)
	movq	-80(%rbp), %rax
	movq	%rax, -88(%r13)
	movq	%rax, -80(%r13)
	movq	-184(%rbp), %rax
	movq	%rax, -72(%r13)
	movl	28(%r15), %esi
	movq	-64(%r13), %rax
	movq	-56(%r13), %rcx
	subq	%rax, %rcx
	sarq	$3, %rcx
	movabsq	$-6148914691236517205, %rdx
	imulq	%rdx, %rcx
	cmpq	%rsi, %rcx
	jae	0x10000d714
	addq	$-64, %r13
	subq	%rcx, %rsi
	leaq	-216(%rbp), %rdx
	movq	%r13, %rdi
	callq	__ZNSt3__16vectorINS_9sub_matchIPKcEENS_9allocatorIS4_EEE8__appendEmRKS4_ ## std::__1::vector<std::__1::sub_match<char const*>, std::__1::allocator<std::__1::sub_match<char const*> > >::__append(unsigned long, std::__1::sub_match<char const*> const&)
	movq	-56(%rbp), %r13
	jmp	0x10000d722
	xorl	%r15d, %r15d
	jmp	0x10000da02
	jbe	0x10000d722
	leaq	(%rsi,%rsi,2), %rcx
	leaq	(%rax,%rcx,8), %rax
	movq	%rax, -56(%r13)
	movl	32(%r15), %esi
	movq	-40(%r13), %rax
	movq	-32(%r13), %rcx
	subq	%rax, %rcx
	sarq	$4, %rcx
	cmpq	%rsi, %rcx
	movq	%rbx, -192(%rbp)
	jae	0x10000d756
	addq	$-40, %r13
	subq	%rcx, %rsi
	movq	%r13, %rdi
	callq	__ZNSt3__16vectorINS_4pairImPKcEENS_9allocatorIS4_EEE8__appendEm ## std::__1::vector<std::__1::pair<unsigned long, char const*>, std::__1::allocator<std::__1::pair<unsigned long, char const*> > >::__append(unsigned long)
	movq	-56(%rbp), %r13
	jmp	0x10000d763
	jbe	0x10000d763
	shlq	$4, %rsi
	addq	%rsi, %rax
	movq	%rax, -32(%r13)
	movq	%r14, -16(%r13)
	movl	-68(%rbp), %eax
	movl	%eax, -8(%r13)
	movb	%r12b, -4(%r13)
	movl	$1000, %r12d
	leaq	1037(%rip), %r15
	leaq	-96(%r13), %rbx
	testq	%r14, %r14
	jne	0x10000d79d
	jmp	0x10000d7a9
	nopw	(%rax,%rax)
	movq	-16(%r13), %r14
	leaq	-96(%r13), %rbx
	testq	%r14, %r14
	je	0x10000d7a9
	movq	(%r14), %rax
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	*16(%rax)
	movl	(%rbx), %eax
	addl	%r12d, %eax
	cmpl	$9, %eax
	ja	0x10000da97
	movslq	(%r15,%rax,4), %rax
	addq	%r15, %rax
	jmpq	*%rax
	testb	$32, -68(%rbp)
	je	0x10000d7d0
	movq	-80(%rbp), %rax
	cmpq	%rax, -80(%r13)
	je	0x10000d7ed
	movl	-68(%rbp), %eax
	testb	$16, %ah
	je	0x10000da17
	movq	-80(%r13), %rcx
	cmpq	-184(%rbp), %rcx
	je	0x10000da1b
	movq	-56(%rbp), %rbx
	movq	-40(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000d803
	movq	%rdi, -32(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-64(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000d815
	movq	%rdi, -56(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$-96, %rbx
	movq	%rbx, -56(%rbp)
	jmp	0x10000d990
	nopw	%cs:(%rax,%rax)
	leaq	-176(%rbp), %r14
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	__ZNSt3__17__stateIcEC2ERKS1_ ## std::__1::__state<char>::__state(std::__1::__state<char> const&)
	movq	-16(%r13), %rdi
	movq	(%rdi), %rax
	movl	$1, %esi
	movq	%rbx, %rdx
	callq	*24(%rax)
	movq	-96(%rbp), %rdi
	movq	(%rdi), %rax
	xorl	%esi, %esi
	movq	%r14, %rdx
	callq	*24(%rax)
	movq	-56(%rbp), %rax
	cmpq	-48(%rbp), %rax
	jae	0x10000d94b
	movq	-152(%rbp), %rcx
	movq	%rcx, 24(%rax)
	movq	-160(%rbp), %rcx
	movq	%rcx, 16(%rax)
	movq	-176(%rbp), %rcx
	movq	-168(%rbp), %rdx
	movq	%rdx, 8(%rax)
	movq	%rcx, (%rax)
	movq	$0, 48(%rax)
	movq	$0, 40(%rax)
	movq	$0, 32(%rax)
	movups	-144(%rbp), %xmm0
	movups	%xmm0, 32(%rax)
	movq	-128(%rbp), %rcx
	movq	%rcx, 48(%rax)
	leaq	-96(%rbp), %rcx
	movq	%rcx, %rdx
	movq	$0, -32(%rdx)
	movq	$0, -40(%rdx)
	movq	$0, -48(%rdx)
	movq	$0, 72(%rax)
	movq	$0, 64(%rax)
	movq	$0, 56(%rax)
	movups	-120(%rbp), %xmm0
	movups	%xmm0, 56(%rax)
	movq	-104(%rbp), %rcx
	movq	%rcx, 72(%rax)
	movq	$0, -8(%rdx)
	movq	$0, -16(%rdx)
	movq	$0, -24(%rdx)
	movq	(%rdx), %rcx
	movq	5(%rdx), %rdx
	movq	%rdx, 85(%rax)
	movq	%rcx, 80(%rax)
	addq	$96, %rax
	movq	%rax, -56(%rbp)
	movq	-144(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x10000d975
	jmp	0x10000d990
	leaq	-64(%rbp), %rdi
	movq	%r14, %rsi
	callq	__ZNSt3__16vectorINS_7__stateIcEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ ## void std::__1::vector<std::__1::__state<char>, std::__1::allocator<std::__1::__state<char> > >::__push_back_slow_path<std::__1::__state<char> >(std::__1::__state<char>&&)
	movq	-120(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000d969
	movq	%rdi, -112(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-144(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000d990
	movq	%rdi, -136(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	nopw	%cs:(%rax,%rax)
	movq	-64(%rbp), %r14
	movq	-56(%rbp), %r13
	cmpq	%r13, %r14
	jne	0x10000d790
	xorl	%r15d, %r15d
	testq	%r14, %r14
	je	0x10000da02
	movq	-56(%rbp), %rbx
	cmpq	%r14, %rbx
	je	0x10000d9f6
	nopw	%cs:(%rax,%rax)
	movq	-40(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000d9d2
	movq	%rdi, -32(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-96(%rbx), %r12
	movq	-64(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000d9e8
	movq	%rdi, -56(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%r12, %r14
	movq	%r12, %rbx
	jne	0x10000d9c0
	movq	-64(%rbp), %rdi
	jmp	0x10000d9f9
	movq	%r14, %rdi
	movq	%r14, -56(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movl	%r15d, %eax
	addq	$184, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	-80(%r13), %rcx
	movq	-192(%rbp), %rax
	movq	(%rax), %rax
	movq	-80(%rbp), %rdx
	movq	%rdx, (%rax)
	movq	%rcx, 8(%rax)
	movb	$1, 16(%rax)
	movq	-64(%r13), %rcx
	movq	-56(%r13), %r8
	subq	%rcx, %r8
	je	0x10000da82
	sarq	$3, %r8
	movabsq	$-6148914691236517205, %rdx
	imulq	%rdx, %r8
	movl	$1, %esi
	xorl	%edi, %edi
	nopw	(%rax,%rax)
	leaq	(%rdi,%rdi,2), %rbx
	movl	%esi, %edi
	leaq	(%rdi,%rdi,2), %rdx
	movups	(%rcx,%rbx,8), %xmm0
	movups	%xmm0, (%rax,%rdx,8)
	movzbl	16(%rcx,%rbx,8), %ebx
	movb	%bl, 16(%rax,%rdx,8)
	incl	%esi
	cmpq	%rdi, %r8
	ja	0x10000da60
	movb	$1, %r15b
	movq	-64(%rbp), %r14
	testq	%r14, %r14
	jne	0x10000d9a9
	jmp	0x10000da02
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	movl	$16, %esi
	movq	%r14, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	136720(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	136585(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%r14, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	jmp	0x10000db20
	movq	%rax, %r15
	movq	%r14, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	-64(%rbp), %r14
	testq	%r14, %r14
	jne	0x10000db2c
	jmp	0x10000db7d
	jmp	0x10000db20
	jmp	0x10000dae8
	jmp	0x10000db20
	movq	%rax, %r15
	movq	-120(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000dafd
	movq	%rdi, -112(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-144(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10000db23
	movq	%rdi, -136(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-64(%rbp), %r14
	testq	%r14, %r14
	jne	0x10000db2c
	jmp	0x10000db7d
	movq	%rax, %r15
	movq	-64(%rbp), %r14
	testq	%r14, %r14
	je	0x10000db7d
	movq	-56(%rbp), %rbx
	cmpq	%r14, %rbx
	je	0x10000db85
	nopw	%cs:(%rax,%rax)
	movq	-40(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000db52
	movq	%rdi, -32(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-96(%rbx), %r12
	movq	-64(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000db68
	movq	%rdi, -56(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%r12, %r14
	movq	%r12, %rbx
	jne	0x10000db40
	movq	-64(%rbp), %rdi
	movq	%r14, -56(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%r14, %rdi
	jmp	0x10000db74
	nop
	xorb	$-4, %al
	.byte 0xff #bad opcode
	decl	(%rbx)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	(%rbx)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	(%rbx)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	(%rbx)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	incl	(%rsi,%rdi,8)
	.byte 0xff #bad opcode
	incl	(%rsi,%rdi,8)
	.byte 0xff #bad opcode
	jmpq	*-4(%rcx)
	.byte 0xff #bad opcode
	jmpq	*-33226753(%rsp,%rdi,8)
	.byte 0xff #bad opcode
	jmpq	*102(%rsi)
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorINS_9sub_matchIPKcEENS_9allocatorIS4_EEE6assignEmRKS4_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rdx, %rbx
	movq	%rsi, %r15
	movq	%rdi, %r14
	movq	(%r14), %rdi
	movq	16(%r14), %rax
	movq	%rax, %rcx
	subq	%rdi, %rcx
	sarq	$3, %rcx
	movabsq	$-6148914691236517205, %r12
	imulq	%r12, %rcx
	cmpq	%r15, %rcx
	jae	0x10000dd6a
	testq	%rdi, %rdi
	je	0x10000dc23
	movq	%rdi, 8(%r14)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	$0, 16(%r14)
	movq	$0, 8(%r14)
	movq	$0, (%r14)
	xorl	%eax, %eax
	movabsq	$768614336404564650, %rcx
	cmpq	%rcx, %r15
	ja	0x10000df3e
	sarq	$3, %rax
	imulq	%r12, %rax
	movabsq	$384307168202282324, %rdx
	cmpq	%rdx, %rax
	ja	0x10000dc5a
	addq	%rax, %rax
	cmpq	%r15, %rax
	cmovbq	%r15, %rax
	movq	%rax, %rcx
	shlq	$3, %rcx
	leaq	(%rcx,%rcx,2), %r12
	movq	%r12, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, 8(%r14)
	movq	%rax, (%r14)
	movq	%rax, %rcx
	addq	%r12, %rcx
	movq	%rcx, 16(%r14)
	leaq	-1(%r15), %rcx
	movq	%r15, %rdx
	andq	$3, %rdx
	je	0x10000dcba
	negq	%rdx
	nopl	(%rax,%rax)
	movq	16(%rbx), %rsi
	movq	%rsi, 16(%rax)
	movq	(%rbx), %rsi
	movq	8(%rbx), %rdi
	movq	%rdi, 8(%rax)
	movq	%rsi, (%rax)
	movq	8(%r14), %rax
	addq	$24, %rax
	movq	%rax, 8(%r14)
	decq	%r15
	incq	%rdx
	jne	0x10000dc90
	cmpq	$3, %rcx
	jb	0x10000df23
	nopw	%cs:(%rax,%rax)
	movq	16(%rbx), %rcx
	movq	%rcx, 16(%rax)
	movq	(%rbx), %rcx
	movq	8(%rbx), %rdx
	movq	%rdx, 8(%rax)
	movq	%rcx, (%rax)
	movq	8(%r14), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	16(%rbx), %rcx
	movq	%rcx, 40(%rax)
	movq	(%rbx), %rcx
	movq	8(%rbx), %rdx
	movq	%rdx, 32(%rax)
	movq	%rcx, 24(%rax)
	movq	8(%r14), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	16(%rbx), %rcx
	movq	%rcx, 40(%rax)
	movq	(%rbx), %rcx
	movq	8(%rbx), %rdx
	movq	%rdx, 32(%rax)
	movq	%rcx, 24(%rax)
	movq	8(%r14), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	16(%rbx), %rcx
	movq	%rcx, 40(%rax)
	movq	(%rbx), %rcx
	movq	8(%rbx), %rdx
	movq	%rdx, 32(%rax)
	movq	%rcx, 24(%rax)
	movq	8(%r14), %rax
	addq	$24, %rax
	movq	%rax, 8(%r14)
	addq	$-4, %r15
	jne	0x10000dcd0
	jmp	0x10000df23
	movq	8(%r14), %r10
	movq	%r10, %r9
	subq	%rdi, %r9
	sarq	$3, %r9
	imulq	%r12, %r9
	cmpq	%r15, %r9
	movq	%r15, %rcx
	cmovbq	%r9, %rcx
	testq	%rcx, %rcx
	je	0x10000de11
	cmpq	%r15, %r9
	movq	%r15, %r8
	cmovbq	%r9, %r8
	decq	%r8
	movq	%rcx, %rdx
	andq	$3, %rdx
	je	0x10000df2c
	negq	%rdx
	movq	%rdi, %rsi
	nop
	movups	(%rbx), %xmm0
	movups	%xmm0, (%rsi)
	movzbl	16(%rbx), %eax
	movb	%al, 16(%rsi)
	addq	$24, %rsi
	decq	%rcx
	incq	%rdx
	jne	0x10000ddb0
	cmpq	$3, %r8
	jb	0x10000de11
	nop
	movups	(%rbx), %xmm0
	movups	%xmm0, (%rsi)
	movzbl	16(%rbx), %eax
	movb	%al, 16(%rsi)
	movups	(%rbx), %xmm0
	movups	%xmm0, 24(%rsi)
	movzbl	16(%rbx), %eax
	movb	%al, 40(%rsi)
	movups	(%rbx), %xmm0
	movups	%xmm0, 48(%rsi)
	movzbl	16(%rbx), %eax
	movb	%al, 64(%rsi)
	movups	(%rbx), %xmm0
	movups	%xmm0, 72(%rsi)
	movzbl	16(%rbx), %eax
	movb	%al, 88(%rsi)
	addq	$96, %rsi
	addq	$-4, %rcx
	jne	0x10000ddd0
	cmpq	%r15, %r9
	jae	0x10000df17
	movq	%r15, %rdx
	subq	%r9, %rdx
	decq	%r15
	subq	%r9, %r15
	movq	%rdx, %rcx
	andq	$3, %rcx
	je	0x10000de6a
	negq	%rcx
	nopw	%cs:(%rax,%rax)
	movq	16(%rbx), %rax
	movq	%rax, 16(%r10)
	movq	(%rbx), %rax
	movq	8(%rbx), %rsi
	movq	%rsi, 8(%r10)
	movq	%rax, (%r10)
	movq	8(%r14), %r10
	addq	$24, %r10
	movq	%r10, 8(%r14)
	decq	%rdx
	incq	%rcx
	jne	0x10000de40
	cmpq	$3, %r15
	jb	0x10000df23
	nopw	%cs:(%rax,%rax)
	movq	16(%rbx), %rax
	movq	%rax, 16(%r10)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%r10)
	movq	%rax, (%r10)
	movq	8(%r14), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	16(%rbx), %rcx
	movq	%rcx, 40(%rax)
	movq	(%rbx), %rcx
	movq	8(%rbx), %rsi
	movq	%rsi, 32(%rax)
	movq	%rcx, 24(%rax)
	movq	8(%r14), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	16(%rbx), %rcx
	movq	%rcx, 40(%rax)
	movq	(%rbx), %rcx
	movq	8(%rbx), %rsi
	movq	%rsi, 32(%rax)
	movq	%rcx, 24(%rax)
	movq	8(%r14), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	16(%rbx), %rcx
	movq	%rcx, 40(%rax)
	movq	(%rbx), %rcx
	movq	8(%rbx), %rsi
	movq	%rsi, 32(%rax)
	movq	%rcx, 24(%rax)
	movq	8(%r14), %r10
	addq	$24, %r10
	movq	%r10, 8(%r14)
	addq	$-4, %rdx
	jne	0x10000de80
	jmp	0x10000df23
	leaq	(%r15,%r15,2), %rax
	leaq	(%rdi,%rax,8), %rax
	movq	%rax, 8(%r14)
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rdi, %rsi
	cmpq	$3, %r8
	jae	0x10000ddd0
	jmp	0x10000de11
	movq	%r14, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorINS_7__stateIcEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movabsq	$192153584101141162, %r12
	movq	(%r14), %rdx
	movq	8(%r14), %r15
	subq	%rdx, %r15
	sarq	$5, %r15
	movabsq	$-6148914691236517205, %rsi
	imulq	%rsi, %r15
	leaq	1(%r15), %rax
	cmpq	%r12, %rax
	ja	0x10000e20d
	movq	16(%r14), %rcx
	subq	%rdx, %rcx
	sarq	$5, %rcx
	imulq	%rsi, %rcx
	movabsq	$96076792050570580, %rdx
	cmpq	%rdx, %rcx
	ja	0x10000dfc8
	addq	%rcx, %rcx
	cmpq	%rax, %rcx
	cmovbq	%rax, %rcx
	testq	%rcx, %rcx
	movq	%rcx, %r12
	je	0x10000e203
	movq	%r12, %rax
	shlq	$5, %rax
	leaq	(%rax,%rax,2), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	leaq	(%r15,%r15,2), %rsi
	shlq	$5, %rsi
	leaq	(%rax,%rsi), %rdx
	leaq	(%r12,%r12,2), %r8
	shlq	$5, %r8
	addq	%rax, %r8
	movq	24(%rbx), %rdi
	movq	%rdi, 24(%rax,%rsi)
	movq	16(%rbx), %rdi
	movq	%rdi, 16(%rax,%rsi)
	movq	(%rbx), %rdi
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rax,%rsi)
	movq	%rdi, (%rax,%rsi)
	movq	$0, 48(%rax,%rsi)
	movq	$0, 40(%rax,%rsi)
	movups	32(%rbx), %xmm0
	movups	%xmm0, 32(%rax,%rsi)
	movq	48(%rbx), %rcx
	movq	%rcx, 48(%rax,%rsi)
	movq	$0, 48(%rbx)
	movq	$0, 40(%rbx)
	movq	$0, 32(%rbx)
	movq	$0, 72(%rax,%rsi)
	movq	$0, 64(%rax,%rsi)
	movups	56(%rbx), %xmm0
	movups	%xmm0, 56(%rax,%rsi)
	movq	72(%rbx), %rcx
	movq	%rcx, 72(%rax,%rsi)
	movq	$0, 72(%rbx)
	movq	$0, 64(%rbx)
	movq	$0, 56(%rbx)
	movq	80(%rbx), %rcx
	movq	85(%rbx), %rdi
	movq	%rdi, 85(%rax,%rsi)
	movq	%rcx, 80(%rax,%rsi)
	leaq	96(%rax,%rsi), %rax
	movq	(%r14), %r12
	movq	8(%r14), %rsi
	cmpq	%r12, %rsi
	je	0x10000e18e
	addq	$-40, %rsi
	negq	%r12
	nopw	(%rax,%rax)
	movq	-32(%rsi), %rcx
	movq	%rcx, -72(%rdx)
	movq	-40(%rsi), %rcx
	movq	%rcx, -80(%rdx)
	movq	-56(%rsi), %rcx
	movq	-48(%rsi), %rdi
	movq	%rdi, -88(%rdx)
	movq	%rcx, -96(%rdx)
	movq	$0, -48(%rdx)
	movq	$0, -56(%rdx)
	movq	$0, -64(%rdx)
	movups	-24(%rsi), %xmm0
	movups	%xmm0, -64(%rdx)
	movq	-8(%rsi), %rcx
	movq	%rcx, -48(%rdx)
	movq	$0, -8(%rsi)
	movq	$0, -16(%rsi)
	movq	$0, -24(%rsi)
	movq	$0, -24(%rdx)
	movq	$0, -32(%rdx)
	movq	$0, -40(%rdx)
	movups	(%rsi), %xmm0
	movups	%xmm0, -40(%rdx)
	movq	16(%rsi), %rcx
	movq	%rcx, -24(%rdx)
	movq	$0, 16(%rsi)
	movq	$0, 8(%rsi)
	movq	$0, (%rsi)
	movq	24(%rsi), %rcx
	movq	29(%rsi), %rdi
	movq	%rdi, -11(%rdx)
	movq	%rcx, -16(%rdx)
	addq	$-96, %rdx
	leaq	-96(%rsi,%r12), %rcx
	addq	$-96, %rsi
	cmpq	$-40, %rcx
	jne	0x10000e0c0
	movq	(%r14), %r15
	movq	8(%r14), %r12
	jmp	0x10000e191
	movq	%r12, %r15
	movq	%rdx, (%r14)
	movq	%rax, 8(%r14)
	movq	%r8, 16(%r14)
	cmpq	%r15, %r12
	je	0x10000e1e5
	nopw	%cs:(%rax,%rax)
	movq	-40(%r12), %rdi
	testq	%rdi, %rdi
	je	0x10000e1c4
	movq	%rdi, -32(%r12)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-96(%r12), %rbx
	movq	-64(%r12), %rdi
	testq	%rdi, %rdi
	je	0x10000e1dd
	movq	%rdi, -56(%r12)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r15
	movq	%rbx, %r12
	jne	0x10000e1b0
	testq	%r15, %r15
	je	0x10000e1fa
	movq	%r15, %rdi
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%r12d, %r12d
	xorl	%eax, %eax
	jmp	0x10000dfd8
	movq	%r14, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorINS_9sub_matchIPKcEENS_9allocatorIS4_EEE8__appendEmRKS4_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rdx, %r12
	movq	%rsi, %r15
	movq	%rdi, %r14
	movq	8(%r14), %rbx
	movq	16(%r14), %rax
	movq	%rax, %rdx
	subq	%rbx, %rdx
	sarq	$3, %rdx
	movabsq	$-6148914691236517205, %rcx
	imulq	%rcx, %rdx
	cmpq	%r15, %rdx
	jae	0x10000e499
	movabsq	$768614336404564650, %r13
	movq	(%r14), %rsi
	subq	%rsi, %rbx
	sarq	$3, %rbx
	imulq	%rcx, %rbx
	leaq	(%rbx,%r15), %rdx
	cmpq	%r13, %rdx
	ja	0x10000e5c1
	subq	%rsi, %rax
	sarq	$3, %rax
	imulq	%rcx, %rax
	movabsq	$384307168202282324, %rcx
	cmpq	%rcx, %rax
	ja	0x10000e2b5
	addq	%rax, %rax
	cmpq	%rdx, %rax
	cmovbq	%rdx, %rax
	testq	%rax, %rax
	movq	%rax, %r13
	je	0x10000e5b7
	leaq	(,%r13,8), %rax
	leaq	(%rax,%rax,2), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	leaq	(%rbx,%rbx,2), %rcx
	leaq	(%rax,%rcx,8), %r8
	leaq	-1(%r15), %rdx
	movq	%r15, %rcx
	andq	$7, %rcx
	je	0x10000e5a0
	negq	%rcx
	movq	%r8, %rbx
	nopw	%cs:(%rax,%rax)
	movq	16(%r12), %rdi
	movq	%rdi, 16(%rbx)
	movq	(%r12), %rdi
	movq	8(%r12), %rsi
	movq	%rsi, 8(%rbx)
	movq	%rdi, (%rbx)
	addq	$24, %rbx
	decq	%r15
	incq	%rcx
	jne	0x10000e2f0
	leaq	(%r13,%r13,2), %rcx
	cmpq	$7, %rdx
	jb	0x10000e428
	nopw	%cs:(%rax,%rax)
	movq	16(%r12), %rdx
	movq	%rdx, 16(%rbx)
	movq	(%r12), %rdx
	movq	8(%r12), %rsi
	movq	%rsi, 8(%rbx)
	movq	%rdx, (%rbx)
	movq	16(%r12), %rdx
	movq	%rdx, 40(%rbx)
	movq	(%r12), %rdx
	movq	8(%r12), %rsi
	movq	%rsi, 32(%rbx)
	movq	%rdx, 24(%rbx)
	movq	16(%r12), %rdx
	movq	%rdx, 64(%rbx)
	movq	(%r12), %rdx
	movq	8(%r12), %rsi
	movq	%rsi, 56(%rbx)
	movq	%rdx, 48(%rbx)
	movq	16(%r12), %rdx
	movq	%rdx, 88(%rbx)
	movq	(%r12), %rdx
	movq	8(%r12), %rsi
	movq	%rsi, 80(%rbx)
	movq	%rdx, 72(%rbx)
	movq	(%r12), %rdx
	movq	8(%r12), %rsi
	movq	%rdx, 96(%rbx)
	movq	%rsi, 104(%rbx)
	movq	16(%r12), %rdx
	movq	%rdx, 112(%rbx)
	movq	16(%r12), %rdx
	movq	%rdx, 136(%rbx)
	movq	(%r12), %rdx
	movq	8(%r12), %rsi
	movq	%rsi, 128(%rbx)
	movq	%rdx, 120(%rbx)
	movq	16(%r12), %rdx
	movq	%rdx, 160(%rbx)
	movq	(%r12), %rdx
	movq	8(%r12), %rsi
	movq	%rsi, 152(%rbx)
	movq	%rdx, 144(%rbx)
	movq	16(%r12), %rdx
	movq	%rdx, 184(%rbx)
	movq	(%r12), %rdx
	movq	8(%r12), %rsi
	movq	%rsi, 176(%rbx)
	movq	%rdx, 168(%rbx)
	addq	$192, %rbx
	addq	$-8, %r15
	jne	0x10000e330
	leaq	(%rax,%rcx,8), %r13
	movq	(%r14), %r12
	movq	8(%r14), %rcx
	subq	%r12, %rcx
	movabsq	$-3074457345618258603, %rdx
	movq	%rcx, %rax
	imulq	%rdx
	movq	%rdx, %rax
	shrq	$63, %rax
	sarq	$2, %rdx
	addq	%rax, %rdx
	leaq	(%rdx,%rdx,2), %rax
	leaq	(%r8,%rax,8), %r15
	testq	%rcx, %rcx
	jle	0x10000e46f
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%rcx, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r15, (%r14)
	movq	%rbx, 8(%r14)
	movq	%r13, 16(%r14)
	testq	%r12, %r12
	je	0x10000e591
	movq	%r12, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-1(%r15), %rax
	movq	%r15, %rcx
	andq	$3, %rcx
	je	0x10000e4dd
	negq	%rcx
	nopl	(%rax)
	movq	16(%r12), %rdx
	movq	%rdx, 16(%rbx)
	movq	(%r12), %rdx
	movq	8(%r12), %rsi
	movq	%rsi, 8(%rbx)
	movq	%rdx, (%rbx)
	movq	8(%r14), %rbx
	addq	$24, %rbx
	movq	%rbx, 8(%r14)
	decq	%r15
	incq	%rcx
	jne	0x10000e4b0
	cmpq	$3, %rax
	jb	0x10000e591
	nopw	(%rax,%rax)
	movq	16(%r12), %rax
	movq	%rax, 16(%rbx)
	movq	(%r12), %rax
	movq	8(%r12), %rcx
	movq	%rcx, 8(%rbx)
	movq	%rax, (%rbx)
	movq	8(%r14), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	16(%r12), %rcx
	movq	%rcx, 40(%rax)
	movq	(%r12), %rcx
	movq	8(%r12), %rdx
	movq	%rdx, 32(%rax)
	movq	%rcx, 24(%rax)
	movq	8(%r14), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	16(%r12), %rcx
	movq	%rcx, 40(%rax)
	movq	(%r12), %rcx
	movq	8(%r12), %rdx
	movq	%rdx, 32(%rax)
	movq	%rcx, 24(%rax)
	movq	8(%r14), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	16(%r12), %rcx
	movq	%rcx, 40(%rax)
	movq	(%r12), %rcx
	movq	8(%r12), %rdx
	movq	%rdx, 32(%rax)
	movq	%rcx, 24(%rax)
	movq	8(%r14), %rbx
	addq	$24, %rbx
	movq	%rbx, 8(%r14)
	addq	$-4, %r15
	jne	0x10000e4f0
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r8, %rbx
	leaq	(%r13,%r13,2), %rcx
	cmpq	$7, %rdx
	jae	0x10000e330
	jmp	0x10000e428
	xorl	%r13d, %r13d
	xorl	%eax, %eax
	jmp	0x10000e2c6
	movq	%r14, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	nopl	(%rax)
__ZNSt3__16vectorINS_4pairImPKcEENS_9allocatorIS4_EEE8__appendEm:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r15
	movq	%rdi, %r14
	movq	8(%r14), %r12
	movq	16(%r14), %r13
	movq	%r13, %rax
	subq	%r12, %rax
	sarq	$4, %rax
	cmpq	%r15, %rax
	jae	0x10000e69e
	movq	(%r14), %rdx
	subq	%rdx, %r12
	sarq	$4, %r12
	leaq	(%r12,%r15), %rax
	movq	%rax, %rcx
	shrq	$60, %rcx
	jne	0x10000e8c5
	movabsq	$1152921504606846975, %rcx
	subq	%rdx, %r13
	movq	%r13, %rdx
	sarq	$4, %rdx
	movabsq	$576460752303423486, %rsi
	cmpq	%rsi, %rdx
	ja	0x10000e75c
	sarq	$3, %r13
	cmpq	%rax, %r13
	cmovbq	%rax, %r13
	testq	%r13, %r13
	je	0x10000e8bb
	cmpq	%rcx, %r13
	jbe	0x10000e75f
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	129348(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	134007(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	133697(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	133546(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	leaq	-1(%r15), %rax
	movq	%r15, %rcx
	andq	$3, %rcx
	je	0x10000e6d5
	negq	%rcx
	nop
	movq	$0, 8(%r12)
	movq	$0, (%r12)
	movq	8(%r14), %r12
	addq	$16, %r12
	movq	%r12, 8(%r14)
	decq	%r15
	incq	%rcx
	jne	0x10000e6b0
	cmpq	$3, %rax
	jb	0x10000e899
	nop
	movq	$0, 8(%r12)
	movq	$0, (%r12)
	movq	8(%r14), %rax
	leaq	16(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	$0, 24(%rax)
	movq	$0, 16(%rax)
	movq	8(%r14), %rax
	leaq	16(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	$0, 24(%rax)
	movq	$0, 16(%rax)
	movq	8(%r14), %rax
	leaq	16(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	$0, 24(%rax)
	movq	$0, 16(%rax)
	movq	8(%r14), %r12
	addq	$16, %r12
	movq	%r12, 8(%r14)
	addq	$-4, %r15
	jne	0x10000e6e0
	jmp	0x10000e899
	movq	%rcx, %r13
	movq	%r13, %rdi
	shlq	$4, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	shlq	$4, %r12
	addq	%rax, %r12
	leaq	-1(%r15), %rdx
	movq	%r15, %rcx
	andq	$7, %rcx
	je	0x10000e8a8
	negq	%rcx
	movq	%r12, %rbx
	nopl	(%rax)
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	addq	$16, %rbx
	decq	%r15
	incq	%rcx
	jne	0x10000e790
	shlq	$4, %r13
	cmpq	$7, %rdx
	jb	0x10000e84d
	nopl	(%rax)
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	movq	$0, 24(%rbx)
	movq	$0, 16(%rbx)
	movq	$0, 40(%rbx)
	movq	$0, 32(%rbx)
	movq	$0, 56(%rbx)
	movq	$0, 48(%rbx)
	movq	$0, 72(%rbx)
	movq	$0, 64(%rbx)
	movq	$0, 88(%rbx)
	movq	$0, 80(%rbx)
	movq	$0, 104(%rbx)
	movq	$0, 96(%rbx)
	movq	$0, 120(%rbx)
	movq	$0, 112(%rbx)
	subq	$-128, %rbx
	addq	$-8, %r15
	jne	0x10000e7c0
	addq	%r13, %rax
	movq	(%r14), %r15
	movq	8(%r14), %rdx
	subq	%r15, %rdx
	subq	%rdx, %r12
	testq	%rdx, %rdx
	jle	0x10000e873
	movq	%r12, %rdi
	movq	%rax, %r13
	movq	%r15, %rsi
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r13, %rax
	movq	%r12, (%r14)
	movq	%rbx, 8(%r14)
	movq	%rax, 16(%r14)
	testq	%r15, %r15
	je	0x10000e899
	movq	%r15, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r12, %rbx
	shlq	$4, %r13
	cmpq	$7, %rdx
	jae	0x10000e7c0
	jmp	0x10000e84d
	xorl	%r13d, %r13d
	xorl	%eax, %eax
	jmp	0x10000e76b
	movq	%r14, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
__ZNSt3__17__stateIcEC2ERKS1_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r14
	movq	%rdi, %r13
	movq	24(%r14), %rax
	movq	%rax, 24(%r13)
	movq	16(%r14), %rax
	movq	%rax, 16(%r13)
	movq	(%r14), %rax
	movq	8(%r14), %rcx
	movq	%rcx, 8(%r13)
	movq	%rax, (%r13)
	leaq	32(%r13), %rax
	movq	%rax, -48(%rbp)
	movq	$0, 48(%r13)
	movq	$0, 40(%r13)
	movq	$0, 32(%r13)
	movq	40(%r14), %rdi
	movq	32(%r14), %rax
	movq	%rdi, %r15
	subq	%rax, %r15
	subq	%rax, %rdi
	je	0x10000e9bb
	sarq	$3, %r15
	movabsq	$-6148914691236517205, %rbx
	imulq	%rbx, %r15
	movabsq	$768614336404564651, %rax
	cmpq	%rax, %r15
	jae	0x10000ea4d
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r12
	movq	%r12, 40(%r13)
	movq	%r12, 32(%r13)
	leaq	(%r15,%r15,2), %rax
	leaq	(%r12,%rax,8), %rax
	movq	%rax, 48(%r13)
	movq	32(%r14), %rsi
	movq	40(%r14), %rcx
	subq	%rsi, %rcx
	testq	%rcx, %rcx
	jle	0x10000e9bb
	movq	%rcx, %rax
	mulq	%rbx
	movq	%rdx, %rbx
	shrq	$4, %rbx
	movq	%r12, %rdi
	movq	%rcx, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	leaq	(%rbx,%rbx,2), %rax
	leaq	(%r12,%rax,8), %rax
	movq	%rax, 40(%r13)
	movq	$0, 72(%r13)
	movq	$0, 64(%r13)
	movq	$0, 56(%r13)
	movq	64(%r14), %rdi
	subq	56(%r14), %rdi
	movq	%rdi, %rbx
	sarq	$4, %rbx
	je	0x10000ea2e
	leaq	56(%r13), %r15
	movq	%rbx, %rax
	shrq	$60, %rax
	jne	0x10000ea56
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r12
	movq	%r12, 64(%r13)
	movq	%r12, 56(%r13)
	shlq	$4, %rbx
	addq	%r12, %rbx
	movq	%rbx, 72(%r13)
	movq	56(%r14), %rsi
	movq	64(%r14), %r15
	subq	%rsi, %r15
	testq	%r15, %r15
	jle	0x10000ea2e
	movq	%r12, %rdi
	movq	%r15, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	addq	%r15, %r12
	movq	%r12, 64(%r13)
	movq	80(%r14), %rax
	movq	85(%r14), %rcx
	movq	%rcx, 85(%r13)
	movq	%rax, 80(%r13)
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	-48(%rbp), %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%r15, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r14
	movq	(%r15), %rdi
	testq	%rdi, %rdi
	je	0x10000ea77
	movq	%rdi, 64(%r13)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x10000ea77
	movq	%rax, %r14
	movq	-48(%rbp), %rax
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	0x10000ea8c
	movq	%rdi, 40(%r13)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE19__parse_atom_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rdx, %r14
	movq	%rsi, %rbx
	movq	%rdi, %r15
	cmpq	%r14, %rbx
	je	0x10000eb05
	cmpb	$92, (%rbx)
	movq	%rbx, %rax
	jne	0x10000eb08
	leaq	1(%rbx), %r12
	cmpq	%r14, %r12
	je	0x10000eb11
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE22__parse_decimal_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_decimal_escape<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	cmpq	%r12, %rax
	jne	0x10000eb08
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE30__parse_character_class_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_character_class_escape<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	cmpq	%r12, %rax
	jne	0x10000eb08
	xorl	%ecx, %ecx
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE24__parse_character_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_character_escape<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
	cmpq	%r12, %rax
	jne	0x10000eb08
	movq	%rbx, %rax
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$3, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	132502(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	132367(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE26__parse_bracket_expressionINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rdx, %r14
	movq	%rdi, %r12
	cmpq	%r14, %rsi
	je	0x10000ef5b
	cmpb	$91, (%rsi)
	jne	0x10000ef5b
	leaq	1(%rsi), %rbx
	cmpq	%r14, %rbx
	je	0x10000efc1
	xorl	%eax, %eax
	cmpb	$94, 1(%rsi)
	leaq	2(%rsi), %rcx
	sete	%al
	cmoveq	%rcx, %rbx
	movq	%r12, %rdi
	movl	%eax, %esi
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE21__start_matching_listEb ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__start_matching_list(bool)
	movq	%rax, %r15
	cmpq	%r14, %rbx
	je	0x10000efdd
	movzwl	24(%r12), %eax
	testw	$496, %ax
	je	0x10000ed3a
	cmpb	$93, (%rbx)
	jne	0x10000ed3a
	cmpb	$0, 169(%r15)
	je	0x10000ec07
	movq	24(%r15), %rdi
	movq	(%rdi), %rax
	movl	$93, %esi
	callq	*40(%rax)
	movl	%eax, %r8d
	movq	48(%r15), %rdx
	movq	56(%r15), %r13
	cmpq	%r13, %rdx
	jae	0x10000ec73
	movb	%r8b, (%rdx)
	jmp	0x10000ed33
	leaq	40(%r15), %rdi
	cmpb	$0, 170(%r15)
	movq	48(%r15), %rdx
	movq	56(%r15), %r13
	je	0x10000ed27
	cmpq	%r13, %rdx
	jb	0x10000ed30
	movq	(%rdi), %rsi
	subq	%rsi, %rdx
	movq	%rdx, %rax
	incq	%rax
	js	0x10000f029
	subq	%rsi, %r13
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %r13
	movq	%rsi, -48(%rbp)
	jae	0x10000ef6d
	addq	%r13, %r13
	cmpq	%rax, %r13
	cmovbq	%rax, %r13
	testq	%r13, %r13
	jne	0x10000ef77
	xorl	%r13d, %r13d
	xorl	%eax, %eax
	jmp	0x10000ef8b
	leaq	40(%r15), %rdi
	movq	(%rdi), %rsi
	subq	%rsi, %rdx
	movq	%rdx, %rax
	incq	%rax
	js	0x10000f029
	subq	%rsi, %r13
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %r13
	movq	%rsi, -48(%rbp)
	jae	0x10000ecb5
	addq	%r13, %r13
	cmpq	%rax, %r13
	cmovbq	%rax, %r13
	testq	%r13, %r13
	jne	0x10000ecbf
	xorl	%r13d, %r13d
	xorl	%eax, %eax
	jmp	0x10000ecdb
	movabsq	$9223372036854775807, %r13
	movq	%r13, %rdi
	movq	%rdx, -56(%rbp)
	movb	%r8b, -64(%rbp)
	callq	0x100029746 ## symbol stub for: __Znwm
	movb	-64(%rbp), %r8b
	movq	-56(%rbp), %rdx
	movq	-48(%rbp), %rsi
	addq	%rax, %r13
	movb	%r8b, (%rax,%rdx)
	leaq	1(%rax,%rdx), %rcx
	testq	%rdx, %rdx
	jle	0x10000ed0c
	movq	%rax, %rdi
	movq	-48(%rbp), %rsi
	movq	%rax, -56(%rbp)
	movq	%rcx, -64(%rbp)
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	-64(%rbp), %rcx
	movq	-56(%rbp), %rax
	movq	-48(%rbp), %rsi
	movq	%rax, 40(%r15)
	movq	%rcx, 48(%r15)
	movq	%r13, 56(%r15)
	testq	%rsi, %rsi
	je	0x10000ed37
	movq	%rsi, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x10000ed37
	cmpq	%r13, %rdx
	je	0x10000ec2a
	movb	$93, (%rdx)
	incq	48(%r15)
	incq	%rbx
	cmpq	%r14, %rbx
	jne	0x10000ed53
	jmp	0x10000ed69
	nopw	%cs:(%rax,%rax)
	movq	%rax, %rbx
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	movq	%r15, %rcx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE23__parse_expression_termINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_20__bracket_expressionIcS2_EE ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_expression_term<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::__bracket_expression<char, std::__1::regex_traits<char> >*)
	cmpq	%rbx, %rax
	jne	0x10000ed50
	cmpq	%r14, %rbx
	je	0x10000eff9
	cmpb	$45, (%rbx)
	jne	0x10000ef4b
	cmpb	$0, 169(%r15)
	je	0x10000edb0
	movq	24(%r15), %rdi
	movq	(%rdi), %rax
	movl	$45, %esi
	callq	*40(%rax)
	movl	%eax, %esi
	movq	48(%r15), %r12
	movq	56(%r15), %r13
	cmpq	%r13, %r12
	jae	0x10000ee1c
	movb	%sil, (%r12)
	incq	48(%r15)
	jmp	0x10000ef48
	movq	%r15, %rdi
	addq	$40, %rdi
	cmpb	$0, 170(%r15)
	movq	48(%r15), %rdx
	movq	56(%r15), %r12
	je	0x10000eecb
	cmpq	%r12, %rdx
	jb	0x10000eed4
	movq	(%rdi), %rsi
	subq	%rsi, %rdx
	movq	%rdx, %rax
	incq	%rax
	js	0x10000f029
	subq	%rsi, %r12
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %r12
	jae	0x10000eedd
	addq	%r12, %r12
	cmpq	%rax, %r12
	cmovbq	%rax, %r12
	testq	%r12, %r12
	jne	0x10000eee7
	xorl	%r12d, %r12d
	xorl	%r13d, %r13d
	jmp	0x10000ef00
	movq	%r15, %rdi
	addq	$40, %rdi
	movq	(%rdi), %rdx
	subq	%rdx, %r12
	movq	%r12, %rax
	incq	%rax
	js	0x10000f029
	subq	%rdx, %r13
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %r13
	movq	%rdx, -48(%rbp)
	jae	0x10000ee61
	addq	%r13, %r13
	cmpq	%rax, %r13
	cmovbq	%rax, %r13
	testq	%r13, %r13
	jne	0x10000ee6b
	xorl	%r13d, %r13d
	xorl	%eax, %eax
	jmp	0x10000ee7f
	movabsq	$9223372036854775807, %r13
	movq	%r13, %rdi
	movb	%sil, -56(%rbp)
	callq	0x100029746 ## symbol stub for: __Znwm
	movb	-56(%rbp), %sil
	movq	-48(%rbp), %rdx
	addq	%rax, %r13
	movb	%sil, (%rax,%r12)
	leaq	1(%rax,%r12), %rcx
	testq	%r12, %r12
	jle	0x10000eeb1
	movq	%rax, %rdi
	movq	-48(%rbp), %rsi
	movq	%r12, %rdx
	movq	%rax, %r12
	movq	%rcx, -56(%rbp)
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	-56(%rbp), %rcx
	movq	%r12, %rax
	movq	-48(%rbp), %rdx
	movq	%rax, 40(%r15)
	movq	%rcx, 48(%r15)
	movq	%r13, 56(%r15)
	testq	%rdx, %rdx
	je	0x10000ef48
	movq	%rdx, %rdi
	jmp	0x10000ef43
	cmpq	%r12, %rdx
	je	0x10000edd6
	movb	$45, (%rdx)
	incq	48(%r15)
	jmp	0x10000ef48
	movabsq	$9223372036854775807, %r12
	movq	%r12, %rdi
	movq	%rdx, -48(%rbp)
	movq	%rsi, %r13
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%r13, %rsi
	movq	-48(%rbp), %rdx
	movq	%rax, %r13
	addq	%r13, %r12
	movb	$45, (%r13,%rdx)
	leaq	1(%r13,%rdx), %rax
	testq	%rdx, %rdx
	jle	0x10000ef2f
	movq	%r13, %rdi
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rsi
	movq	%rax, -56(%rbp)
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	-56(%rbp), %rax
	movq	-48(%rbp), %rsi
	movq	%r13, 40(%r15)
	movq	%rax, 48(%r15)
	movq	%r12, 56(%r15)
	testq	%rsi, %rsi
	je	0x10000ef48
	movq	%rsi, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	incq	%rbx
	cmpq	%r14, %rbx
	je	0x10000efa5
	cmpb	$93, (%rbx)
	jne	0x10000efa5
	incq	%rbx
	movq	%rbx, %rsi
	movq	%rsi, %rax
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movabsq	$9223372036854775807, %r13
	movq	%r13, %rdi
	movq	%rdx, -56(%rbp)
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	-48(%rbp), %rsi
	movq	-56(%rbp), %rdx
	addq	%rax, %r13
	movb	$93, (%rax,%rdx)
	leaq	1(%rax,%rdx), %rcx
	testq	%rdx, %rdx
	jg	0x10000ecec
	jmp	0x10000ed0c
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$5, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000f013
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$5, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000f013
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$5, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000f013
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$5, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	131246(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	131111(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	jmp	0x10000f034
	jmp	0x10000f034
	jmp	0x10000f034
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE25__parse_pattern_characterINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %rbx
	cmpq	%rdx, %rbx
	je	0x10000f079
	movsbl	(%rbx), %eax
	leal	-36(%rax), %ecx
	cmpl	$89, %ecx
	ja	0x10000f083
	leaq	32(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	movsbl	%al, %esi
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_charEc ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_char(char)
	incq	%rbx
	jmp	0x10000f079
	jmp	0xf400f094
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmp	0xea00f0a4
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmp	0xea00f0ac
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmp	0xf400f0bc
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmp	0xf400f100
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmp	0xea00f170
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmp	0xea00f178
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmp	0xea00f1f0
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmp	0x11000f1f8
	.byte 0x1f #bad opcode
	testb	%al, (%rax)
	addb	%al, (%rax)
	addb	%al, (%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE22__parse_decimal_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rdx, %r14
	movq	%rsi, %rbx
	cmpq	%r14, %rbx
	je	0x10000f25e
	movsbl	(%rbx), %esi
	cmpl	$48, %esi
	jne	0x10000f226
	xorl	%esi, %esi
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_charEc ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_char(char)
	incq	%rbx
	jmp	0x10000f25e
	movl	%esi, %eax
	addb	$-49, %al
	cmpb	$8, %al
	ja	0x10000f25e
	incq	%rbx
	addl	$-48, %esi
	cmpq	%r14, %rbx
	je	0x10000f26c
	nopl	(%rax)
	movsbl	(%rbx), %eax
	movl	%eax, %ecx
	addb	$-48, %cl
	cmpb	$9, %cl
	ja	0x10000f269
	leal	(%rsi,%rsi,4), %ecx
	incq	%rbx
	leal	-48(%rax,%rcx,2), %esi
	cmpq	%rbx, %r14
	jne	0x10000f240
	jmp	0x10000f26c
	movq	%rbx, %r14
	movq	%r14, %rax
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	movq	%rbx, %r14
	cmpl	28(%rdi), %esi
	ja	0x10000f278
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE15__push_back_refEi ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_back_ref(int)
	jmp	0x10000f261
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$4, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	130607(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	130472(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE30__parse_character_class_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %rbx
	cmpq	%rdx, %rbx
	je	0x10000f508
	movsbl	(%rbx), %eax
	addl	$-68, %eax
	cmpl	$51, %eax
	ja	0x10000f508
	leaq	560(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
	movl	$1, %esi
	jmp	0x10000f35b
	movl	$1, %esi
	jmp	0x10000f309
	xorl	%esi, %esi
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE21__start_matching_listEb ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__start_matching_list(bool)
	movq	%rax, %r14
	orb	$5, 161(%r14)
	cmpb	$0, 169(%r14)
	je	0x10000f37f
	movq	24(%r14), %rdi
	movq	(%rdi), %rax
	movl	$95, %esi
	callq	*40(%rax)
	movl	%eax, %esi
	movq	48(%r14), %r13
	movq	56(%r14), %r12
	cmpq	%r12, %r13
	jae	0x10000f3eb
	movb	%sil, (%r13)
	incq	48(%r14)
	jmp	0x10000f505
	movl	$1, %esi
	jmp	0x10000f36e
	xorl	%esi, %esi
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE21__start_matching_listEb ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__start_matching_list(bool)
	orb	$4, 161(%rax)
	jmp	0x10000f505
	xorl	%esi, %esi
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE21__start_matching_listEb ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__start_matching_list(bool)
	orb	$64, 161(%rax)
	jmp	0x10000f505
	movq	%r14, %rdi
	addq	$40, %rdi
	cmpb	$0, 170(%r14)
	movq	48(%r14), %r12
	movq	56(%r14), %r15
	je	0x10000f48d
	cmpq	%r15, %r12
	jb	0x10000f496
	movq	(%rdi), %rdx
	subq	%rdx, %r12
	movq	%r12, %rax
	incq	%rax
	js	0x10000f51a
	subq	%rdx, %r15
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %r15
	jae	0x10000f4a1
	addq	%r15, %r15
	cmpq	%rax, %r15
	cmovbq	%rax, %r15
	testq	%r15, %r15
	jne	0x10000f4ab
	xorl	%r15d, %r15d
	xorl	%r13d, %r13d
	jmp	0x10000f4bc
	movq	%r14, %rdi
	addq	$40, %rdi
	movq	(%rdi), %rdx
	subq	%rdx, %r13
	movq	%r13, %rax
	incq	%rax
	js	0x10000f51a
	subq	%rdx, %r12
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %r12
	movq	%rdx, -48(%rbp)
	jae	0x10000f431
	addq	%r12, %r12
	cmpq	%rax, %r12
	cmovbq	%rax, %r12
	testq	%r12, %r12
	jne	0x10000f43b
	xorl	%r12d, %r12d
	xorl	%r15d, %r15d
	jmp	0x10000f450
	movabsq	$9223372036854775807, %r12
	movq	%r12, %rdi
	movl	%esi, %r15d
	callq	0x100029746 ## symbol stub for: __Znwm
	movl	%r15d, %esi
	movq	-48(%rbp), %rdx
	movq	%rax, %r15
	addq	%r15, %r12
	movb	%sil, (%r15,%r13)
	leaq	1(%r15,%r13), %rax
	testq	%r13, %r13
	jle	0x10000f47a
	movq	%r15, %rdi
	movq	-48(%rbp), %rsi
	movq	%r13, %rdx
	movq	%rax, %r13
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r13, %rax
	movq	-48(%rbp), %rdx
	movq	%r15, 40(%r14)
	movq	%rax, 48(%r14)
	movq	%r12, 56(%r14)
	testq	%rdx, %rdx
	jne	0x10000f4fd
	jmp	0x10000f505
	cmpq	%r15, %r12
	je	0x10000f3a5
	movb	$95, (%r12)
	incq	48(%r14)
	jmp	0x10000f505
	movabsq	$9223372036854775807, %r15
	movq	%r15, %rdi
	movq	%rdx, %r13
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%r13, %rdx
	movq	%rax, %r13
	addq	%r13, %r15
	movb	$95, (%r13,%r12)
	leaq	1(%r13,%r12), %rax
	testq	%r12, %r12
	jle	0x10000f4ec
	movq	%r13, %rdi
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rsi
	movq	%r12, %rdx
	movq	%rax, %r12
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r12, %rax
	movq	-48(%rbp), %rdx
	movq	%r13, 40(%r14)
	movq	%rax, 48(%r14)
	movq	%r15, 56(%r14)
	testq	%rdx, %rdx
	je	0x10000f505
	movq	%rdx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	incq	%rbx
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	nop
	fscale
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f528
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f530
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f538
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f540
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f548
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f550
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f558
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	(%rdx)
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f564
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe100f56c
	std
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f574
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f57c
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f584
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f58c
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f594
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f59c
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	cmpl	%edi, %esi
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f5a8
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f5b0
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f5b8
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f5c0
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f5c8
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f5d0
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe900f5d8
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	-1(%rsi,%rdi,8)
	.byte 0xff #bad opcode
	callq	0xe900f5e4
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	0xe800f5ec
	std
	.byte 0xff #bad opcode
	callq	*72(%rbp)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE24__parse_character_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rsi, %r14
	cmpq	%rdx, %r14
	je	0x10000f8cb
	movsbl	(%r14), %esi
	leal	-48(%rsi), %eax
	cmpl	$72, %eax
	ja	0x10000f745
	leaq	990(%rip), %rbx
	movslq	(%rbx,%rax,4), %rax
	addq	%rbx, %rax
	jmpq	*%rax
	xorl	%esi, %esi
	testq	%rcx, %rcx
	jne	0x10000f738
	jmp	0x10000f8c3
	movl	$12, %esi
	testq	%rcx, %rcx
	jne	0x10000f738
	jmp	0x10000f8c3
	movl	$9, %esi
	testq	%rcx, %rcx
	jne	0x10000f738
	jmp	0x10000f8c3
	leaq	1(%r14), %rax
	cmpq	%rdx, %rax
	je	0x10000f968
	movsbl	(%rax), %eax
	cmpl	$65, %eax
	jl	0x10000f8d3
	cmpb	$91, %al
	jl	0x10000f684
	movl	%eax, %edx
	addb	$-97, %dl
	cmpb	$25, %dl
	ja	0x10000f8d3
	movl	%eax, %edx
	sarl	$31, %edx
	shrl	$27, %edx
	addl	%eax, %edx
	andl	$224, %edx
	subl	%edx, %eax
	movsbl	%al, %esi
	testq	%rcx, %rcx
	je	0x10000f8b8
	movq	%rcx, %rdi
	callq	0x10002961a ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSEc
	jmp	0x10000f8bd
	leaq	1(%r14), %rax
	cmpq	%rdx, %rax
	je	0x10000f984
	movzbl	(%rax), %eax
	movl	%eax, %esi
	andl	$248, %esi
	cmpl	$48, %esi
	je	0x10000f775
	movl	%eax, %esi
	andl	$254, %esi
	cmpl	$56, %esi
	je	0x10000f775
	orb	$32, %al
	addb	$-97, %al
	cmpb	$6, %al
	jb	0x10000f77d
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$3, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000f9ba
	movl	$10, %esi
	testq	%rcx, %rcx
	jne	0x10000f738
	jmp	0x10000f8c3
	movl	$13, %esi
	testq	%rcx, %rcx
	jne	0x10000f738
	jmp	0x10000f8c3
	movl	$11, %esi
	testq	%rcx, %rcx
	je	0x10000f8c3
	movq	%rcx, %rdi
	callq	0x10002961a ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSEc
	jmp	0x10000f8c8
	movslq	%esi, %rax
	cmpb	$95, %al
	je	0x10000f94c
	testb	%al, %al
	js	0x10000f767
	movq	8(%rdi), %rdx
	movq	16(%rdx), %rdx
	testb	$5, 1(%rdx,%rax,4)
	jne	0x10000f94c
	testq	%rcx, %rcx
	je	0x10000f8c3
	movq	%rcx, %rdi
	jmp	0x10000f73b
	cmpb	$47, %al
	je	0x10000f6ed
	addq	$2, %r14
	cmpq	%rdx, %r14
	je	0x10000f9a0
	movzbl	(%r14), %eax
	movl	%eax, %esi
	andl	$248, %esi
	cmpl	$48, %esi
	je	0x10000f7cf
	movl	%eax, %esi
	andl	$254, %esi
	cmpl	$56, %esi
	je	0x10000f7cf
	orb	$32, %al
	addb	$-97, %al
	cmpb	$6, %al
	jb	0x10000f7d3
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$3, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000f9ba
	cmpb	$47, %al
	je	0x10000f7b0
	leaq	1(%r14), %rax
	cmpq	%rdx, %rax
	je	0x10000f8f2
	movzbl	(%rax), %eax
	movl	%eax, %esi
	andl	$248, %esi
	cmpl	$48, %esi
	je	0x10000f83b
	movl	%eax, %esi
	andl	$254, %esi
	cmpl	$56, %esi
	je	0x10000f83b
	orb	$32, %al
	movl	%eax, %ebx
	addb	$-97, %bl
	cmpb	$5, %bl
	ja	0x10000f911
	movzbl	%al, %eax
	addl	$-87, %eax
	leaq	2(%r14), %rsi
	cmpq	%rdx, %rsi
	jne	0x10000f850
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$3, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000f9ba
	addl	$-48, %eax
	cmpl	$-1, %eax
	je	0x10000f911
	leaq	2(%r14), %rsi
	cmpq	%rdx, %rsi
	je	0x10000f81c
	movzbl	(%rsi), %edx
	movl	%edx, %esi
	andl	$248, %esi
	cmpl	$48, %esi
	je	0x10000f886
	movl	%edx, %esi
	andl	$254, %esi
	cmpl	$56, %esi
	je	0x10000f886
	orb	$32, %dl
	movl	%edx, %ebx
	addb	$-97, %bl
	cmpb	$5, %bl
	ja	0x10000f930
	movzbl	%dl, %edx
	addl	$-87, %edx
	jmp	0x10000f892
	addl	$-48, %edx
	cmpl	$-1, %edx
	je	0x10000f930
	shll	$4, %eax
	addl	%edx, %eax
	movsbl	%al, %esi
	testq	%rcx, %rcx
	je	0x10000f8ad
	movq	%rcx, %rdi
	callq	0x10002961a ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSEc
	addq	$3, %r14
	jmp	0x10000f8cb
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_charEc ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_char(char)
	addq	$3, %r14
	jmp	0x10000f8cb
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_charEc ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_char(char)
	addq	$2, %r14
	jmp	0x10000f8cb
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_charEc ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_char(char)
	incq	%r14
	movq	%r14, %rax
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$3, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000f9ba
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$3, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000f9ba
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$3, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000f9ba
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$3, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000f9ba
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$3, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000f9ba
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$3, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000f9ba
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$3, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10000f9ba
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$3, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	128775(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	128640(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	jmp	0x10000f9e4
	jmp	0x10000f9e4
	jmp	0x10000f9e4
	jmp	0x10000f9e4
	jmp	0x10000f9e4
	jmp	0x10000f9e4
	jmp	0x10000f9e4
	jmp	0x10000f9e4
	jmp	0x10000f9e4
	jmp	0x10000f9e4
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nop
	subl	%esp, %edi
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	jmpq	*-4(%rcx)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	cmpl	%esp, %edi
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	callq	*-45219841(,%rdi,8)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	jmpq	*(%rbx)
	std
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	decl	-4(%rsi)
	.byte 0xff #bad opcode
	pushq	855638012(%rdi)
	std
	.byte 0xff #bad opcode
	decl	-3(%rbp)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xdb #bad opcode
	std
	.byte 0xff #bad opcode
	decl	(%rdi)
	.byte 0x1f #bad opcode
	addb	%dl, 72(%rbp)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_charEc:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movl	%esi, %r14d
	movq	%rdi, %rbx
	movl	24(%rbx), %eax
	testb	$1, %al
	jne	0x10000fb77
	testb	$8, %al
	jne	0x10000fbdb
	movl	$24, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r15
	movq	56(%rbx), %rax
	addq	$56, %rbx
	movq	8(%rax), %rax
	movq	%rax, 8(%r15)
	movq	128476(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%r15)
	movq	%r15, %rax
	addq	$16, %rax
	jmp	0x10000fc2c
	movl	$48, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r15
	movq	56(%rbx), %rax
	movq	8(%rax), %rax
	movq	%rax, 8(%r15)
	movq	128521(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%r15)
	leaq	16(%r15), %r12
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	0x1000296e0 ## symbol stub for: __ZNSt3__16localeC1ERKS0_
	movq	8(%rbx), %rax
	movq	16(%rbx), %rcx
	movq	%rcx, 32(%r15)
	movq	%rax, 24(%r15)
	movq	8(%rbx), %rdi
	movq	(%rdi), %rax
	movsbl	%r14b, %esi
	callq	*40(%rax)
	movb	%al, %r14b
	addq	$56, %rbx
	movq	%r15, %rax
	addq	$40, %rax
	jmp	0x10000fc2c
	movl	$48, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r15
	leaq	56(%rbx), %r12
	movq	56(%rbx), %rax
	movq	8(%rax), %rax
	movq	%rax, 8(%r15)
	movq	128449(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%r15)
	leaq	16(%r15), %rdi
	movq	%rbx, %rsi
	callq	0x1000296e0 ## symbol stub for: __ZNSt3__16localeC1ERKS0_
	movq	8(%rbx), %rax
	movq	16(%rbx), %rcx
	movq	%rcx, 32(%r15)
	movq	%rax, 24(%r15)
	movq	%r15, %rax
	addq	$40, %rax
	movq	%r12, %rbx
	movb	%r14b, (%rax)
	movq	(%rbx), %rax
	movq	%r15, 8(%rax)
	movq	(%rbx), %rax
	movq	8(%rax), %rax
	movq	%rax, (%rbx)
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	movq	%r12, %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	128293(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%r15)
	movq	8(%r15), %rdi
	testq	%rdi, %rdi
	je	0x10000fc71
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	%r15, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE15__push_back_refEi:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movl	%esi, %r14d
	movq	%rdi, %r15
	movl	24(%r15), %eax
	testb	$1, %al
	jne	0x10000fce4
	testb	$8, %al
	jne	0x10000fd0a
	movl	$24, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	56(%r15), %rax
	addq	$56, %r15
	movq	8(%rax), %rax
	movq	%rax, 8(%rbx)
	movq	128055(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	%rbx, %rax
	addq	$16, %rax
	movq	%r15, %r12
	jmp	0x10000fd58
	movl	$48, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	leaq	56(%r15), %r12
	movq	56(%r15), %rax
	movq	8(%rax), %rax
	movq	%rax, 8(%rbx)
	movq	128112(%rip), %rax
	jmp	0x10000fd2e
	movl	$48, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	leaq	56(%r15), %r12
	movq	56(%r15), %rax
	movq	8(%rax), %rax
	movq	%rax, 8(%rbx)
	movq	128106(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	leaq	16(%rbx), %rdi
	movq	%r15, %rsi
	callq	0x1000296e0 ## symbol stub for: __ZNSt3__16localeC1ERKS0_
	movq	8(%r15), %rax
	movq	16(%r15), %rcx
	movq	%rcx, 32(%rbx)
	movq	%rax, 24(%rbx)
	movq	%rbx, %rax
	addq	$40, %rax
	movl	%r14d, (%rax)
	movq	(%r12), %rax
	movq	%rbx, 8(%rax)
	movq	(%r12), %rax
	movq	8(%rax), %rax
	movq	%rax, (%r12)
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZNSt3__118__match_char_icaseIcNS_12regex_traitsIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	128016(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	leaq	16(%rbx), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	127961(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000fdc3
	movq	(%rdi), %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmpq	*8(%rax)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nopw	(%rax,%rax)
__ZNSt3__118__match_char_icaseIcNS_12regex_traitsIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	127936(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	leaq	16(%rbx), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	127881(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000fe0d
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopl	(%rax,%rax)
__ZNKSt3__118__match_char_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	16(%rbx), %rax
	cmpq	24(%rbx), %rax
	je	0x10000fe5a
	movq	24(%r14), %rdi
	movq	(%rdi), %rcx
	movsbl	(%rax), %esi
	callq	*40(%rcx)
	cmpb	40(%r14), %al
	jne	0x10000fe5a
	movl	$4294966301, (%rbx)
	incq	16(%rbx)
	movq	8(%r14), %rax
	jmp	0x10000fe62
	movl	$4294966303, (%rbx)
	xorl	%eax, %eax
	movq	%rax, 80(%rbx)
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZNSt3__120__match_char_collateIcNS_12regex_traitsIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	127808(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	leaq	16(%rbx), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	127721(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000feb3
	movq	(%rdi), %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmpq	*8(%rax)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nopw	(%rax,%rax)
__ZNSt3__120__match_char_collateIcNS_12regex_traitsIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	127728(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	leaq	16(%rbx), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	127641(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000fefd
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopl	(%rax,%rax)
__ZNKSt3__120__match_char_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	16(%rsi), %rax
	cmpq	24(%rsi), %rax
	je	0x10000ff3c
	movb	(%rax), %cl
	cmpb	40(%rdi), %cl
	jne	0x10000ff3c
	movl	$4294966301, (%rsi)
	incq	%rax
	movq	%rax, 16(%rsi)
	movq	8(%rdi), %rax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	movl	$4294966303, (%rsi)
	xorl	%eax, %eax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	nopw	(%rax,%rax)
__ZNKSt3__112__match_charIcE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	16(%rsi), %rax
	cmpq	24(%rsi), %rax
	je	0x10000ff7c
	movb	(%rax), %cl
	cmpb	16(%rdi), %cl
	jne	0x10000ff7c
	movl	$4294966301, (%rsi)
	incq	%rax
	movq	%rax, 16(%rsi)
	movq	8(%rdi), %rax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	movl	$4294966303, (%rsi)
	xorl	%eax, %eax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	nopw	(%rax,%rax)
__ZNSt3__116__back_ref_icaseIcNS_12regex_traitsIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	127448(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	leaq	16(%rbx), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	127433(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10000ffd3
	movq	(%rdi), %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmpq	*8(%rax)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nopw	(%rax,%rax)
__ZNSt3__116__back_ref_icaseIcNS_12regex_traitsIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	127368(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	leaq	16(%rbx), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	127353(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10001001d
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopl	(%rax,%rax)
__ZNKSt3__116__back_ref_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r14
	movq	%rdi, %r15
	movl	40(%r15), %ecx
	decl	%ecx
	movq	32(%r14), %rax
	leaq	(%rcx,%rcx,2), %rcx
	cmpb	$0, 16(%rax,%rcx,8)
	je	0x1000100e1
	leaq	(%rax,%rcx,8), %rdx
	movq	8(%rax,%rcx,8), %r12
	movq	%rdx, -48(%rbp)
	movq	(%rdx), %rax
	subq	%rax, %r12
	movq	16(%r14), %rcx
	movq	24(%r14), %rdx
	subq	%rcx, %rdx
	cmpq	%r12, %rdx
	jl	0x1000100e1
	testq	%r12, %r12
	jle	0x1000100cd
	movl	$1, %r13d
	jmp	0x10001009a
	nopl	(%rax)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	incq	%r13
	movq	24(%r15), %rdi
	movq	(%rdi), %rcx
	movsbl	-1(%rax,%r13), %esi
	callq	*40(%rcx)
	movl	%eax, %ebx
	movq	16(%r14), %rax
	movq	24(%r15), %rdi
	movq	(%rdi), %rcx
	movsbl	-1(%rax,%r13), %esi
	callq	*40(%rcx)
	cmpb	%al, %bl
	jne	0x1000100e1
	cmpq	%r12, %r13
	jl	0x100010090
	movq	16(%r14), %rcx
	movl	$4294966302, (%r14)
	addq	%r12, %rcx
	movq	%rcx, 16(%r14)
	movq	8(%r15), %rax
	jmp	0x1000100ea
	movl	$4294966303, (%r14)
	xorl	%eax, %eax
	movq	%rax, 80(%r14)
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopl	(%rax)
__ZNSt3__118__back_ref_collateIcNS_12regex_traitsIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	127112(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	leaq	16(%rbx), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	127065(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100010143
	movq	(%rdi), %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmpq	*8(%rax)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nopw	(%rax,%rax)
__ZNSt3__118__back_ref_collateIcNS_12regex_traitsIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	127032(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	leaq	16(%rbx), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	126985(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10001018d
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopl	(%rax,%rax)
__ZNKSt3__118__back_ref_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	40(%rdi), %ecx
	decl	%ecx
	movq	32(%rsi), %rax
	leaq	(%rcx,%rcx,2), %rcx
	cmpb	$0, 16(%rax,%rcx,8)
	je	0x10001020a
	movq	(%rax,%rcx,8), %r8
	movq	8(%rax,%rcx,8), %rax
	subq	%r8, %rax
	movq	16(%rsi), %r9
	movq	24(%rsi), %rdx
	subq	%r9, %rdx
	cmpq	%rax, %rdx
	jl	0x10001020a
	testq	%rax, %rax
	jle	0x1000101f3
	xorl	%edx, %edx
	nopl	(%rax,%rax)
	movzbl	(%r8,%rdx), %ecx
	cmpb	(%r9,%rdx), %cl
	jne	0x10001020a
	incq	%rdx
	cmpq	%rax, %rdx
	jl	0x1000101e0
	movl	$4294966302, (%rsi)
	addq	%rax, %r9
	movq	%r9, 16(%rsi)
	movq	8(%rdi), %rax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	movl	$4294966303, (%rsi)
	xorl	%eax, %eax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZNKSt3__110__back_refIcE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movl	16(%rdi), %ecx
	movq	32(%rsi), %rax
	movq	40(%rsi), %rdx
	subq	%rax, %rdx
	sarq	$3, %rdx
	movabsq	$-6148914691236517205, %rbx
	imulq	%rdx, %rbx
	cmpq	%rcx, %rbx
	jb	0x1000102b6
	decl	%ecx
	leaq	(%rcx,%rcx,2), %rcx
	cmpb	$0, 16(%rax,%rcx,8)
	je	0x1000102a5
	movq	(%rax,%rcx,8), %rdx
	movq	8(%rax,%rcx,8), %rax
	movq	%rax, %r9
	subq	%rdx, %r9
	movq	16(%rsi), %r8
	movq	24(%rsi), %rcx
	subq	%r8, %rcx
	cmpq	%r9, %rcx
	jl	0x1000102a5
	cmpq	%rax, %rdx
	je	0x100010292
	movq	%r8, %rcx
	movzbl	(%rdx), %ebx
	cmpb	(%rcx), %bl
	jne	0x1000102a5
	incq	%rdx
	incq	%rcx
	cmpq	%rdx, %rax
	jne	0x100010280
	movl	$4294966302, (%rsi)
	addq	%r9, %r8
	movq	%r8, 16(%rsi)
	movq	8(%rdi), %rax
	jmp	0x1000102ad
	movl	$4294966303, (%rsi)
	xorl	%eax, %eax
	movq	%rax, 80(%rsi)
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$4, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	126449(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	126314(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE21__start_matching_listEb:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	movl	%esi, -48(%rbp)
	movq	%rdi, %r15
	movl	$176, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r13
	movq	56(%r15), %rax
	movq	8(%rax), %rax
	movb	24(%r15), %bl
	movl	%ebx, %r14d
	andb	$1, %r14b
	shrb	$3, %bl
	andb	$1, %bl
	movq	%rax, 8(%r13)
	movq	126576(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%r13)
	leaq	16(%r13), %r12
	movq	%r12, %rdi
	movq	%r15, %rsi
	callq	0x1000296e0 ## symbol stub for: __ZNSt3__16localeC1ERKS0_
	movq	8(%r15), %rax
	movq	16(%r15), %rcx
	movq	%rcx, 32(%r13)
	movq	%rax, 24(%r13)
	movq	$0, 160(%r13)
	movq	$0, 152(%r13)
	movq	$0, 144(%r13)
	movq	$0, 136(%r13)
	movq	$0, 128(%r13)
	movq	$0, 120(%r13)
	movq	$0, 112(%r13)
	movq	$0, 104(%r13)
	movq	$0, 96(%r13)
	movq	$0, 88(%r13)
	movq	$0, 80(%r13)
	movq	$0, 72(%r13)
	movq	$0, 64(%r13)
	movq	$0, 56(%r13)
	movq	$0, 48(%r13)
	movq	$0, 40(%r13)
	movl	-48(%rbp), %eax
	movb	%al, 168(%r13)
	movb	%r14b, 169(%r13)
	movb	%bl, 170(%r13)
	movq	%r12, %rbx
	leaq	40(%r13), %r14
	leaq	-56(%rbp), %r12
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	0x1000296e0 ## symbol stub for: __ZNSt3__16localeC1ERKS0_
	leaq	-88(%rbp), %rdi
	movq	%r12, %rsi
	callq	0x1000295ae ## symbol stub for: __ZNKSt3__16locale4nameEv
	movzbl	-88(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	-80(%rbp), %rcx
	movb	$1, %bl
	cmpq	$1, %rcx
	jne	0x100010478
	leaq	121762(%rip), %rcx ## literal pool for: "C"
	leaq	-88(%rbp), %rdi
	xorl	%esi, %esi
	movq	$-1, %rdx
	movl	$1, %r8d
	callq	0x100029596 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
	testl	%eax, %eax
	setne	%bl
	movb	-88(%rbp), %al
	testb	$1, %al
	je	0x100010485
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-56(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movb	%bl, 171(%r13)
	movq	56(%r15), %rax
	movq	%r13, 8(%rax)
	movq	%r13, 56(%r15)
	movq	%r13, %rax
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rbx, -64(%rbp)
	movq	%rax, -48(%rbp)
	leaq	-56(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	136(%r13), %r12
	testq	%r12, %r12
	je	0x100010517
	movq	144(%r13), %rax
	cmpq	%r12, %rax
	je	0x100010508
	leaq	-24(%rax), %rbx
	testb	$1, -24(%rax)
	je	0x1000104f7
	movq	-8(%rax), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r12
	movq	%rbx, %rax
	jne	0x1000104e4
	movq	136(%r13), %rdi
	jmp	0x10001050b
	movq	%r12, %rdi
	movq	%r12, 144(%r13)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	112(%r13), %rdi
	testq	%rdi, %rdi
	je	0x100010529
	movq	%rdi, 120(%r13)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	88(%r13), %r12
	testq	%r12, %r12
	je	0x100010591
	movq	96(%r13), %rbx
	cmpq	%r12, %rbx
	je	0x1000105ec
	nop
	testb	$1, -24(%rbx)
	jne	0x100010560
	leaq	-48(%rbx), %r15
	testb	$1, -48(%rbx)
	jne	0x100010573
	cmpq	%r15, %r12
	movq	%r15, %rbx
	jne	0x100010540
	jmp	0x100010584
	nopw	(%rax,%rax)
	movq	-8(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-48(%rbx), %r15
	testb	$1, -48(%rbx)
	je	0x100010550
	movq	-32(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%r15, %r12
	movq	%r15, %rbx
	jne	0x100010540
	movq	88(%r13), %rdi
	movq	%r12, 96(%r13)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	64(%r13), %rdi
	testq	%rdi, %rdi
	je	0x1000105a3
	movq	%rdi, 72(%r13)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	(%r14), %rdi
	testq	%rdi, %rdi
	je	0x1000105b4
	movq	%rdi, 48(%r13)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-64(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	125884(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%r13)
	movq	8(%r13), %rdi
	testq	%rdi, %rdi
	je	0x1000105db
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	%r13, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-48(%rbp), %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%r12, %rdi
	jmp	0x100010588
	nopw	%cs:(%rax,%rax)
__ZNSt3__120__bracket_expressionIcNS_12regex_traitsIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZNSt3__120__bracket_expressionIcNS_12regex_traitsIcEEED2Ev ## std::__1::__bracket_expression<char, std::__1::regex_traits<char> >::~__bracket_expression()
	nopw	(%rax,%rax)
__ZNSt3__120__bracket_expressionIcNS_12regex_traitsIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	callq	__ZNSt3__120__bracket_expressionIcNS_12regex_traitsIcEEED2Ev ## std::__1::__bracket_expression<char, std::__1::regex_traits<char> >::~__bracket_expression()
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopl	(%rax)
__ZNKSt3__120__bracket_expressionIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$120, %rsp
	movq	%rsi, %r15
	movq	%rdi, %r14
	movq	16(%r15), %rax
	movq	24(%r15), %rcx
	cmpq	%rcx, %rax
	je	0x1000106a5
	cmpb	$0, 171(%r14)
	je	0x10001070b
	leaq	1(%rax), %rdx
	cmpq	%rcx, %rdx
	je	0x10001070b
	movb	(%rax), %cl
	movb	%cl, -48(%rbp)
	movb	1(%rax), %bl
	movb	%bl, -47(%rbp)
	cmpb	$0, 169(%r14)
	je	0x1000106c9
	movq	24(%r14), %rdi
	movq	(%rdi), %rax
	movsbl	%cl, %esi
	callq	*40(%rax)
	movb	%al, -48(%rbp)
	movq	24(%r14), %rdi
	movq	(%rdi), %rax
	movsbl	%bl, %esi
	callq	*40(%rax)
	movl	%eax, %ebx
	jmp	0x1000106d6
	movb	168(%r14), %r13b
	xorl	%eax, %eax
	cmpb	168(%r14), %r13b
	jne	0x100010e5b
	movl	$4294966303, (%r15)
	xorl	%eax, %eax
	jmp	0x100010e6a
	cmpb	$0, 170(%r14)
	je	0x1000106d9
	movb	%cl, -48(%rbp)
	movb	%bl, -47(%rbp)
	leaq	16(%r14), %r12
	leaq	-46(%rbp), %rcx
	leaq	-96(%rbp), %rdi
	leaq	-48(%rbp), %rdx
	xorl	%r8d, %r8d
	movq	%r12, %rsi
	callq	__ZNKSt3__112regex_traitsIcE20__lookup_collatenameIPcEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEET_SA_c ## std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::regex_traits<char>::__lookup_collatename<char*>(char*, char*, char) const
	movb	-96(%rbp), %al
	testb	$1, %al
	jne	0x100010821
	cmpb	$2, %al
	jae	0x100010838
	movq	16(%r15), %rax
	movb	(%rax), %al
	movb	%al, -48(%rbp)
	cmpb	$0, 169(%r14)
	je	0x100010729
	movq	24(%r14), %rdi
	movq	(%rdi), %rcx
	movsbl	%al, %esi
	callq	*40(%rcx)
	jmp	0x100010733
	cmpb	$0, 170(%r14)
	je	0x100010736
	movb	%al, -48(%rbp)
	movq	40(%r14), %rcx
	movq	48(%r14), %rdx
	subq	%rcx, %rdx
	je	0x10001075d
	xorl	%esi, %esi
	nopw	%cs:(%rax,%rax)
	cmpb	(%rcx,%rsi), %al
	je	0x10001077d
	incq	%rsi
	cmpq	%rdx, %rsi
	jb	0x100010750
	movq	64(%r14), %rcx
	movq	72(%r14), %rdx
	cmpq	%rdx, %rcx
	je	0x100010797
	subq	%rcx, %rdx
	xorl	%esi, %esi
	nop
	cmpb	(%rcx,%rsi), %al
	je	0x100010797
	incq	%rsi
	cmpq	%rdx, %rsi
	jb	0x100010770
	movb	$1, %r13b
	movl	$1, %eax
	cmpb	168(%r14), %r13b
	je	0x1000106bb
	jmp	0x100010e5b
	movq	%r14, %rbx
	movq	88(%rbx), %r14
	movq	96(%rbx), %rcx
	cmpq	%rcx, %r14
	movq	%rbx, -104(%rbp)
	je	0x10001091e
	leaq	88(%rbx), %rdx
	movq	%rdx, -72(%rbp)
	leaq	96(%rbx), %rdx
	movq	%rdx, -64(%rbp)
	cmpb	$0, 170(%rbx)
	je	0x100010a0c
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -96(%rbp)
	movq	$0, -80(%rbp)
	movb	$2, -96(%rbp)
	leaq	-95(%rbp), %rdx
	movb	%al, -95(%rbp)
	leaq	-94(%rbp), %rcx
	movb	$0, -94(%rbp)
	movq	32(%rbx), %rsi
	movq	(%rsi), %rax
	leaq	-144(%rbp), %rdi
	callq	*32(%rax)
	testb	$1, -96(%rbp)
	je	0x10001080e
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-64(%rbp), %rax
	movq	(%rax), %rcx
	movq	-72(%rbp), %rax
	movq	(%rax), %r14
	jmp	0x100010a32
	movq	-88(%rbp), %rbx
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	$0, %rbx
	je	0x100010707
	movq	112(%r14), %rax
	movq	120(%r14), %rcx
	subq	%rax, %rcx
	je	0x100010867
	movb	-48(%rbp), %dl
	movb	-47(%rbp), %bl
	sarq	%rcx
	xorl	%esi, %esi
	cmpb	(%rax,%rsi,2), %dl
	jne	0x10001085f
	cmpb	1(%rax,%rsi,2), %bl
	je	0x100010ebd
	incq	%rsi
	cmpq	%rcx, %rsi
	jb	0x100010850
	cmpb	$0, 170(%r14)
	je	0x10001093d
	movq	88(%r14), %rax
	cmpq	96(%r14), %rax
	je	0x10001093d
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -96(%rbp)
	movq	$0, -80(%rbp)
	movb	$4, -96(%rbp)
	leaq	-95(%rbp), %rdx
	movzwl	-48(%rbp), %eax
	movw	%ax, -95(%rbp)
	leaq	-93(%rbp), %rcx
	movb	$0, -93(%rbp)
	movq	32(%r14), %rsi
	movq	(%rsi), %rax
	leaq	-144(%rbp), %rdi
	callq	*32(%rax)
	testb	$1, -96(%rbp)
	je	0x1000108ca
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rax
	movq	88(%rax), %r14
	movq	%rax, -104(%rbp)
	movq	96(%rax), %rax
	subq	%r14, %rax
	movzbl	-144(%rbp), %edx
	movb	$1, %cl
	jne	0x100010ed4
	xorl	%r13d, %r13d
	testb	$1, %dl
	movq	-104(%rbp), %r14
	je	0x100010904
	movq	-128(%rbp), %rdi
	movl	%ecx, %ebx
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movl	%ebx, %ecx
	testb	%cl, %cl
	je	0x100011075
	movq	136(%r14), %rax
	cmpq	144(%r14), %rax
	jne	0x100010950
	jmp	0x100010995
	xorl	%r13d, %r13d
	movq	%rbx, %r14
	movq	136(%r14), %rax
	cmpq	144(%r14), %rax
	jne	0x100010c6d
	jmp	0x100010df1
	xorl	%r13d, %r13d
	movq	136(%r14), %rax
	cmpq	144(%r14), %rax
	je	0x100010995
	leaq	-96(%rbp), %rdi
	leaq	-48(%rbp), %rdx
	xorl	%r8d, %r8d
	movq	%r12, %rsi
	leaq	-46(%rbp), %rcx
	callq	__ZNKSt3__112regex_traitsIcE19__transform_primaryIPcEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEET_SA_c ## std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::regex_traits<char>::__transform_primary<char*>(char*, char*, char) const
	movq	136(%r14), %r12
	movq	144(%r14), %rdx
	subq	%r12, %rdx
	movzbl	-96(%rbp), %ecx
	movb	$1, %bl
	jne	0x100010b70
	testb	$1, %cl
	jne	0x100011064
	testb	%bl, %bl
	je	0x100011075
	movl	%r13d, %ebx
	movsbq	-48(%rbp), %rax
	testq	%rax, %rax
	js	0x100010e7d
	movl	160(%r14), %ecx
	movq	24(%r14), %rdx
	movq	16(%rdx), %rsi
	movl	(%rsi,%rax,4), %edx
	testl	%ecx, %edx
	jne	0x1000109c4
	cmpb	$95, %al
	jne	0x1000109e8
	testb	%cl, %cl
	jns	0x1000109e8
	movsbq	-47(%rbp), %rdi
	testq	%rdi, %rdi
	js	0x1000109e8
	movb	$1, %r13b
	testl	%ecx, (%rsi,%rdi,4)
	jne	0x100010ea9
	testb	%cl, %cl
	jns	0x1000109e8
	cmpb	$95, %dil
	je	0x100010ea9
	movl	164(%r14), %ecx
	testl	%ecx, %edx
	jne	0x100010ea6
	cmpb	$95, %al
	jne	0x100010e84
	testb	%cl, %cl
	js	0x100010ea6
	jmp	0x100010e84
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -144(%rbp)
	movq	$0, -128(%rbp)
	movb	$2, -144(%rbp)
	movb	%al, -143(%rbp)
	movb	$0, -142(%rbp)
	cmpq	%r14, %rcx
	movzbl	-144(%rbp), %ecx
	movb	$1, %al
	jne	0x100010a55
	xorl	%r13d, %r13d
	testb	$1, %cl
	movq	-104(%rbp), %r14
	jne	0x100010c44
	jmp	0x100010c51
	movq	%r15, -56(%rbp)
	movq	%rcx, %r13
	shrq	%r13
	movq	%rcx, -152(%rbp)
	movl	%ecx, %eax
	andb	$1, %al
	cmovneq	-136(%rbp), %r13
	testb	%al, %al
	leaq	-143(%rbp), %rax
	cmovneq	-128(%rbp), %rax
	movq	%rax, -112(%rbp)
	addq	$25, %r14
	xorl	%r15d, %r15d
	movabsq	$-6148914691236517205, %rbx
	nopw	%cs:(%rax,%rax)
	movzbl	-25(%r14), %eax
	movq	%rax, %r12
	shrq	%r12
	testb	$1, %al
	cmovneq	-17(%r14), %r12
	cmpq	%r12, %r13
	movq	%r12, %rdx
	ja	0x100010abd
	movq	%r13, %rdx
	testq	%rdx, %rdx
	je	0x100010ae0
	leaq	-24(%r14), %rsi
	testb	$1, %al
	cmovneq	-9(%r14), %rsi
	movq	-112(%rbp), %rdi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x100010ae0
	jns	0x100010ae5
	jmp	0x100010b3c
	nop
	cmpq	%r12, %r13
	jb	0x100010b3c
	movq	%rbx, %r12
	movzbl	-1(%r14), %eax
	movq	%rax, %rbx
	shrq	%rbx
	testb	$1, %al
	cmovneq	7(%r14), %rbx
	cmpq	%r13, %rbx
	movq	%r13, %rdx
	ja	0x100010b05
	movq	%rbx, %rdx
	testq	%rdx, %rdx
	je	0x100010b30
	testb	$1, %al
	movq	15(%r14), %rdi
	cmoveq	%r14, %rdi
	movq	-112(%rbp), %rsi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x100010b30
	testl	%eax, %eax
	movq	%r12, %rbx
	js	0x100010b3c
	jmp	0x100010c2b
	nopl	(%rax)
	cmpq	%r13, %rbx
	movq	%r12, %rbx
	jae	0x100010c2b
	incq	%r15
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	movq	-72(%rbp), %rcx
	subq	(%rcx), %rax
	sarq	$4, %rax
	imulq	%rbx, %rax
	addq	$48, %r14
	cmpq	%rax, %r15
	jb	0x100010aa0
	xorl	%r13d, %r13d
	movq	-56(%rbp), %r15
	movb	$1, %al
	jmp	0x100010c34
	movl	%r13d, %esi
	movq	%r14, -104(%rbp)
	movq	%r15, -56(%rbp)
	movq	%rcx, %rax
	shrq	%rax
	movq	%rcx, -72(%rbp)
	andb	$1, %cl
	movq	-88(%rbp), %r15
	cmoveq	%rax, %r15
	leaq	-95(%rbp), %r8
	movq	-80(%rbp), %r14
	cmoveq	%r8, %r14
	sarq	$3, %rdx
	movabsq	$-6148914691236517205, %r13
	imulq	%rdx, %r13
	testb	%cl, %cl
	jne	0x100010fdb
	movl	%esi, %r9d
	negq	%rax
	xorl	%edx, %edx
	movq	-104(%rbp), %r14
	leaq	(%rdx,%rdx,2), %rdi
	movzbl	(%r12,%rdi,8), %ecx
	movq	%rcx, %rsi
	shrq	%rsi
	testb	$1, %cl
	cmovneq	8(%r12,%rdi,8), %rsi
	cmpq	%rsi, %r15
	jne	0x100010c17
	testq	%r15, %r15
	je	0x10001104e
	leaq	(%r12,%rdi,8), %rsi
	incq	%rsi
	testb	$1, %cl
	cmovneq	16(%r12,%rdi,8), %rsi
	movq	%rax, %rdi
	movq	%r8, %rcx
	nop
	movzbl	(%rcx), %ebx
	cmpb	(%rsi), %bl
	jne	0x100010c17
	incq	%rcx
	incq	%rsi
	incq	%rdi
	jne	0x100010c00
	jmp	0x10001104e
	incq	%rdx
	cmpq	%r13, %rdx
	jb	0x100010bc2
	movq	-56(%rbp), %r15
	movl	%r9d, %r13d
	jmp	0x10001103d
	movb	$1, %r13b
	xorl	%eax, %eax
	movq	-56(%rbp), %r15
	movq	-152(%rbp), %rcx
	testb	$1, %cl
	movq	-104(%rbp), %r14
	je	0x100010c51
	movq	-128(%rbp), %rdi
	movl	%eax, %ebx
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movl	%ebx, %eax
	testb	%al, %al
	je	0x100010e49
	movq	136(%r14), %rax
	cmpq	144(%r14), %rax
	je	0x100010df1
	leaq	16(%r14), %rsi
	leaq	-47(%rbp), %rcx
	leaq	-96(%rbp), %rdi
	leaq	-48(%rbp), %rdx
	xorl	%r8d, %r8d
	callq	__ZNKSt3__112regex_traitsIcE19__transform_primaryIPcEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEET_SA_c ## std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::regex_traits<char>::__transform_primary<char*>(char*, char*, char) const
	movq	%r14, %rax
	movq	136(%rax), %r14
	movq	144(%rax), %rdx
	subq	%r14, %rdx
	movzbl	-96(%rbp), %ecx
	movb	$1, %bl
	jne	0x100010cbb
	testb	$1, %cl
	movq	-104(%rbp), %r14
	jne	0x100010de4
	testb	%bl, %bl
	jne	0x100010df1
	jmp	0x100010e49
	movq	%r15, -56(%rbp)
	movq	%rcx, %rax
	shrq	%rax
	movq	%rcx, -64(%rbp)
	andb	$1, %cl
	movq	-88(%rbp), %r15
	cmoveq	%rax, %r15
	leaq	-95(%rbp), %r8
	movq	-80(%rbp), %rsi
	cmoveq	%r8, %rsi
	movq	%rsi, -72(%rbp)
	sarq	$3, %rdx
	movabsq	$-6148914691236517205, %r12
	imulq	%rdx, %r12
	testb	%cl, %cl
	jne	0x100010d5e
	negq	%rax
	xorl	%edx, %edx
	leaq	(%rdx,%rdx,2), %rdi
	movzbl	(%r14,%rdi,8), %ecx
	movq	%rcx, %rsi
	shrq	%rsi
	testb	$1, %cl
	cmovneq	8(%r14,%rdi,8), %rsi
	cmpq	%rsi, %r15
	jne	0x100010d54
	testq	%r15, %r15
	je	0x100010dca
	leaq	(%r14,%rdi,8), %rsi
	incq	%rsi
	testb	$1, %cl
	cmovneq	16(%r14,%rdi,8), %rsi
	movq	%rax, %rdi
	movq	%r8, %rcx
	nopl	(%rax,%rax)
	movzbl	(%rcx), %ebx
	cmpb	(%rsi), %bl
	jne	0x100010d54
	incq	%rcx
	incq	%rsi
	incq	%rdi
	jne	0x100010d40
	jmp	0x100010dca
	incq	%rdx
	cmpq	%r12, %rdx
	jb	0x100010cff
	jmp	0x100010db1
	testq	%r15, %r15
	je	0x10001108c
	addq	$16, %r14
	xorl	%ebx, %ebx
	nopl	(%rax)
	movzbl	-16(%r14), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	-8(%r14), %rcx
	cmpq	%rcx, %r15
	jne	0x100010da5
	leaq	-15(%r14), %rsi
	testb	$1, %al
	cmovneq	(%r14), %rsi
	movq	-72(%rbp), %rdi
	movq	%r15, %rdx
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x1000110e7
	incq	%rbx
	addq	$24, %r14
	cmpq	%r12, %rbx
	jb	0x100010d70
	movq	-56(%rbp), %r15
	movq	-64(%rbp), %rcx
	movb	$1, %bl
	testb	$1, %cl
	movq	-104(%rbp), %r14
	je	0x100010cae
	jmp	0x100010de4
	xorl	%ebx, %ebx
	movb	$1, %r13b
	movq	-56(%rbp), %r15
	movq	-64(%rbp), %rcx
	testb	$1, %cl
	movq	-104(%rbp), %r14
	je	0x100010cae
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	%bl, %bl
	je	0x100010e49
	movl	%r13d, %eax
	movsbq	-48(%rbp), %rcx
	testq	%rcx, %rcx
	js	0x100010e1e
	movl	160(%r14), %edx
	movq	24(%r14), %rsi
	movq	16(%rsi), %rsi
	movb	$1, %r13b
	testl	%edx, (%rsi,%rcx,4)
	jne	0x100010e49
	cmpb	$95, %cl
	jne	0x100010e1e
	testb	%dl, %dl
	js	0x100010e49
	movl	164(%r14), %edx
	testl	%edx, %edx
	je	0x100010e46
	movb	$1, %r13b
	testb	%cl, %cl
	js	0x100010e49
	movq	24(%r14), %rsi
	movq	16(%rsi), %rsi
	testl	%edx, (%rsi,%rcx,4)
	jne	0x100010e46
	cmpb	$95, %cl
	jne	0x100010e49
	testb	%dl, %dl
	jns	0x100010e49
	movb	%al, %r13b
	movl	$1, %eax
	cmpb	168(%r14), %r13b
	je	0x1000106bb
	movl	$4294966301, (%r15)
	addq	%rax, 16(%r15)
	movq	8(%r14), %rax
	movq	%rax, 80(%r15)
	addq	$120, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movl	164(%r14), %ecx
	movsbq	-47(%rbp), %rax
	testq	%rax, %rax
	movb	$1, %r13b
	js	0x100010ea9
	movq	24(%r14), %rdx
	movq	16(%rdx), %rdx
	testl	%ecx, (%rdx,%rax,4)
	jne	0x100010ea6
	cmpb	$95, %al
	jne	0x100010ea9
	testb	%cl, %cl
	jns	0x100010ea9
	movb	%bl, %r13b
	movl	$2, %eax
	cmpb	168(%r14), %r13b
	je	0x1000106bb
	jmp	0x100010e5b
	movb	$1, %r13b
	movl	$2, %eax
	cmpb	168(%r14), %r13b
	je	0x1000106bb
	jmp	0x100010e5b
	movq	%r12, -64(%rbp)
	movq	%r15, -56(%rbp)
	movq	%rdx, %r12
	shrq	%r12
	movq	%rdx, -112(%rbp)
	movl	%edx, %ecx
	andb	$1, %cl
	cmovneq	-136(%rbp), %r12
	testb	%cl, %cl
	leaq	-143(%rbp), %rcx
	cmovneq	-128(%rbp), %rcx
	movq	%rcx, -72(%rbp)
	sarq	$4, %rax
	movabsq	$-6148914691236517205, %rbx
	imulq	%rax, %rbx
	addq	$25, %r14
	xorl	%r15d, %r15d
	nop
	movzbl	-25(%r14), %eax
	movq	%rax, %r13
	shrq	%r13
	testb	$1, %al
	cmovneq	-17(%r14), %r13
	cmpq	%r13, %r12
	movq	%r13, %rdx
	ja	0x100010f3d
	movq	%r12, %rdx
	testq	%rdx, %rdx
	je	0x100010f60
	leaq	-24(%r14), %rsi
	testb	$1, %al
	cmovneq	-9(%r14), %rsi
	movq	-72(%rbp), %rdi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x100010f60
	jns	0x100010f65
	jmp	0x100010fb9
	nop
	cmpq	%r13, %r12
	jb	0x100010fb9
	movq	%rbx, %r13
	movzbl	-1(%r14), %eax
	movq	%rax, %rbx
	shrq	%rbx
	testb	$1, %al
	cmovneq	7(%r14), %rbx
	cmpq	%r12, %rbx
	movq	%r12, %rdx
	ja	0x100010f85
	movq	%rbx, %rdx
	testq	%rdx, %rdx
	je	0x100010fad
	testb	$1, %al
	movq	15(%r14), %rdi
	cmoveq	%r14, %rdi
	movq	-72(%rbp), %rsi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x100010fad
	testl	%eax, %eax
	movq	%r13, %rbx
	js	0x100010fb9
	jmp	0x1000110c4
	cmpq	%r12, %rbx
	movq	%r13, %rbx
	jae	0x1000110c4
	incq	%r15
	addq	$48, %r14
	cmpq	%rbx, %r15
	jb	0x100010f20
	xorl	%r13d, %r13d
	movq	-56(%rbp), %r15
	movq	-64(%rbp), %r12
	movb	$1, %cl
	jmp	0x1000110d1
	testq	%r15, %r15
	je	0x1000110f1
	movl	%esi, -64(%rbp)
	addq	$16, %r12
	xorl	%ebx, %ebx
	movzbl	-16(%r12), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	-8(%r12), %rcx
	cmpq	%rcx, %r15
	jne	0x100011025
	leaq	-15(%r12), %rsi
	testb	$1, %al
	cmovneq	(%r12), %rsi
	movq	%r14, %rdi
	movq	%r15, %rdx
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x100011145
	incq	%rbx
	addq	$24, %r12
	cmpq	%r13, %rbx
	jb	0x100010fed
	movq	-56(%rbp), %r15
	movq	-104(%rbp), %r14
	movl	-64(%rbp), %r13d
	movq	-72(%rbp), %rcx
	movb	$1, %bl
	testb	$1, %cl
	je	0x10001098d
	jmp	0x100011064
	xorl	%ebx, %ebx
	movb	$1, %r13b
	movq	-56(%rbp), %r15
	movq	-72(%rbp), %rcx
	testb	$1, %cl
	je	0x10001098d
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	%bl, %bl
	jne	0x100010995
	movl	$2, %eax
	cmpb	168(%r14), %r13b
	je	0x1000106bb
	jmp	0x100010e5b
	addq	$8, %r14
	xorl	%eax, %eax
	movq	-56(%rbp), %r15
	movzbl	-8(%r14), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	testb	$1, %cl
	cmovneq	(%r14), %rdx
	testq	%rdx, %rdx
	je	0x10001113b
	incq	%rax
	addq	$24, %r14
	cmpq	%r12, %rax
	jb	0x100011096
	movb	$1, %bl
	jmp	0x100010dd3
	movb	$1, %r13b
	xorl	%ecx, %ecx
	movq	-56(%rbp), %r15
	movq	-64(%rbp), %r12
	movq	-112(%rbp), %rdx
	testb	$1, %dl
	movq	-104(%rbp), %r14
	jne	0x1000108f7
	jmp	0x100010904
	movb	$1, %r13b
	xorl	%ebx, %ebx
	jmp	0x100010dcf
	addq	$8, %r12
	xorl	%eax, %eax
	movq	-56(%rbp), %r15
	movq	-104(%rbp), %r14
	movzbl	-8(%r12), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	testb	$1, %cl
	cmovneq	(%r12), %rdx
	testq	%rdx, %rdx
	je	0x100011164
	incq	%rax
	addq	$24, %r12
	cmpq	%r13, %rax
	jb	0x1000110ff
	movb	$1, %bl
	movq	-72(%rbp), %rcx
	movl	%esi, %r13d
	testb	$1, %cl
	je	0x10001098d
	jmp	0x100011064
	movb	$1, %r13b
	xorl	%ebx, %ebx
	jmp	0x100010dd3
	movb	$1, %r13b
	xorl	%ebx, %ebx
	movq	-56(%rbp), %r15
	movq	-104(%rbp), %r14
	movq	-72(%rbp), %rcx
	testb	$1, %cl
	je	0x10001098d
	jmp	0x100011064
	movb	$1, %r13b
	xorl	%ebx, %ebx
	movq	-72(%rbp), %rcx
	testb	$1, %cl
	je	0x10001098d
	jmp	0x100011064
	movq	%rax, %rbx
	testb	$1, -96(%rbp)
	jne	0x10001118f
	jmp	0x100011198
	movq	%rax, %rbx
	testb	$1, -96(%rbp)
	je	0x100011198
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
__ZNSt3__120__bracket_expressionIcNS_12regex_traitsIcEEED2Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rdi, %r14
	movq	122883(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%r14)
	movq	136(%r14), %r15
	testq	%r15, %r15
	je	0x100011213
	movq	144(%r14), %rax
	cmpq	%r15, %rax
	je	0x100011204
	nopw	%cs:(%rax,%rax)
	leaq	-24(%rax), %rbx
	testb	$1, -24(%rax)
	je	0x1000111f3
	movq	-8(%rax), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r15
	movq	%rbx, %rax
	jne	0x1000111e0
	movq	136(%r14), %rdi
	jmp	0x100011207
	movq	%r15, %rdi
	movq	%r15, 144(%r14)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	112(%r14), %rdi
	testq	%rdi, %rdi
	je	0x100011225
	movq	%rdi, 120(%r14)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	88(%r14), %r15
	testq	%r15, %r15
	je	0x100011296
	movq	96(%r14), %rbx
	cmpq	%r15, %rbx
	je	0x10001128a
	nopw	(%rax,%rax)
	testb	$1, -24(%rbx)
	jne	0x100011260
	leaq	-48(%rbx), %r12
	testb	$1, -48(%rbx)
	jne	0x100011273
	cmpq	%r12, %r15
	movq	%r12, %rbx
	jne	0x100011240
	jmp	0x100011284
	nopw	(%rax,%rax)
	movq	-8(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-48(%rbx), %r12
	testb	$1, -48(%rbx)
	je	0x100011250
	movq	-32(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%r12, %r15
	movq	%r12, %rbx
	jne	0x100011240
	movq	88(%r14), %rdi
	jmp	0x10001128d
	movq	%r15, %rdi
	movq	%r15, 96(%r14)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	64(%r14), %rdi
	testq	%rdi, %rdi
	je	0x1000112a8
	movq	%rdi, 72(%r14)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	40(%r14), %rdi
	testq	%rdi, %rdi
	je	0x1000112ba
	movq	%rdi, 48(%r14)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	16(%r14), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	122550(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%r14)
	movq	8(%r14), %rdi
	testq	%rdi, %rdi
	je	0x1000112e8
	movq	(%rdi), %rax
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	jmpq	*8(%rax)
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNKSt3__112regex_traitsIcE20__lookup_collatenameIPcEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEET_SA_c:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	movq	%rcx, %r12
	movq	%rdx, %rbx
	movq	%rsi, %r13
	movq	%rdi, %r15
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movq	%r12, %r14
	subq	%rbx, %r14
	cmpq	$-16, %r14
	jae	0x100011635
	cmpq	$22, %r14
	ja	0x100011365
	movl	%r14d, %eax
	addb	%al, %al
	movb	%al, -64(%rbp)
	leaq	-63(%rbp), %rax
	cmpq	%r12, %rbx
	je	0x100011483
	cmpq	$32, %r14
	jae	0x10001139d
	movq	%rax, %rcx
	jmp	0x100011470
	movq	%r15, -96(%rbp)
	movq	%r13, %r15
	leaq	16(%r14), %r13
	andq	$-16, %r13
	movq	%r13, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, -48(%rbp)
	orq	$1, %r13
	movq	%r13, -64(%rbp)
	movq	%r15, %r13
	movq	-96(%rbp), %r15
	movq	%r14, -56(%rbp)
	cmpq	%r12, %rbx
	jne	0x100011357
	jmp	0x100011483
	movq	%r14, %rcx
	andq	$-32, %rcx
	leaq	-32(%rcx), %rdi
	movq	%rdi, %rsi
	shrq	$5, %rsi
	leal	1(%rsi), %edx
	andl	$3, %edx
	cmpq	$96, %rdi
	jae	0x1000113c7
	xorl	%esi, %esi
	testq	%rdx, %rdx
	jne	0x10001142d
	jmp	0x10001145b
	leaq	-1(%rdx), %rdi
	subq	%rsi, %rdi
	xorl	%esi, %esi
	movups	(%rbx,%rsi), %xmm0
	movups	16(%rbx,%rsi), %xmm1
	movups	%xmm0, (%rax,%rsi)
	movups	%xmm1, 16(%rax,%rsi)
	movups	32(%rbx,%rsi), %xmm0
	movups	48(%rbx,%rsi), %xmm1
	movups	%xmm0, 32(%rax,%rsi)
	movups	%xmm1, 48(%rax,%rsi)
	movups	64(%rbx,%rsi), %xmm0
	movups	80(%rbx,%rsi), %xmm1
	movups	%xmm0, 64(%rax,%rsi)
	movups	%xmm1, 80(%rax,%rsi)
	movups	96(%rbx,%rsi), %xmm0
	movups	112(%rbx,%rsi), %xmm1
	movups	%xmm0, 96(%rax,%rsi)
	movups	%xmm1, 112(%rax,%rsi)
	subq	$-128, %rsi
	addq	$4, %rdi
	jne	0x1000113d0
	testq	%rdx, %rdx
	je	0x10001145b
	leaq	16(%rax,%rsi), %rdi
	leaq	16(%rbx,%rsi), %rsi
	negq	%rdx
	nopw	(%rax,%rax)
	movups	-16(%rsi), %xmm0
	movups	(%rsi), %xmm1
	movups	%xmm0, -16(%rdi)
	movups	%xmm1, (%rdi)
	addq	$32, %rdi
	addq	$32, %rsi
	incq	%rdx
	jne	0x100011440
	cmpq	%rcx, %r14
	je	0x100011480
	addq	%rcx, %rbx
	addq	%rax, %rcx
	nopw	%cs:(%rax,%rax)
	movzbl	(%rbx), %edx
	movb	%dl, (%rcx)
	incq	%rbx
	incq	%rcx
	cmpq	%rbx, %r12
	jne	0x100011470
	addq	%r14, %rax
	movb	$0, (%rax)
	movq	$0, 16(%r15)
	movq	$0, 8(%r15)
	movq	$0, (%r15)
	movzbl	-64(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	-56(%rbp), %rcx
	testq	%rcx, %rcx
	je	0x1000115eb
	testb	$1, %al
	leaq	-63(%rbp), %rbx
	movq	-48(%rbp), %rsi
	cmoveq	%rbx, %rsi
	leaq	-88(%rbp), %rdi
	callq	0x1000296aa ## symbol stub for: __ZNSt3__120__get_collation_nameEPKc
	testb	$1, (%r15)
	jne	0x1000114dc
	movw	$0, (%r15)
	jmp	0x1000114eb
	movq	16(%r15), %rax
	movb	$0, (%rax)
	movq	$0, 8(%r15)
	xorl	%esi, %esi
	movq	%r15, %rdi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	movq	-88(%rbp), %rax
	movq	-80(%rbp), %rcx
	movq	%rax, (%r15)
	movq	-72(%rbp), %rax
	movq	%rax, 16(%r15)
	movq	%rcx, 8(%r15)
	movzbl	(%r15), %eax
	testb	$1, %al
	jne	0x100011522
	shrq	%rax
	testq	%rax, %rax
	jne	0x1000115eb
	jmp	0x10001152f
	movq	8(%r15), %rax
	testq	%rax, %rax
	jne	0x1000115eb
	movzbl	-64(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	-56(%rbp), %rcx
	cmpq	$2, %rcx
	ja	0x1000115eb
	testb	$1, %al
	movq	16(%r13), %rsi
	cmovneq	-48(%rbp), %rbx
	addq	%rbx, %rcx
	movq	(%rsi), %rax
	leaq	-88(%rbp), %rdi
	movq	%rbx, %rdx
	callq	*32(%rax)
	testb	$1, (%r15)
	jne	0x100011573
	movw	$0, (%r15)
	jmp	0x100011582
	movq	16(%r15), %rax
	movb	$0, (%rax)
	movq	$0, 8(%r15)
	xorl	%esi, %esi
	movq	%r15, %rdi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	movq	-88(%rbp), %rax
	movq	-80(%rbp), %rcx
	movq	%rax, (%r15)
	movq	-72(%rbp), %rax
	movq	%rax, 16(%r15)
	movq	%rcx, 8(%r15)
	movzbl	(%r15), %eax
	testb	$1, %al
	jne	0x1000115c9
	movq	%rax, %rcx
	shrq	%rcx
	cmpq	$1, %rcx
	je	0x1000115df
	testb	$1, %al
	jne	0x1000115d5
	movq	%rax, %rcx
	shrq	%rcx
	cmpq	$12, %rcx
	je	0x1000115df
	jmp	0x10001160c
	movq	8(%r15), %rcx
	cmpq	$1, %rcx
	jne	0x1000115b7
	jmp	0x1000115df
	movq	8(%r15), %rcx
	cmpq	$12, %rcx
	jne	0x10001160c
	leaq	-64(%rbp), %rsi
	movq	%r15, %rdi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	testb	$1, -64(%rbp)
	je	0x1000115fa
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rax
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	testb	$1, %al
	jne	0x10001161e
	movw	$0, (%r15)
	testb	$1, -64(%rbp)
	jne	0x1000115f1
	jmp	0x1000115fa
	movq	16(%r15), %rax
	movb	$0, (%rax)
	movq	$0, 8(%r15)
	testb	$1, -64(%rbp)
	jne	0x1000115f1
	jmp	0x1000115fa
	leaq	-64(%rbp), %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	testb	$1, (%r15)
	jne	0x10001166d
	jmp	0x100011676
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rbx
	testb	$1, (%r15)
	jne	0x10001166d
	jmp	0x100011676
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rbx
	testb	$1, (%r15)
	je	0x100011676
	movq	16(%r15), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	jne	0x100011684
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNKSt3__112regex_traitsIcE19__transform_primaryIPcEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEET_SA_c:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	movq	%rcx, %r12
	movq	%rdx, %rbx
	movq	%rdi, %r15
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movq	%r12, %r14
	subq	%rbx, %r14
	cmpq	$-16, %r14
	jae	0x1000118dd
	cmpq	$22, %r14
	ja	0x100011702
	movl	%r14d, %eax
	addb	%al, %al
	movb	%al, -64(%rbp)
	leaq	-63(%rbp), %rax
	cmpq	%r12, %rbx
	je	0x100011823
	cmpq	$32, %r14
	jae	0x10001173a
	movq	%rax, %rcx
	jmp	0x100011810
	leaq	16(%r14), %r13
	andq	$-16, %r13
	movq	%r13, %rdi
	movq	%r15, -72(%rbp)
	movq	%rsi, %r15
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%r15, %rsi
	movq	-72(%rbp), %r15
	movq	%rax, -48(%rbp)
	orq	$1, %r13
	movq	%r13, -64(%rbp)
	movq	%r14, -56(%rbp)
	cmpq	%r12, %rbx
	jne	0x1000116f4
	jmp	0x100011823
	movq	%r14, %rcx
	andq	$-32, %rcx
	leaq	-32(%rcx), %rdi
	movq	%rdi, %r8
	shrq	$5, %r8
	leal	1(%r8), %r9d
	andl	$3, %r9d
	cmpq	$96, %rdi
	jae	0x100011766
	xorl	%edx, %edx
	testq	%r9, %r9
	jne	0x1000117cd
	jmp	0x1000117fb
	leaq	-1(%r9), %rdi
	subq	%r8, %rdi
	xorl	%edx, %edx
	nop
	movups	(%rbx,%rdx), %xmm0
	movups	16(%rbx,%rdx), %xmm1
	movups	%xmm0, (%rax,%rdx)
	movups	%xmm1, 16(%rax,%rdx)
	movups	32(%rbx,%rdx), %xmm0
	movups	48(%rbx,%rdx), %xmm1
	movups	%xmm0, 32(%rax,%rdx)
	movups	%xmm1, 48(%rax,%rdx)
	movups	64(%rbx,%rdx), %xmm0
	movups	80(%rbx,%rdx), %xmm1
	movups	%xmm0, 64(%rax,%rdx)
	movups	%xmm1, 80(%rax,%rdx)
	movups	96(%rbx,%rdx), %xmm0
	movups	112(%rbx,%rdx), %xmm1
	movups	%xmm0, 96(%rax,%rdx)
	movups	%xmm1, 112(%rax,%rdx)
	subq	$-128, %rdx
	addq	$4, %rdi
	jne	0x100011770
	testq	%r9, %r9
	je	0x1000117fb
	leaq	16(%rax,%rdx), %rdi
	leaq	16(%rbx,%rdx), %rdx
	negq	%r9
	nopw	(%rax,%rax)
	movups	-16(%rdx), %xmm0
	movups	(%rdx), %xmm1
	movups	%xmm0, -16(%rdi)
	movups	%xmm1, (%rdi)
	addq	$32, %rdi
	addq	$32, %rdx
	incq	%r9
	jne	0x1000117e0
	cmpq	%rcx, %r14
	je	0x100011820
	addq	%rcx, %rbx
	addq	%rax, %rcx
	nopw	%cs:(%rax,%rax)
	movzbl	(%rbx), %edx
	movb	%dl, (%rcx)
	incq	%rbx
	incq	%rcx
	cmpq	%rbx, %r12
	jne	0x100011810
	addq	%r14, %rax
	movb	$0, (%rax)
	movq	16(%rsi), %rsi
	movzbl	-64(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	andb	$1, %al
	leaq	-63(%rbp), %rdx
	cmovneq	-48(%rbp), %rdx
	testb	%al, %al
	cmovneq	-56(%rbp), %rcx
	addq	%rdx, %rcx
	movq	(%rsi), %rax
	movq	%r15, %rdi
	callq	*32(%rax)
	movzbl	(%r15), %eax
	testb	$1, %al
	jne	0x10001187a
	movq	%rax, %rcx
	shrq	%rcx
	cmpq	$1, %rcx
	je	0x1000118a5
	cmpq	$12, %rcx
	jne	0x100011886
	testb	$1, %al
	jne	0x100011898
	leaq	4(%r15), %rcx
	leaq	1(%r15), %rax
	jmp	0x1000118a0
	movq	8(%r15), %rcx
	cmpq	$1, %rcx
	jne	0x100011866
	jmp	0x1000118a5
	testb	$1, %al
	jne	0x1000118c6
	movw	$0, (%r15)
	testb	$1, -64(%rbp)
	jne	0x1000118ab
	jmp	0x1000118b4
	movq	16(%r15), %rax
	leaq	3(%rax), %rcx
	movb	(%rcx), %cl
	movb	%cl, 11(%rax)
	testb	$1, -64(%rbp)
	je	0x1000118b4
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rax
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	16(%r15), %rax
	movb	$0, (%rax)
	movq	$0, 8(%r15)
	testb	$1, -64(%rbp)
	jne	0x1000118ab
	jmp	0x1000118b4
	leaq	-64(%rbp), %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x1000118f8
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE23__parse_expression_termINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_20__bracket_expressionIcS2_EE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$248, %rsp
	movq	%rcx, %r14
	movq	%rdx, %rbx
	movq	%rsi, %r12
	movq	%rdi, %r13
	cmpq	%rbx, %r12
	je	0x1000126b0
	movb	(%r12), %dl
	cmpb	$93, %dl
	je	0x1000126b0
	leaq	1(%r12), %rcx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -192(%rbp)
	movq	$0, -176(%rbp)
	xorl	%eax, %eax
	cmpq	%rbx, %rcx
	movl	$0, %ecx
	je	0x1000119ec
	cmpb	$91, %dl
	jne	0x1000119ec
	movb	1(%r12), %al
	cmpb	$46, %al
	je	0x1000119bd
	cmpb	$58, %al
	je	0x100011992
	cmpb	$61, %al
	jne	0x1000119e8
	leaq	2(%r12), %rsi
	movq	%r13, %rdi
	movq	%rbx, %rdx
	movq	%r14, %rcx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE25__parse_equivalence_classINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_20__bracket_expressionIcS2_EE ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_equivalence_class<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::__bracket_expression<char, std::__1::regex_traits<char> >*)
	movq	%rax, %rbx
	jmp	0x1000119a8
	leaq	2(%r12), %rsi
	movq	%r13, %rdi
	movq	%rbx, %rdx
	movq	%r14, %rcx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE23__parse_character_classINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_20__bracket_expressionIcS2_EE ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_character_class<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::__bracket_expression<char, std::__1::regex_traits<char> >*)
	movq	%rax, %rbx
	xorl	%r13d, %r13d
	testb	$1, -192(%rbp)
	jne	0x10001269f
	jmp	0x1000126ab
	addq	$2, %r12
	leaq	-192(%rbp), %rcx
	movq	%r13, %rdi
	movq	%r12, %rsi
	movq	%rbx, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE24__parse_collating_symbolINS_11__wrap_iterIPKcEEEET_S9_S9_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_collating_symbol<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)
	movq	%rax, %r12
	movb	-192(%rbp), %cl
	movq	-184(%rbp), %rax
	jmp	0x1000119ec
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	movl	$496, %r15d
	andl	24(%r13), %r15d
	movzbl	%cl, %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	testb	$1, %cl
	cmovneq	%rax, %rdx
	testq	%rdx, %rdx
	jne	0x100011a57
	movl	%r15d, %eax
	orl	$64, %eax
	cmpl	$64, %eax
	jne	0x100011a43
	cmpb	$92, (%r12)
	jne	0x100011a43
	incq	%r12
	testl	%r15d, %r15d
	je	0x100011e0e
	leaq	-192(%rbp), %rcx
	movq	%r13, %rdi
	movq	%r12, %rsi
	movq	%rbx, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE18__parse_awk_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_awk_escape<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
	movq	%rax, %r12
	jmp	0x100011a57
	movsbl	(%r12), %esi
	leaq	-192(%rbp), %rdi
	callq	0x10002961a ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSEc
	incq	%r12
	cmpq	%rbx, %r12
	je	0x100011a65
	movb	(%r12), %cl
	cmpb	$93, %cl
	jne	0x100011ab0
	movzbl	-192(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	testb	$1, %al
	movq	-184(%rbp), %rcx
	cmovneq	%rcx, %rdx
	movb	$1, %r13b
	testq	%rdx, %rdx
	je	0x100011b0f
	testb	$1, %al
	jne	0x100011b21
	andb	$-2, %al
	cmpb	$2, %al
	movb	-191(%rbp), %r15b
	je	0x100011b31
	leaq	-191(%rbp), %rax
	jmp	0x100011ba8
	leaq	1(%r12), %rax
	cmpq	%rbx, %rax
	je	0x100011ac8
	cmpb	$45, %cl
	jne	0x100011ac8
	cmpb	$93, (%rax)
	jne	0x100011cbe
	movzbl	-192(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	testb	$1, %al
	movq	-184(%rbp), %rcx
	cmovneq	%rcx, %rdx
	movb	$1, %r13b
	testq	%rdx, %rdx
	je	0x100011b0f
	testb	$1, %al
	jne	0x100011d1d
	andb	$-2, %al
	cmpb	$2, %al
	movb	-191(%rbp), %r15b
	je	0x100011d2d
	leaq	-191(%rbp), %rax
	jmp	0x100011d69
	testb	$1, -192(%rbp)
	jne	0x10001269f
	jmp	0x1000126ab
	cmpq	$1, %rcx
	movq	-176(%rbp), %rax
	movb	(%rax), %r15b
	jne	0x100011ba8
	cmpb	$0, 169(%r14)
	je	0x100011c14
	movq	24(%r14), %rdi
	movq	(%rdi), %rax
	movsbl	%r15b, %esi
	callq	*40(%rax)
	movl	%eax, %esi
	movq	48(%r14), %r13
	movq	56(%r14), %rbx
	cmpq	%rbx, %r13
	jb	0x100011d5c
	leaq	40(%r14), %rdi
	movq	(%rdi), %rdx
	subq	%rdx, %r13
	movq	%r13, %rax
	incq	%rax
	js	0x1000127ea
	subq	%rdx, %rbx
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %rbx
	movq	%rdx, -48(%rbp)
	jae	0x100011e2e
	addq	%rbx, %rbx
	cmpq	%rax, %rbx
	cmovbq	%rax, %rbx
	testq	%rbx, %rbx
	jne	0x100011e38
	jmp	0x100011fcd
	movzbl	1(%rax), %ebx
	cmpb	$0, 169(%r14)
	je	0x100011c77
	movq	24(%r14), %rdi
	movq	(%rdi), %rax
	movsbl	%r15b, %esi
	callq	*40(%rax)
	movl	%eax, %r15d
	movq	24(%r14), %rdi
	movq	(%rdi), %rax
	movsbl	%bl, %esi
	callq	*40(%rax)
	movzbl	%al, %ecx
	shll	$8, %ecx
	movzbl	%r15b, %eax
	orl	%ecx, %eax
	movw	%ax, -160(%rbp)
	movq	120(%r14), %rcx
	cmpq	128(%r14), %rcx
	jb	0x10001268b
	addq	$112, %r14
	leaq	-160(%rbp), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__16vectorINS_4pairIccEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ ## void std::__1::vector<std::__1::pair<char, char>, std::__1::allocator<std::__1::pair<char, char> > >::__push_back_slow_path<std::__1::pair<char, char> >(std::__1::pair<char, char>&&)
	jmp	0x100012693
	leaq	40(%r14), %rdi
	cmpb	$0, 170(%r14)
	movq	48(%r14), %rdx
	movq	56(%r14), %rbx
	je	0x100011e62
	cmpq	%rbx, %rdx
	jb	0x100012659
	movq	(%rdi), %rsi
	subq	%rsi, %rdx
	movq	%rdx, %rax
	incq	%rax
	js	0x10001281f
	subq	%rsi, %rbx
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %rbx
	jae	0x100011fd7
	addq	%rbx, %rbx
	cmpq	%rax, %rbx
	cmovbq	%rax, %rbx
	testq	%rbx, %rbx
	jne	0x100011fe1
	jmp	0x10001276e
	leaq	112(%r14), %rdi
	cmpb	$0, 170(%r14)
	je	0x100011eab
	movzwl	%bx, %ecx
	shll	$8, %ecx
	movzbl	%r15b, %eax
	orl	%ecx, %eax
	movw	%ax, -160(%rbp)
	movq	120(%r14), %rcx
	cmpq	128(%r14), %rcx
	jb	0x10001268b
	leaq	-160(%rbp), %rsi
	callq	__ZNSt3__16vectorINS_4pairIccEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ ## void std::__1::vector<std::__1::pair<char, char>, std::__1::allocator<std::__1::pair<char, char> > >::__push_back_slow_path<std::__1::pair<char, char> >(std::__1::pair<char, char>&&)
	jmp	0x100012693
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -224(%rbp)
	movq	$0, -208(%rbp)
	leaq	2(%r12), %rcx
	movq	%rcx, -48(%rbp)
	cmpq	%rbx, %rcx
	je	0x100011dd5
	cmpb	$91, (%rax)
	jne	0x100011dd5
	movq	-48(%rbp), %rcx
	cmpb	$46, (%rcx)
	jne	0x100011dd5
	addq	$3, %r12
	leaq	-224(%rbp), %rcx
	movq	%r13, %rdi
	movq	%r12, %rsi
	movq	%rbx, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE24__parse_collating_symbolINS_11__wrap_iterIPKcEEEET_S9_S9_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_collating_symbol<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)
	movq	%rax, -48(%rbp)
	jmp	0x100012019
	cmpq	$1, %rcx
	movq	-176(%rbp), %rax
	movb	(%rax), %r15b
	jne	0x100011d69
	cmpb	$0, 169(%r14)
	je	0x100011ee0
	movq	24(%r14), %rdi
	movq	(%rdi), %rax
	movsbl	%r15b, %esi
	callq	*40(%rax)
	movl	%eax, %esi
	movq	48(%r14), %r13
	movq	56(%r14), %rbx
	cmpq	%rbx, %r13
	jae	0x100011f8a
	movb	%sil, (%r13)
	incq	48(%r14)
	jmp	0x100012693
	movzbl	1(%rax), %ebx
	cmpb	$0, 169(%r14)
	je	0x100011f43
	movq	24(%r14), %rdi
	movq	(%rdi), %rax
	movsbl	%r15b, %esi
	callq	*40(%rax)
	movl	%eax, %r15d
	movq	24(%r14), %rdi
	movq	(%rdi), %rax
	movsbl	%bl, %esi
	callq	*40(%rax)
	movzbl	%al, %ecx
	shll	$8, %ecx
	movzbl	%r15b, %eax
	orl	%ecx, %eax
	movw	%ax, -160(%rbp)
	movq	120(%r14), %rcx
	cmpq	128(%r14), %rcx
	jb	0x10001268b
	addq	$112, %r14
	leaq	-160(%rbp), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__16vectorINS_4pairIccEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ ## void std::__1::vector<std::__1::pair<char, char>, std::__1::allocator<std::__1::pair<char, char> > >::__push_back_slow_path<std::__1::pair<char, char> >(std::__1::pair<char, char>&&)
	jmp	0x100012693
	movl	%r15d, %ecx
	orl	$64, %ecx
	cmpl	$64, %ecx
	movb	(%rax), %al
	jne	0x100011e4e
	cmpb	$92, %al
	jne	0x100011e4e
	testl	%r15d, %r15d
	je	0x100011ffc
	leaq	-224(%rbp), %rcx
	movq	%r13, %rdi
	movq	-48(%rbp), %rsi
	movq	%rbx, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE18__parse_awk_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_awk_escape<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
	movq	%rax, -48(%rbp)
	jmp	0x100012019
	leaq	-192(%rbp), %rcx
	movq	%r13, %rdi
	movq	%r12, %rsi
	movq	%rbx, %rdx
	movq	%r14, %r8
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE20__parse_class_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPNS_20__bracket_expressionIcS2_EE ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_class_escape<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::__bracket_expression<char, std::__1::regex_traits<char> >*)
	movq	%rax, %r12
	jmp	0x100011a57
	movabsq	$9223372036854775807, %rbx
	movq	%rbx, %rdi
	movl	%esi, %r15d
	callq	0x100029746 ## symbol stub for: __Znwm
	movl	%r15d, %esi
	movq	%rax, %r15
	jmp	0x100012607
	movsbl	%al, %esi
	leaq	-224(%rbp), %rdi
	callq	0x10002961a ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSEc
	jmp	0x100012019
	cmpq	%rbx, %rdx
	jne	0x100012659
	movq	(%rdi), %rsi
	subq	%rsi, %rdx
	movq	%rdx, %rax
	incq	%rax
	js	0x100012829
	subq	%rsi, %rbx
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %rbx
	jae	0x1000126e3
	addq	%rbx, %rbx
	cmpq	%rax, %rbx
	cmovbq	%rax, %rbx
	testq	%rbx, %rbx
	jne	0x1000126ed
	jmp	0x10001276e
	movzwl	%bx, %ecx
	shll	$8, %ecx
	movzbl	%r15b, %eax
	orl	%ecx, %eax
	movw	%ax, -160(%rbp)
	movq	120(%r14), %rcx
	cmpq	128(%r14), %rcx
	jb	0x10001268b
	leaq	-160(%rbp), %rsi
	callq	__ZNSt3__16vectorINS_4pairIccEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ ## void std::__1::vector<std::__1::pair<char, char>, std::__1::allocator<std::__1::pair<char, char> > >::__push_back_slow_path<std::__1::pair<char, char> >(std::__1::pair<char, char>&&)
	jmp	0x100012693
	leaq	40(%r14), %rdi
	cmpb	$0, 170(%r14)
	movq	48(%r14), %rdx
	movq	56(%r14), %rbx
	je	0x100012650
	cmpq	%rbx, %rdx
	jb	0x100012659
	movq	(%rdi), %rsi
	subq	%rsi, %rdx
	movq	%rdx, %rax
	incq	%rax
	js	0x10001282e
	subq	%rsi, %rbx
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %rbx
	jae	0x100012719
	addq	%rbx, %rbx
	cmpq	%rax, %rbx
	cmovbq	%rax, %rbx
	testq	%rbx, %rbx
	jne	0x100012723
	jmp	0x10001276e
	leaq	112(%r14), %rdi
	cmpb	$0, 170(%r14)
	je	0x10001266b
	movzwl	%bx, %ecx
	shll	$8, %ecx
	movzbl	%r15b, %eax
	orl	%ecx, %eax
	movw	%ax, -160(%rbp)
	movq	120(%r14), %rcx
	cmpq	128(%r14), %rcx
	jb	0x10001268b
	leaq	-160(%rbp), %rsi
	callq	__ZNSt3__16vectorINS_4pairIccEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ ## void std::__1::vector<std::__1::pair<char, char>, std::__1::allocator<std::__1::pair<char, char> > >::__push_back_slow_path<std::__1::pair<char, char> >(std::__1::pair<char, char>&&)
	jmp	0x100012693
	leaq	40(%r14), %rdi
	movq	(%rdi), %rdx
	subq	%rdx, %r13
	movq	%r13, %rax
	incq	%rax
	js	0x100012824
	subq	%rdx, %rbx
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %rbx
	movq	%rdx, -48(%rbp)
	jae	0x1000125ec
	addq	%rbx, %rbx
	cmpq	%rax, %rbx
	cmovbq	%rax, %rbx
	testq	%rbx, %rbx
	jne	0x1000125f6
	xorl	%ebx, %ebx
	xorl	%r15d, %r15d
	jmp	0x10001260b
	movabsq	$9223372036854775807, %rbx
	movq	%rsi, -200(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r13
	jmp	0x100012795
	leaq	-224(%rbp), %rcx
	movq	%r13, %rdi
	movq	-48(%rbp), %rsi
	movq	%rbx, %rdx
	movq	%r14, %r8
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE20__parse_class_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPNS_20__bracket_expressionIcS2_EE ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_class_escape<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::__bracket_expression<char, std::__1::regex_traits<char> >*)
	movq	%rax, -48(%rbp)
	movq	-176(%rbp), %rax
	movq	%rax, -96(%rbp)
	movaps	-192(%rbp), %xmm0
	movaps	%xmm0, -112(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -192(%rbp)
	movq	$0, -176(%rbp)
	movq	-208(%rbp), %rax
	movq	%rax, -64(%rbp)
	movaps	-224(%rbp), %xmm1
	movaps	%xmm1, -80(%rbp)
	movaps	%xmm0, -224(%rbp)
	movq	$0, -208(%rbp)
	cmpb	$0, 170(%r14)
	je	0x10001215d
	cmpb	$0, 169(%r14)
	leaq	-111(%rbp), %r13
	je	0x1000122c4
	movzbl	-112(%rbp), %ecx
	movl	%ecx, %edx
	andb	$1, %dl
	sete	%al
	shrq	%rcx
	testb	%dl, %dl
	cmovneq	-104(%rbp), %rcx
	testq	%rcx, %rcx
	je	0x1000120ee
	xorl	%ebx, %ebx
	testb	$1, %al
	movq	-96(%rbp), %rax
	cmovneq	%r13, %rax
	movq	24(%r14), %rdi
	movq	(%rdi), %rcx
	movsbl	(%rax,%rbx), %esi
	callq	*40(%rcx)
	testb	$1, -112(%rbp)
	movq	-96(%rbp), %rcx
	cmoveq	%r13, %rcx
	movb	%al, (%rcx,%rbx)
	incq	%rbx
	movzbl	-112(%rbp), %ecx
	movl	%ecx, %edx
	andb	$1, %dl
	sete	%al
	shrq	%rcx
	testb	%dl, %dl
	cmovneq	-104(%rbp), %rcx
	cmpq	%rcx, %rbx
	jb	0x1000120a9
	movzbl	-80(%rbp), %ecx
	movl	%ecx, %edx
	andb	$1, %dl
	sete	%al
	shrq	%rcx
	testb	%dl, %dl
	cmovneq	-72(%rbp), %rcx
	testq	%rcx, %rcx
	je	0x10001238a
	leaq	-79(%rbp), %r15
	xorl	%ebx, %ebx
	testb	$1, %al
	movq	-64(%rbp), %rax
	cmovneq	%r15, %rax
	movq	24(%r14), %rdi
	movq	(%rdi), %rcx
	movsbl	(%rax,%rbx), %esi
	callq	*40(%rcx)
	testb	$1, -80(%rbp)
	movq	-64(%rbp), %rcx
	cmoveq	%r15, %rcx
	movb	%al, (%rcx,%rbx)
	incq	%rbx
	movzbl	-80(%rbp), %ecx
	movl	%ecx, %edx
	andb	$1, %dl
	sete	%al
	shrq	%rcx
	testb	%dl, %dl
	cmovneq	-72(%rbp), %rcx
	cmpq	%rcx, %rbx
	jb	0x100012113
	jmp	0x10001238a
	movzbl	-112(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	-104(%rbp), %rcx
	cmpq	$1, %rcx
	jne	0x1000127ef
	movzbl	-80(%rbp), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	testb	$1, %cl
	cmovneq	-72(%rbp), %rdx
	cmpq	$1, %rdx
	jne	0x1000127ef
	cmpb	$0, 169(%r14)
	je	0x1000121ec
	testb	$1, %al
	leaq	-111(%rbp), %rbx
	movq	-96(%rbp), %rax
	cmoveq	%rbx, %rax
	movq	24(%r14), %rdi
	movq	(%rdi), %rcx
	movsbl	(%rax), %esi
	callq	*40(%rcx)
	testb	$1, -112(%rbp)
	cmovneq	-96(%rbp), %rbx
	movb	%al, (%rbx)
	testb	$1, -80(%rbp)
	leaq	-79(%rbp), %rbx
	movq	-64(%rbp), %rax
	cmoveq	%rbx, %rax
	movq	24(%r14), %rdi
	movq	(%rdi), %rcx
	movsbl	(%rax), %esi
	callq	*40(%rcx)
	testb	$1, -80(%rbp)
	cmovneq	-64(%rbp), %rbx
	movb	%al, (%rbx)
	movq	-96(%rbp), %rax
	movq	%rax, -144(%rbp)
	movaps	-112(%rbp), %xmm0
	movaps	%xmm0, -160(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -112(%rbp)
	movq	$0, -96(%rbp)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rcx
	movq	%rcx, -128(%rbp)
	movq	-64(%rbp), %rcx
	movq	%rcx, -120(%rbp)
	movq	%rax, -136(%rbp)
	movaps	%xmm0, -80(%rbp)
	movq	$0, -64(%rbp)
	movq	96(%r14), %rax
	cmpq	104(%r14), %rax
	jae	0x100012555
	leaq	-136(%rbp), %rcx
	movq	-144(%rbp), %rdx
	movq	%rdx, 16(%rax)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rsi
	movq	%rsi, 8(%rax)
	movq	%rdx, (%rax)
	movaps	%xmm0, -160(%rbp)
	movq	$0, -144(%rbp)
	movq	16(%rcx), %rdx
	movq	%rdx, 40(%rax)
	movq	(%rcx), %rdx
	movq	8(%rcx), %rsi
	movq	%rsi, 32(%rax)
	movq	%rdx, 24(%rax)
	movq	$0, 16(%rcx)
	movq	$0, 8(%rcx)
	movq	$0, (%rcx)
	addq	$48, 96(%r14)
	testb	$1, -160(%rbp)
	jne	0x100012583
	jmp	0x10001258f
	movzbl	-112(%rbp), %eax
	movl	%eax, %ecx
	andb	$1, %cl
	sete	%dl
	shrq	%rax
	testb	%cl, %cl
	cmovneq	-104(%rbp), %rax
	testq	%rax, %rax
	je	0x100012325
	leaq	-111(%rbp), %rax
	xorl	%ecx, %ecx
	movq	-96(%rbp), %rsi
	andb	$1, %dl
	movq	%r13, %rdi
	jne	0x1000122f4
	movq	%rsi, %rdi
	testb	%dl, %dl
	jne	0x1000122fd
	addq	%rcx, %rsi
	jmp	0x100012301
	leaq	(%rax,%rcx), %rsi
	movzbl	(%rsi), %edx
	movb	%dl, (%rdi,%rcx)
	incq	%rcx
	movzbl	-112(%rbp), %esi
	movl	%esi, %ebx
	andb	$1, %bl
	sete	%dl
	shrq	%rsi
	testb	%bl, %bl
	cmovneq	-104(%rbp), %rsi
	cmpq	%rsi, %rcx
	jb	0x1000122e5
	movzbl	-80(%rbp), %eax
	movl	%eax, %ecx
	andb	$1, %cl
	sete	%bl
	shrq	%rax
	testb	%cl, %cl
	cmovneq	-72(%rbp), %rax
	testq	%rax, %rax
	je	0x10001238a
	leaq	-79(%rbp), %rax
	leaq	-79(%rbp), %r8
	xorl	%edx, %edx
	movq	-64(%rbp), %rsi
	andb	$1, %bl
	movq	%rax, %rdi
	jne	0x100012359
	movq	%rsi, %rdi
	testb	%bl, %bl
	jne	0x100012362
	addq	%rdx, %rsi
	jmp	0x100012366
	leaq	(%r8,%rdx), %rsi
	movzbl	(%rsi), %ebx
	movb	%bl, (%rdi,%rdx)
	incq	%rdx
	movzbl	-80(%rbp), %esi
	movl	%esi, %ecx
	andb	$1, %cl
	sete	%bl
	shrq	%rsi
	testb	%cl, %cl
	cmovneq	-72(%rbp), %rsi
	cmpq	%rsi, %rdx
	jb	0x10001234a
	leaq	16(%r14), %r12
	movzbl	-112(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	andb	$1, %al
	cmovneq	-104(%rbp), %rcx
	testb	%al, %al
	cmovneq	-96(%rbp), %r13
	addq	%r13, %rcx
	leaq	-288(%rbp), %rdi
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	__ZNKSt3__112regex_traitsIcE9transformINS_11__wrap_iterIPcEEEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEET_SC_ ## std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::regex_traits<char>::transform<std::__1::__wrap_iter<char*> >(std::__1::__wrap_iter<char*>, std::__1::__wrap_iter<char*>) const
	movzbl	-80(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	andb	$1, %al
	leaq	-79(%rbp), %rdx
	cmovneq	-64(%rbp), %rdx
	testb	%al, %al
	cmovneq	-72(%rbp), %rcx
	addq	%rdx, %rcx
	leaq	-256(%rbp), %rdi
	movq	%r12, %rsi
	callq	__ZNKSt3__112regex_traitsIcE9transformINS_11__wrap_iterIPcEEEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEET_SC_ ## std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::regex_traits<char>::transform<std::__1::__wrap_iter<char*> >(std::__1::__wrap_iter<char*>, std::__1::__wrap_iter<char*>) const
	movq	-272(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-288(%rbp), %rax
	movq	-280(%rbp), %rcx
	movq	%rcx, -152(%rbp)
	movq	%rax, -160(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -288(%rbp)
	movq	$0, -272(%rbp)
	movq	-240(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-256(%rbp), %rax
	movq	-248(%rbp), %rcx
	movq	%rcx, -128(%rbp)
	movq	%rax, -136(%rbp)
	movaps	%xmm0, -256(%rbp)
	movq	$0, -240(%rbp)
	movq	96(%r14), %rax
	cmpq	104(%r14), %rax
	jae	0x100012511
	leaq	-136(%rbp), %rcx
	movq	-144(%rbp), %rdx
	movq	%rdx, 16(%rax)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rsi
	movq	%rsi, 8(%rax)
	movq	%rdx, (%rax)
	movaps	%xmm0, -160(%rbp)
	movq	$0, -144(%rbp)
	movq	16(%rcx), %rdx
	movq	%rdx, 40(%rax)
	movq	(%rcx), %rdx
	movq	8(%rcx), %rsi
	movq	%rsi, 32(%rax)
	movq	%rdx, 24(%rax)
	movq	$0, 16(%rcx)
	movq	$0, 8(%rcx)
	movq	$0, (%rcx)
	addq	$48, 96(%r14)
	testb	$1, -160(%rbp)
	je	0x10001253a
	movq	-144(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -256(%rbp)
	je	0x100012543
	movq	-240(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -288(%rbp)
	je	0x10001258f
	jmp	0x10001254c
	addq	$88, %r14
	leaq	-160(%rbp), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE21__push_back_slow_pathIS8_EEvOT_ ## void std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__push_back_slow_path<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >&&)
	testb	$1, -136(%rbp)
	jne	0x1000126c8
	testb	$1, -160(%rbp)
	jne	0x1000124e1
	testb	$1, -256(%rbp)
	jne	0x1000124f6
	testb	$1, -288(%rbp)
	je	0x10001258f
	movq	-272(%rbp), %rdi
	jmp	0x10001258a
	addq	$88, %r14
	leaq	-160(%rbp), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE21__push_back_slow_pathIS8_EEvOT_ ## void std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__push_back_slow_path<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >&&)
	testb	$1, -136(%rbp)
	je	0x10001257a
	movq	-120(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -160(%rbp)
	je	0x10001258f
	movq	-144(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -80(%rbp)
	jne	0x1000125c9
	testb	$1, -112(%rbp)
	jne	0x1000125d8
	testb	$1, -224(%rbp)
	je	0x1000125b0
	movq	-208(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movb	$1, %r13b
	movq	-48(%rbp), %r12
	testb	$1, -192(%rbp)
	jne	0x10001269f
	jmp	0x1000126ab
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -112(%rbp)
	je	0x10001259b
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -224(%rbp)
	jne	0x1000125a4
	jmp	0x1000125b0
	movabsq	$9223372036854775807, %rbx
	movq	%rbx, %rdi
	movl	%esi, %r15d
	callq	0x100029746 ## symbol stub for: __Znwm
	movl	%r15d, %esi
	movq	%rax, %r15
	movq	-48(%rbp), %rdx
	addq	%r15, %rbx
	movb	%sil, (%r15,%r13)
	leaq	1(%r15,%r13), %rax
	testq	%r13, %r13
	jle	0x100012635
	movq	%r15, %rdi
	movq	-48(%rbp), %rsi
	movq	%r13, %rdx
	movq	%rax, %r13
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r13, %rax
	movq	-48(%rbp), %rdx
	movq	%r15, 40(%r14)
	movq	%rax, 48(%r14)
	movq	%rbx, 56(%r14)
	testq	%rdx, %rdx
	je	0x100012693
	movq	%rdx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x100012693
	cmpq	%rbx, %rdx
	je	0x10001273b
	movb	%r15b, (%rdx)
	incq	48(%r14)
	testb	$1, -192(%rbp)
	jne	0x10001269f
	jmp	0x1000126ab
	movzwl	%bx, %ecx
	shll	$8, %ecx
	movzbl	%r15b, %eax
	orl	%ecx, %eax
	movw	%ax, -160(%rbp)
	movq	120(%r14), %rcx
	cmpq	128(%r14), %rcx
	jae	0x100012708
	movw	%ax, (%rcx)
	addq	$2, 120(%r14)
	movb	$1, %r13b
	testb	$1, -192(%rbp)
	je	0x1000126ab
	movq	-176(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	%r13b, %r13b
	je	0x1000126b3
	movq	%r12, %rbx
	movq	%rbx, %rax
	addq	$248, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	-120(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -160(%rbp)
	je	0x10001253a
	jmp	0x1000124e1
	movabsq	$9223372036854775807, %rbx
	movq	%rsi, -200(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r13
	jmp	0x100012795
	leaq	-160(%rbp), %rsi
	callq	__ZNSt3__16vectorINS_4pairIccEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ ## void std::__1::vector<std::__1::pair<char, char>, std::__1::allocator<std::__1::pair<char, char> > >::__push_back_slow_path<std::__1::pair<char, char> >(std::__1::pair<char, char>&&)
	jmp	0x100012693
	movabsq	$9223372036854775807, %rbx
	movq	%rsi, -200(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r13
	jmp	0x100012795
	movq	(%rdi), %rsi
	subq	%rsi, %rdx
	movq	%rdx, %rax
	incq	%rax
	js	0x100012833
	subq	%rsi, %rbx
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %rbx
	jae	0x100012775
	addq	%rbx, %rbx
	cmpq	%rax, %rbx
	cmovbq	%rax, %rbx
	testq	%rbx, %rbx
	jne	0x10001277f
	xorl	%ebx, %ebx
	xorl	%r13d, %r13d
	jmp	0x1000127a0
	movabsq	$9223372036854775807, %rbx
	movq	%rsi, -200(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r13
	movq	-48(%rbp), %rdx
	movq	-200(%rbp), %rsi
	addq	%r13, %rbx
	movb	%r15b, (%r13,%rdx)
	leaq	1(%r13,%rdx), %rax
	testq	%rdx, %rdx
	jle	0x1000127c8
	movq	%r13, %rdi
	movq	%rsi, %r15
	movq	%rax, -48(%rbp)
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	-48(%rbp), %rax
	movq	%r15, %rsi
	movq	%r13, 40(%r14)
	movq	%rax, 48(%r14)
	movq	%rbx, 56(%r14)
	testq	%rsi, %rsi
	je	0x100012693
	movq	%rsi, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x100012693
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	movl	$1, %esi
	movq	%r14, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	116920(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	116785(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%r14, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	testb	$1, -80(%rbp)
	je	0x1000129d5
	jmp	0x10001295a
	movq	%rax, %rbx
	testb	$1, -224(%rbp)
	je	0x1000129e4
	jmp	0x10001297b
	movq	%rax, %rbx
	testb	$1, -224(%rbp)
	je	0x1000129e4
	jmp	0x10001297b
	movq	%rax, %rbx
	testb	$1, -136(%rbp)
	je	0x100012891
	movq	-120(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -160(%rbp)
	je	0x1000129cf
	movq	-144(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -80(%rbp)
	je	0x1000129d5
	jmp	0x10001295a
	movq	%rax, %rbx
	testb	$1, -136(%rbp)
	jne	0x1000128e5
	testb	$1, -160(%rbp)
	jne	0x1000128f7
	testb	$1, -256(%rbp)
	jne	0x10001290c
	testb	$1, -288(%rbp)
	jne	0x100012948
	jmp	0x1000129cf
	movq	-120(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -160(%rbp)
	je	0x1000128ce
	movq	-144(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -256(%rbp)
	je	0x1000128d7
	movq	-240(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -288(%rbp)
	jne	0x100012948
	jmp	0x1000129cf
	movq	%rax, %rbx
	testb	$1, -224(%rbp)
	je	0x1000129e4
	jmp	0x10001297b
	movq	%rax, %rbx
	testb	$1, -288(%rbp)
	je	0x1000129cf
	movq	-272(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -80(%rbp)
	je	0x1000129d5
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -112(%rbp)
	je	0x1000129db
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -224(%rbp)
	je	0x1000129e4
	movq	-208(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -192(%rbp)
	je	0x1000129ed
	movq	-176(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %rbx
	testb	$1, -224(%rbp)
	je	0x1000129e4
	jmp	0x10001297b
	jmp	0x1000129bc
	jmp	0x1000129bc
	jmp	0x1000129cc
	jmp	0x1000129bc
	jmp	0x1000129bc
	movq	%rax, %rbx
	testb	$1, -192(%rbp)
	je	0x1000129ed
	jmp	0x100012990
	jmp	0x1000129cc
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	jne	0x10001295a
	testb	$1, -112(%rbp)
	jne	0x100012969
	testb	$1, -224(%rbp)
	jne	0x10001297b
	testb	$1, -192(%rbp)
	jne	0x100012990
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE25__parse_equivalence_classINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_20__bracket_expressionIcS2_EE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$72, %rsp
	movq	%rcx, %r14
	movq	%rsi, %rax
	movq	%rdi, %r15
	movq	%rdx, %rcx
	subq	%rax, %rcx
	cmpq	$2, %rcx
	jl	0x100012a53
	leaq	-1(%rdx), %rcx
	cmpq	%rax, %rcx
	je	0x100012a53
	movq	%rax, %rbx
	nopw	%cs:(%rax,%rax)
	cmpb	$61, (%rbx)
	jne	0x100012a4b
	cmpb	$93, 1(%rbx)
	je	0x100012a83
	incq	%rbx
	cmpq	%rbx, %rcx
	jne	0x100012a40
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	movl	$5, %esi
	movq	%r14, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	116308(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	116173(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%r14, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	cmpq	%rdx, %rbx
	je	0x100012a53
	leaq	-80(%rbp), %rdi
	xorl	%r8d, %r8d
	movq	%r15, %rsi
	movq	%rax, %rdx
	movq	%rbx, %rcx
	callq	__ZNKSt3__112regex_traitsIcE20__lookup_collatenameINS_11__wrap_iterIPKcEEEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEET_SD_c ## std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::regex_traits<char>::__lookup_collatename<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, char) const
	movzbl	-80(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	-72(%rbp), %rcx
	testq	%rcx, %rcx
	je	0x100012ec3
	testb	$1, %al
	leaq	-79(%rbp), %r12
	movq	-64(%rbp), %rdx
	cmoveq	%r12, %rdx
	addq	%rdx, %rcx
	leaq	-104(%rbp), %rdi
	xorl	%r8d, %r8d
	movq	%r15, %rsi
	callq	__ZNKSt3__112regex_traitsIcE19__transform_primaryINS_11__wrap_iterIPcEEEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEET_SC_c ## std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::regex_traits<char>::__transform_primary<std::__1::__wrap_iter<char*> >(std::__1::__wrap_iter<char*>, std::__1::__wrap_iter<char*>, char) const
	movzbl	-104(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	-96(%rbp), %rcx
	testq	%rcx, %rcx
	je	0x100012b21
	movq	144(%r14), %rdi
	cmpq	152(%r14), %rdi
	je	0x100012b92
	leaq	-104(%rbp), %rsi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	addq	$24, 144(%r14)
	testb	$1, -104(%rbp)
	jne	0x100012db3
	jmp	0x100012dbc
	movzbl	-80(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	-72(%rbp), %rcx
	cmpq	$2, %rcx
	je	0x100012baa
	cmpq	$1, %rcx
	jne	0x100012ef3
	testb	$1, %al
	cmovneq	-64(%rbp), %r12
	movb	(%r12), %dl
	cmpb	$0, 169(%r14)
	je	0x100012c1e
	movq	24(%r14), %rdi
	movq	(%rdi), %rax
	movsbl	%dl, %esi
	callq	*40(%rax)
	movl	%eax, %esi
	movq	48(%r14), %r13
	movq	56(%r14), %r12
	cmpq	%r12, %r13
	jae	0x100012cc2
	movb	%sil, (%r13)
	incq	48(%r14)
	testb	$1, -104(%rbp)
	jne	0x100012db3
	jmp	0x100012dbc
	addq	$136, %r14
	leaq	-104(%rbp), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ ## void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__push_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	jmp	0x100012dad
	testb	$1, %al
	cmovneq	-64(%rbp), %r12
	movzbl	(%r12), %eax
	movzbl	1(%r12), %r12d
	cmpb	$0, 169(%r14)
	je	0x100012c81
	movq	24(%r14), %rdi
	movq	(%rdi), %rcx
	movsbl	%al, %esi
	callq	*40(%rcx)
	movl	%eax, %r15d
	movq	24(%r14), %rdi
	movq	(%rdi), %rax
	movsbl	%r12b, %esi
	callq	*40(%rax)
	movzbl	%al, %ecx
	shll	$8, %ecx
	movzbl	%r15b, %eax
	orl	%ecx, %eax
	movw	%ax, -42(%rbp)
	movq	120(%r14), %rcx
	cmpq	128(%r14), %rcx
	jb	0x100012da5
	addq	$112, %r14
	leaq	-42(%rbp), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__16vectorINS_4pairIccEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ ## void std::__1::vector<std::__1::pair<char, char>, std::__1::allocator<std::__1::pair<char, char> > >::__push_back_slow_path<std::__1::pair<char, char> >(std::__1::pair<char, char>&&)
	jmp	0x100012dad
	leaq	40(%r14), %rdi
	cmpb	$0, 170(%r14)
	movq	48(%r14), %r12
	movq	56(%r14), %r15
	je	0x100012d6f
	cmpq	%r15, %r12
	jb	0x100012d78
	movq	(%rdi), %rsi
	subq	%rsi, %r12
	movq	%r12, %rax
	incq	%rax
	js	0x100012f28
	subq	%rsi, %r15
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %r15
	jae	0x100012dec
	addq	%r15, %r15
	cmpq	%rax, %r15
	cmovbq	%rax, %r15
	testq	%r15, %r15
	jne	0x100012df6
	jmp	0x100012e3f
	leaq	112(%r14), %rdi
	cmpb	$0, 170(%r14)
	je	0x100012d88
	movzwl	%r12w, %ecx
	shll	$8, %ecx
	movzwl	%ax, %eax
	orl	%ecx, %eax
	movw	%ax, -42(%rbp)
	movq	120(%r14), %rcx
	cmpq	128(%r14), %rcx
	jb	0x100012da5
	leaq	-42(%rbp), %rsi
	callq	__ZNSt3__16vectorINS_4pairIccEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ ## void std::__1::vector<std::__1::pair<char, char>, std::__1::allocator<std::__1::pair<char, char> > >::__push_back_slow_path<std::__1::pair<char, char> >(std::__1::pair<char, char>&&)
	jmp	0x100012dad
	leaq	40(%r14), %rdi
	movq	(%rdi), %rdx
	subq	%rdx, %r13
	movq	%r13, %rax
	incq	%rax
	js	0x100012f23
	subq	%rdx, %r12
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %r12
	movq	%rdx, -56(%rbp)
	jae	0x100012d05
	addq	%r12, %r12
	cmpq	%rax, %r12
	cmovbq	%rax, %r12
	testq	%r12, %r12
	jne	0x100012d0f
	xorl	%r12d, %r12d
	xorl	%r15d, %r15d
	jmp	0x100012d24
	movabsq	$9223372036854775807, %r12
	movq	%r12, %rdi
	movl	%esi, %r15d
	callq	0x100029746 ## symbol stub for: __Znwm
	movl	%r15d, %esi
	movq	-56(%rbp), %rdx
	movq	%rax, %r15
	addq	%r15, %r12
	movb	%sil, (%r15,%r13)
	leaq	1(%r15,%r13), %rax
	testq	%r13, %r13
	jle	0x100012d4e
	movq	%r15, %rdi
	movq	-56(%rbp), %rsi
	movq	%r13, %rdx
	movq	%rax, %r13
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r13, %rax
	movq	-56(%rbp), %rdx
	movq	%r15, 40(%r14)
	movq	%rax, 48(%r14)
	movq	%r12, 56(%r14)
	testq	%rdx, %rdx
	je	0x100012dad
	movq	%rdx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -104(%rbp)
	jne	0x100012db3
	jmp	0x100012dbc
	cmpq	%r15, %r12
	je	0x100012e0c
	movb	%dl, (%r12)
	incq	48(%r14)
	testb	$1, -104(%rbp)
	jne	0x100012db3
	jmp	0x100012dbc
	movzwl	%ax, %ecx
	movzwl	%r12w, %eax
	shll	$8, %eax
	orl	%ecx, %eax
	movw	%ax, -42(%rbp)
	movq	120(%r14), %rcx
	cmpq	128(%r14), %rcx
	jae	0x100012de1
	movw	%ax, (%rcx)
	addq	$2, 120(%r14)
	testb	$1, -104(%rbp)
	je	0x100012dbc
	movq	-88(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$2, %rbx
	testb	$1, -80(%rbp)
	je	0x100012dcf
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rax
	addq	$72, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	leaq	-42(%rbp), %rsi
	callq	__ZNSt3__16vectorINS_4pairIccEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ ## void std::__1::vector<std::__1::pair<char, char>, std::__1::allocator<std::__1::pair<char, char> > >::__push_back_slow_path<std::__1::pair<char, char> >(std::__1::pair<char, char>&&)
	jmp	0x100012dad
	movabsq	$9223372036854775807, %r15
	movb	%dl, -56(%rbp)
	movq	%r15, %rdi
	movq	%rsi, %r13
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%r13, %rsi
	movq	%rax, %r13
	jmp	0x100012e65
	movq	(%rdi), %rsi
	subq	%rsi, %r12
	movq	%r12, %rax
	incq	%rax
	js	0x100012f2d
	subq	%rsi, %r15
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %r15
	jae	0x100012e47
	addq	%r15, %r15
	cmpq	%rax, %r15
	cmovbq	%rax, %r15
	testq	%r15, %r15
	jne	0x100012e51
	xorl	%r15d, %r15d
	xorl	%r13d, %r13d
	jmp	0x100012e68
	movabsq	$9223372036854775807, %r15
	movb	%dl, -56(%rbp)
	movq	%r15, %rdi
	movq	%rsi, %r13
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%r13, %rsi
	movq	%rax, %r13
	movb	-56(%rbp), %dl
	addq	%r13, %r15
	movb	%dl, (%r13,%r12)
	leaq	1(%r13,%r12), %rax
	testq	%r12, %r12
	jle	0x100012e97
	movq	%r13, %rdi
	movq	%rsi, -56(%rbp)
	movq	-56(%rbp), %rsi
	movq	%r12, %rdx
	movq	%rax, %r12
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r12, %rax
	movq	-56(%rbp), %rsi
	movq	%r13, 40(%r14)
	movq	%rax, 48(%r14)
	movq	%r15, 56(%r14)
	testq	%rsi, %rsi
	je	0x100012dad
	movq	%rsi, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -104(%rbp)
	jne	0x100012db3
	jmp	0x100012dbc
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	movl	$1, %esi
	movq	%r14, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	115172(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	115037(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%r14, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	movl	$1, %esi
	movq	%r14, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	115124(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	114989(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%r14, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	testb	$1, -104(%rbp)
	jne	0x100012f99
	jmp	0x100012fa2
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	je	0x100012fa8
	jmp	0x100012f7f
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	testb	$1, -80(%rbp)
	je	0x100012fa8
	jmp	0x100012f7f
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	je	0x100012fa8
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %rbx
	testb	$1, -104(%rbp)
	je	0x100012fa2
	movq	-88(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -80(%rbp)
	jne	0x100012f7f
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE23__parse_character_classINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_20__bracket_expressionIcS2_EE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rcx, %r14
	movq	%rdx, %rax
	subq	%rsi, %rax
	cmpq	$2, %rax
	jl	0x100012ff3
	leaq	-1(%rdx), %rax
	cmpq	%rsi, %rax
	je	0x100012ff3
	movq	%rsi, %rbx
	nopw	%cs:(%rax,%rax)
	cmpb	$58, (%rbx)
	jne	0x100012feb
	cmpb	$93, 1(%rbx)
	je	0x100013023
	incq	%rbx
	cmpq	%rbx, %rax
	jne	0x100012fe0
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$5, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	114868(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	114733(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	cmpq	%rdx, %rbx
	je	0x100012ff3
	movl	24(%rdi), %ecx
	andl	$1, %ecx
	xorl	%r8d, %r8d
	movq	%rbx, %rdx
	callq	__ZNKSt3__112regex_traitsIcE18__lookup_classnameINS_11__wrap_iterIPKcEEEEjT_S7_bc ## unsigned int std::__1::regex_traits<char>::__lookup_classname<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, bool, char) const
	testl	%eax, %eax
	je	0x100013050
	orl	%eax, 160(%r14)
	addq	$2, %rbx
	movq	%rbx, %rax
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$5, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x10001300d
	jmp	0x10001306e
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE24__parse_collating_symbolINS_11__wrap_iterIPKcEEEET_S9_S9_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	subq	$32, %rsp
	movq	%rcx, %r14
	movq	%rsi, %rax
	movq	%rdi, %rcx
	movq	%rdx, %rsi
	subq	%rax, %rsi
	cmpq	$2, %rsi
	jl	0x1000130d3
	leaq	-1(%rdx), %rsi
	cmpq	%rax, %rsi
	je	0x1000130d3
	movq	%rax, %rbx
	nopl	(%rax)
	cmpb	$46, (%rbx)
	jne	0x1000130cb
	cmpb	$93, 1(%rbx)
	je	0x100013103
	incq	%rbx
	cmpq	%rbx, %rsi
	jne	0x1000130c0
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$5, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	114644(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	114509(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	cmpq	%rdx, %rbx
	je	0x1000130d3
	leaq	-40(%rbp), %rdi
	xorl	%r8d, %r8d
	movq	%rcx, %rsi
	movq	%rax, %rdx
	movq	%rbx, %rcx
	callq	__ZNKSt3__112regex_traitsIcE20__lookup_collatenameINS_11__wrap_iterIPKcEEEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEET_SD_c ## std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::regex_traits<char>::__lookup_collatename<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, char) const
	testb	$1, (%r14)
	jne	0x10001312b
	movw	$0, (%r14)
	jmp	0x10001313a
	movq	16(%r14), %rax
	movb	$0, (%rax)
	movq	$0, 8(%r14)
	xorl	%esi, %esi
	movq	%r14, %rdi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	movq	-40(%rbp), %rax
	movq	-32(%rbp), %rcx
	movq	%rax, (%r14)
	movq	-24(%rbp), %rax
	movq	%rax, 16(%r14)
	movq	%rcx, 8(%r14)
	movzbl	(%r14), %eax
	movq	%rax, %rdx
	shrq	%rdx
	testb	$1, %al
	cmovneq	%rcx, %rdx
	decq	%rdx
	cmpq	$2, %rdx
	jae	0x100013184
	addq	$2, %rbx
	movq	%rbx, %rax
	addq	$32, %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x1000130ed
	jmp	0x1000131a5
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %rdi
	callq	___clang_call_terminate
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE20__parse_class_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPNS_20__bracket_expressionIcS2_EE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%r8, %r14
	movq	%rsi, %rbx
	cmpq	%rdx, %rbx
	je	0x10001360f
	movsbl	(%rbx), %esi
	leal	-68(%rsi), %eax
	cmpl	$51, %eax
	ja	0x100013205
	leaq	1129(%rip), %rsi
	movslq	(%rsi,%rax,4), %rax
	addq	%rsi, %rax
	jmpq	*%rax
	orb	$4, 165(%r14)
	jmp	0x10001359c
	testl	%esi, %esi
	jne	0x100013216
	movq	%rcx, %rdi
	callq	0x10002961a ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSEc
	jmp	0x10001359c
	movq	%rbx, %rsi
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE24__parse_character_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_character_escape<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
	orb	$5, 161(%r14)
	cmpb	$0, 169(%r14)
	je	0x1000132ef
	movq	24(%r14), %rdi
	movq	(%rdi), %rax
	movl	$95, %esi
	callq	*40(%rax)
	movl	%eax, %esi
	movq	48(%r14), %r13
	movq	56(%r14), %r12
	cmpq	%r12, %r13
	jae	0x1000133c1
	movb	%sil, (%r13)
	incq	48(%r14)
	jmp	0x10001359c
	orb	$5, 165(%r14)
	cmpb	$0, 169(%r14)
	je	0x100013358
	movq	24(%r14), %rdi
	movq	(%rdi), %rax
	movl	$95, %esi
	callq	*40(%rax)
	movl	%eax, %esi
	movq	72(%r14), %r13
	movq	80(%r14), %r12
	cmpq	%r12, %r13
	jae	0x100013404
	movb	%sil, (%r13)
	incq	72(%r14)
	jmp	0x10001359c
	movl	$8, %esi
	movq	%rcx, %rdi
	callq	0x10002961a ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSEc
	jmp	0x10001359c
	orb	$64, 165(%r14)
	jmp	0x10001359c
	orb	$4, 161(%r14)
	jmp	0x10001359c
	orb	$64, 161(%r14)
	jmp	0x10001359c
	leaq	40(%r14), %rdi
	cmpb	$0, 170(%r14)
	movq	48(%r14), %r12
	movq	56(%r14), %r15
	je	0x100013510
	cmpq	%r15, %r12
	jb	0x100013519
	movq	(%rdi), %rdx
	subq	%rdx, %r12
	movq	%r12, %rax
	incq	%rax
	js	0x10001363f
	subq	%rdx, %r15
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %r15
	jae	0x100013538
	addq	%r15, %r15
	cmpq	%rax, %r15
	cmovbq	%rax, %r15
	testq	%r15, %r15
	jne	0x100013542
	xorl	%r15d, %r15d
	xorl	%r13d, %r13d
	jmp	0x100013553
	leaq	64(%r14), %rdi
	cmpb	$0, 170(%r14)
	movq	72(%r14), %r12
	movq	80(%r14), %r15
	je	0x100013524
	cmpq	%r15, %r12
	jb	0x10001352d
	movq	(%rdi), %rdx
	subq	%rdx, %r12
	movq	%r12, %rax
	incq	%rax
	js	0x10001363f
	subq	%rdx, %r15
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %r15
	jae	0x1000135b1
	addq	%r15, %r15
	cmpq	%rax, %r15
	cmovbq	%rax, %r15
	testq	%r15, %r15
	jne	0x1000135bb
	xorl	%r15d, %r15d
	xorl	%r13d, %r13d
	jmp	0x1000135cc
	leaq	40(%r14), %rdi
	movq	(%rdi), %rdx
	subq	%rdx, %r13
	movq	%r13, %rax
	incq	%rax
	js	0x10001363f
	subq	%rdx, %r12
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %r12
	movq	%rdx, -48(%rbp)
	jae	0x10001344a
	addq	%r12, %r12
	cmpq	%rax, %r12
	cmovbq	%rax, %r12
	testq	%r12, %r12
	jne	0x100013454
	xorl	%r12d, %r12d
	xorl	%r15d, %r15d
	jmp	0x100013469
	leaq	64(%r14), %rdi
	movq	(%rdi), %rdx
	subq	%rdx, %r13
	movq	%r13, %rax
	incq	%rax
	js	0x10001363f
	subq	%rdx, %r12
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %r12
	movq	%rdx, -48(%rbp)
	jae	0x1000134ad
	addq	%r12, %r12
	cmpq	%rax, %r12
	cmovbq	%rax, %r12
	testq	%r12, %r12
	jne	0x1000134b7
	xorl	%r12d, %r12d
	xorl	%r15d, %r15d
	jmp	0x1000134cc
	movabsq	$9223372036854775807, %r12
	movq	%r12, %rdi
	movl	%esi, %r15d
	callq	0x100029746 ## symbol stub for: __Znwm
	movl	%r15d, %esi
	movq	-48(%rbp), %rdx
	movq	%rax, %r15
	addq	%r15, %r12
	movb	%sil, (%r15,%r13)
	leaq	1(%r15,%r13), %rax
	testq	%r13, %r13
	jle	0x100013493
	movq	%r15, %rdi
	movq	-48(%rbp), %rsi
	movq	%r13, %rdx
	movq	%rax, %r13
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r13, %rax
	movq	-48(%rbp), %rdx
	movq	%r15, 40(%r14)
	movq	%rax, 48(%r14)
	movq	%r12, 56(%r14)
	testq	%rdx, %rdx
	jne	0x100013594
	jmp	0x10001359c
	movabsq	$9223372036854775807, %r12
	movq	%r12, %rdi
	movl	%esi, %r15d
	callq	0x100029746 ## symbol stub for: __Znwm
	movl	%r15d, %esi
	movq	-48(%rbp), %rdx
	movq	%rax, %r15
	addq	%r15, %r12
	movb	%sil, (%r15,%r13)
	leaq	1(%r15,%r13), %rax
	testq	%r13, %r13
	jle	0x1000134f6
	movq	%r15, %rdi
	movq	-48(%rbp), %rsi
	movq	%r13, %rdx
	movq	%rax, %r13
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r13, %rax
	movq	-48(%rbp), %rdx
	movq	%r15, 64(%r14)
	movq	%rax, 72(%r14)
	movq	%r12, 80(%r14)
	testq	%rdx, %rdx
	jne	0x100013594
	jmp	0x10001359c
	cmpq	%r15, %r12
	je	0x100013312
	movb	$95, (%r12)
	incq	48(%r14)
	jmp	0x10001359c
	cmpq	%r15, %r12
	je	0x10001337b
	movb	$95, (%r12)
	incq	72(%r14)
	jmp	0x10001359c
	movabsq	$9223372036854775807, %r15
	movq	%r15, %rdi
	movq	%rdx, %r13
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%r13, %rdx
	movq	%rax, %r13
	addq	%r13, %r15
	movb	$95, (%r13,%r12)
	leaq	1(%r13,%r12), %rax
	testq	%r12, %r12
	jle	0x100013583
	movq	%r13, %rdi
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rsi
	movq	%r12, %rdx
	movq	%rax, %r12
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r12, %rax
	movq	-48(%rbp), %rdx
	movq	%r13, 40(%r14)
	movq	%rax, 48(%r14)
	movq	%r15, 56(%r14)
	testq	%rdx, %rdx
	je	0x10001359c
	movq	%rdx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	incq	%rbx
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movabsq	$9223372036854775807, %r15
	movq	%r15, %rdi
	movq	%rdx, %r13
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%r13, %rdx
	movq	%rax, %r13
	addq	%r13, %r15
	movb	$95, (%r13,%r12)
	leaq	1(%r13,%r12), %rax
	testq	%r12, %r12
	jle	0x1000135fc
	movq	%r13, %rdi
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rsi
	movq	%r12, %rdx
	movq	%rax, %r12
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r12, %rax
	movq	-48(%rbp), %rdx
	movq	%r13, 64(%r14)
	movq	%rax, 72(%r14)
	movq	%r15, 80(%r14)
	testq	%rdx, %rdx
	jne	0x100013594
	jmp	0x10001359c
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$3, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	113304(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	113169(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nop
	movabsb	-4683743630735704069, %al
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	pushq	-4(%rax)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$436207611, %esi
	cld
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	lcalll	*-4(%rsi)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$2113929211, %esi
	cld
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	decl	-1090519044(%rdx)
	sti
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	movl	$3204448251, %esi
	sti
	.byte 0xff #bad opcode
	callq	*%rsp
	sti
	.byte 0xff #bad opcode
	decl	(%rdi)
	.byte 0x1f #bad opcode
	testb	%al, (%rax)
	addb	%al, (%rax)
	addb	%al, (%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE18__parse_awk_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rdx, %rbx
	movq	%rsi, %r14
	cmpq	%rbx, %r14
	je	0x10001387c
	movsbl	(%r14), %esi
	leal	-34(%rsi), %eax
	cmpl	$84, %eax
	ja	0x1000137bc
	leaq	391(%rip), %rdx
	movslq	(%rdx,%rax,4), %rax
	addq	%rdx, %rax
	jmpq	*%rax
	testq	%rcx, %rcx
	je	0x100013771
	movq	%rcx, %rdi
	callq	0x10002961a ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSEc
	jmp	0x100013796
	jmp	0x100013791
	movl	$10, %esi
	testq	%rcx, %rcx
	je	0x100013791
	movq	%rcx, %rdi
	callq	0x10002961a ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSEc
	jmp	0x100013796
	movl	$13, %esi
	testq	%rcx, %rcx
	jne	0x10001377d
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_charEc ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_char(char)
	incq	%r14
	movq	%r14, %rbx
	movq	%rbx, %rax
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	movl	$7, %esi
	testq	%rcx, %rcx
	jne	0x10001377d
	jmp	0x100013791
	movl	$8, %esi
	testq	%rcx, %rcx
	jne	0x10001377d
	jmp	0x100013791
	movl	%esi, %eax
	andb	$-8, %al
	cmpb	$48, %al
	jne	0x1000138ac
	addl	$-48, %esi
	leaq	1(%r14), %rax
	cmpq	%rbx, %rax
	je	0x100013850
	movsbl	(%rax), %r8d
	movl	%r8d, %edx
	andb	$-8, %dl
	cmpb	$48, %dl
	jne	0x10001384d
	leal	-48(%r8,%rsi,8), %esi
	leaq	2(%r14), %rax
	cmpq	%rbx, %rax
	je	0x100013850
	movsbl	(%rax), %edx
	movl	%edx, %ebx
	andb	$-8, %bl
	cmpb	$48, %bl
	jne	0x100013866
	addq	$3, %r14
	leal	-48(%rdx,%rsi,8), %esi
	movq	%r14, %rbx
	movsbl	%sil, %esi
	testq	%rcx, %rcx
	jne	0x100013859
	jmp	0x100013872
	movl	$11, %esi
	testq	%rcx, %rcx
	jne	0x10001377d
	jmp	0x100013791
	movl	$9, %esi
	testq	%rcx, %rcx
	jne	0x10001377d
	jmp	0x100013791
	movl	$12, %esi
	testq	%rcx, %rcx
	jne	0x10001377d
	jmp	0x100013791
	movq	%rax, %rbx
	movsbl	%sil, %esi
	testq	%rcx, %rcx
	je	0x100013872
	movq	%rcx, %rdi
	callq	0x10002961a ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSEc
	jmp	0x10001379c
	movq	%rax, %rbx
	movsbl	%sil, %esi
	testq	%rcx, %rcx
	jne	0x100013859
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_charEc ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_char(char)
	jmp	0x10001379c
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$3, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	112683(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	112548(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$3, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x100013896
	jmp	0x1000138ca
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax)
	.byte 0x82 #bad opcode
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	incl	-587202562(%rdx)
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	incl	-587202562(%rdx)
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	incl	%esp
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	callq	*%rax
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	lcalll	*-1(%rdx)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	callq	*-587202562(%rbx)
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	jmpq	*-587202562(%rdi)
	.byte 0xfe #bad opcode
	.byte 0xff #bad opcode
	incl	-1(%rdi)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivr	%st(0), %st(6)
	.byte 0xff #bad opcode
	pushq	(%rdi,%rdi,8)
	.byte 0xff #bad opcode
	jmpq	*102(%rsi)
	nopw	%cs:(%rax,%rax)
__ZNKSt3__112regex_traitsIcE20__lookup_collatenameINS_11__wrap_iterIPKcEEEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEET_SD_c:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	movq	%rcx, %r12
	movq	%rdx, %rbx
	movq	%rsi, %r13
	movq	%rdi, %r15
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movq	%r12, %r14
	subq	%rbx, %r14
	cmpq	$-16, %r14
	jae	0x100013d75
	cmpq	$22, %r14
	ja	0x100013aa5
	movl	%r14d, %eax
	addb	%al, %al
	movb	%al, -64(%rbp)
	leaq	-63(%rbp), %rax
	cmpq	%r12, %rbx
	je	0x100013bc3
	cmpq	$32, %r14
	jae	0x100013add
	movq	%rax, %rdx
	jmp	0x100013bb0
	movq	%r15, -96(%rbp)
	movq	%r13, %r15
	leaq	16(%r14), %r13
	andq	$-16, %r13
	movq	%r13, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, -48(%rbp)
	orq	$1, %r13
	movq	%r13, -64(%rbp)
	movq	%r15, %r13
	movq	-96(%rbp), %r15
	movq	%r14, -56(%rbp)
	cmpq	%r12, %rbx
	jne	0x100013a97
	jmp	0x100013bc3
	movq	%r14, %rcx
	andq	$-32, %rcx
	leaq	-32(%rcx), %rdi
	movq	%rdi, %rsi
	shrq	$5, %rsi
	leal	1(%rsi), %edx
	andl	$3, %edx
	cmpq	$96, %rdi
	jae	0x100013b07
	xorl	%esi, %esi
	testq	%rdx, %rdx
	jne	0x100013b6d
	jmp	0x100013b9b
	leaq	-1(%rdx), %rdi
	subq	%rsi, %rdi
	xorl	%esi, %esi
	movups	(%rbx,%rsi), %xmm0
	movups	16(%rbx,%rsi), %xmm1
	movups	%xmm0, (%rax,%rsi)
	movups	%xmm1, 16(%rax,%rsi)
	movups	32(%rbx,%rsi), %xmm0
	movups	48(%rbx,%rsi), %xmm1
	movups	%xmm0, 32(%rax,%rsi)
	movups	%xmm1, 48(%rax,%rsi)
	movups	64(%rbx,%rsi), %xmm0
	movups	80(%rbx,%rsi), %xmm1
	movups	%xmm0, 64(%rax,%rsi)
	movups	%xmm1, 80(%rax,%rsi)
	movups	96(%rbx,%rsi), %xmm0
	movups	112(%rbx,%rsi), %xmm1
	movups	%xmm0, 96(%rax,%rsi)
	movups	%xmm1, 112(%rax,%rsi)
	subq	$-128, %rsi
	addq	$4, %rdi
	jne	0x100013b10
	testq	%rdx, %rdx
	je	0x100013b9b
	leaq	16(%rbx,%rsi), %rdi
	leaq	16(%rax,%rsi), %rsi
	negq	%rdx
	nopw	(%rax,%rax)
	movups	-16(%rdi), %xmm0
	movups	(%rdi), %xmm1
	movups	%xmm0, -16(%rsi)
	movups	%xmm1, (%rsi)
	addq	$32, %rdi
	addq	$32, %rsi
	incq	%rdx
	jne	0x100013b80
	cmpq	%rcx, %r14
	je	0x100013bc0
	leaq	(%rax,%rcx), %rdx
	addq	%rcx, %rbx
	nopw	(%rax,%rax)
	movzbl	(%rbx), %ecx
	movb	%cl, (%rdx)
	incq	%rbx
	incq	%rdx
	cmpq	%rbx, %r12
	jne	0x100013bb0
	addq	%r14, %rax
	movb	$0, (%rax)
	movq	$0, 16(%r15)
	movq	$0, 8(%r15)
	movq	$0, (%r15)
	movzbl	-64(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	-56(%rbp), %rcx
	testq	%rcx, %rcx
	je	0x100013d2b
	testb	$1, %al
	leaq	-63(%rbp), %rbx
	movq	-48(%rbp), %rsi
	cmoveq	%rbx, %rsi
	leaq	-88(%rbp), %rdi
	callq	0x1000296aa ## symbol stub for: __ZNSt3__120__get_collation_nameEPKc
	testb	$1, (%r15)
	jne	0x100013c1c
	movw	$0, (%r15)
	jmp	0x100013c2b
	movq	16(%r15), %rax
	movb	$0, (%rax)
	movq	$0, 8(%r15)
	xorl	%esi, %esi
	movq	%r15, %rdi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	movq	-88(%rbp), %rax
	movq	-80(%rbp), %rcx
	movq	%rax, (%r15)
	movq	-72(%rbp), %rax
	movq	%rax, 16(%r15)
	movq	%rcx, 8(%r15)
	movzbl	(%r15), %eax
	testb	$1, %al
	jne	0x100013c62
	shrq	%rax
	testq	%rax, %rax
	jne	0x100013d2b
	jmp	0x100013c6f
	movq	8(%r15), %rax
	testq	%rax, %rax
	jne	0x100013d2b
	movzbl	-64(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	-56(%rbp), %rcx
	cmpq	$2, %rcx
	ja	0x100013d2b
	testb	$1, %al
	movq	16(%r13), %rsi
	cmovneq	-48(%rbp), %rbx
	addq	%rbx, %rcx
	movq	(%rsi), %rax
	leaq	-88(%rbp), %rdi
	movq	%rbx, %rdx
	callq	*32(%rax)
	testb	$1, (%r15)
	jne	0x100013cb3
	movw	$0, (%r15)
	jmp	0x100013cc2
	movq	16(%r15), %rax
	movb	$0, (%rax)
	movq	$0, 8(%r15)
	xorl	%esi, %esi
	movq	%r15, %rdi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	movq	-88(%rbp), %rax
	movq	-80(%rbp), %rcx
	movq	%rax, (%r15)
	movq	-72(%rbp), %rax
	movq	%rax, 16(%r15)
	movq	%rcx, 8(%r15)
	movzbl	(%r15), %eax
	testb	$1, %al
	jne	0x100013d09
	movq	%rax, %rcx
	shrq	%rcx
	cmpq	$1, %rcx
	je	0x100013d1f
	testb	$1, %al
	jne	0x100013d15
	movq	%rax, %rcx
	shrq	%rcx
	cmpq	$12, %rcx
	je	0x100013d1f
	jmp	0x100013d4c
	movq	8(%r15), %rcx
	cmpq	$1, %rcx
	jne	0x100013cf7
	jmp	0x100013d1f
	movq	8(%r15), %rcx
	cmpq	$12, %rcx
	jne	0x100013d4c
	leaq	-64(%rbp), %rsi
	movq	%r15, %rdi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	testb	$1, -64(%rbp)
	je	0x100013d3a
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rax
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	testb	$1, %al
	jne	0x100013d5e
	movw	$0, (%r15)
	testb	$1, -64(%rbp)
	jne	0x100013d31
	jmp	0x100013d3a
	movq	16(%r15), %rax
	movb	$0, (%rax)
	movq	$0, 8(%r15)
	testb	$1, -64(%rbp)
	jne	0x100013d31
	jmp	0x100013d3a
	leaq	-64(%rbp), %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	testb	$1, (%r15)
	jne	0x100013dad
	jmp	0x100013db6
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rbx
	testb	$1, (%r15)
	jne	0x100013dad
	jmp	0x100013db6
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rbx
	testb	$1, (%r15)
	je	0x100013db6
	movq	16(%r15), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	jne	0x100013dc4
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNKSt3__112regex_traitsIcE19__transform_primaryINS_11__wrap_iterIPcEEEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEET_SC_c:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	movq	%rcx, %r12
	movq	%rdx, %rbx
	movq	%rdi, %r15
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movq	%r12, %r14
	subq	%rbx, %r14
	cmpq	$-16, %r14
	jae	0x10001401d
	cmpq	$22, %r14
	ja	0x100013e42
	movl	%r14d, %eax
	addb	%al, %al
	movb	%al, -64(%rbp)
	leaq	-63(%rbp), %rax
	cmpq	%r12, %rbx
	je	0x100013f63
	cmpq	$32, %r14
	jae	0x100013e7a
	movq	%rax, %rdx
	jmp	0x100013f50
	leaq	16(%r14), %r13
	andq	$-16, %r13
	movq	%r13, %rdi
	movq	%r15, -72(%rbp)
	movq	%rsi, %r15
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%r15, %rsi
	movq	-72(%rbp), %r15
	movq	%rax, -48(%rbp)
	orq	$1, %r13
	movq	%r13, -64(%rbp)
	movq	%r14, -56(%rbp)
	cmpq	%r12, %rbx
	jne	0x100013e34
	jmp	0x100013f63
	movq	%r14, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rdi
	movq	%rdi, %rcx
	shrq	$5, %rcx
	leal	1(%rcx), %edx
	andl	$3, %edx
	cmpq	$96, %rdi
	jae	0x100013ea4
	xorl	%ecx, %ecx
	testq	%rdx, %rdx
	jne	0x100013f0d
	jmp	0x100013f3b
	leaq	-1(%rdx), %rdi
	subq	%rcx, %rdi
	xorl	%ecx, %ecx
	nopl	(%rax)
	movups	(%rbx,%rcx), %xmm0
	movups	16(%rbx,%rcx), %xmm1
	movups	%xmm0, (%rax,%rcx)
	movups	%xmm1, 16(%rax,%rcx)
	movups	32(%rbx,%rcx), %xmm0
	movups	48(%rbx,%rcx), %xmm1
	movups	%xmm0, 32(%rax,%rcx)
	movups	%xmm1, 48(%rax,%rcx)
	movups	64(%rbx,%rcx), %xmm0
	movups	80(%rbx,%rcx), %xmm1
	movups	%xmm0, 64(%rax,%rcx)
	movups	%xmm1, 80(%rax,%rcx)
	movups	96(%rbx,%rcx), %xmm0
	movups	112(%rbx,%rcx), %xmm1
	movups	%xmm0, 96(%rax,%rcx)
	movups	%xmm1, 112(%rax,%rcx)
	subq	$-128, %rcx
	addq	$4, %rdi
	jne	0x100013eb0
	testq	%rdx, %rdx
	je	0x100013f3b
	leaq	16(%rbx,%rcx), %rdi
	leaq	16(%rax,%rcx), %rcx
	negq	%rdx
	nopw	(%rax,%rax)
	movups	-16(%rdi), %xmm0
	movups	(%rdi), %xmm1
	movups	%xmm0, -16(%rcx)
	movups	%xmm1, (%rcx)
	addq	$32, %rdi
	addq	$32, %rcx
	incq	%rdx
	jne	0x100013f20
	cmpq	%r8, %r14
	je	0x100013f60
	leaq	(%rax,%r8), %rdx
	addq	%r8, %rbx
	nopw	(%rax,%rax)
	movzbl	(%rbx), %ecx
	movb	%cl, (%rdx)
	incq	%rbx
	incq	%rdx
	cmpq	%rbx, %r12
	jne	0x100013f50
	addq	%r14, %rax
	movb	$0, (%rax)
	movq	16(%rsi), %rsi
	movzbl	-64(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	andb	$1, %al
	leaq	-63(%rbp), %rdx
	cmovneq	-48(%rbp), %rdx
	testb	%al, %al
	cmovneq	-56(%rbp), %rcx
	addq	%rdx, %rcx
	movq	(%rsi), %rax
	movq	%r15, %rdi
	callq	*32(%rax)
	movzbl	(%r15), %eax
	testb	$1, %al
	jne	0x100013fba
	movq	%rax, %rcx
	shrq	%rcx
	cmpq	$1, %rcx
	je	0x100013fe5
	cmpq	$12, %rcx
	jne	0x100013fc6
	testb	$1, %al
	jne	0x100013fd8
	leaq	4(%r15), %rcx
	leaq	1(%r15), %rax
	jmp	0x100013fe0
	movq	8(%r15), %rcx
	cmpq	$1, %rcx
	jne	0x100013fa6
	jmp	0x100013fe5
	testb	$1, %al
	jne	0x100014006
	movw	$0, (%r15)
	testb	$1, -64(%rbp)
	jne	0x100013feb
	jmp	0x100013ff4
	movq	16(%r15), %rax
	leaq	3(%rax), %rcx
	movb	(%rcx), %cl
	movb	%cl, 11(%rax)
	testb	$1, -64(%rbp)
	je	0x100013ff4
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rax
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	16(%r15), %rax
	movb	$0, (%rax)
	movq	$0, 8(%r15)
	testb	$1, -64(%rbp)
	jne	0x100013feb
	jmp	0x100013ff4
	leaq	-64(%rbp), %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x100014038
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r14
	movq	%rdi, %r15
	movabsq	$768614336404564650, %r13
	movq	(%r15), %rdx
	movq	8(%r15), %rbx
	subq	%rdx, %rbx
	sarq	$3, %rbx
	movabsq	$-6148914691236517205, %rsi
	imulq	%rsi, %rbx
	leaq	1(%rbx), %rax
	cmpq	%r13, %rax
	ja	0x1000141b0
	movq	16(%r15), %rcx
	subq	%rdx, %rcx
	sarq	$3, %rcx
	imulq	%rsi, %rcx
	movabsq	$384307168202282324, %rdx
	cmpq	%rdx, %rcx
	ja	0x1000140bb
	addq	%rcx, %rcx
	cmpq	%rax, %rcx
	cmovbq	%rax, %rcx
	testq	%rcx, %rcx
	movq	%rcx, %r13
	je	0x1000141a5
	leaq	(,%r13,8), %rax
	leaq	(%rax,%rax,2), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r12
	leaq	(%rbx,%rbx,2), %rax
	leaq	(%r12,%rax,8), %rbx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	leaq	(%r13,%r13,2), %rax
	leaq	(%r12,%rax,8), %r8
	leaq	24(%rbx), %rdx
	movq	(%r15), %rax
	movq	8(%r15), %rsi
	cmpq	%rax, %rsi
	je	0x100014146
	nopl	(%rax,%rax)
	movq	-8(%rsi), %rdi
	movq	%rdi, -8(%rbx)
	movq	-24(%rsi), %rdi
	movq	-16(%rsi), %rcx
	movq	%rcx, -16(%rbx)
	movq	%rdi, -24(%rbx)
	movq	$0, -8(%rsi)
	movq	$0, -16(%rsi)
	movq	$0, -24(%rsi)
	leaq	-24(%rsi), %rsi
	addq	$-24, %rbx
	cmpq	%rsi, %rax
	jne	0x100014100
	movq	(%r15), %r14
	movq	8(%r15), %rax
	jmp	0x100014149
	movq	%rax, %r14
	movq	%rbx, (%r15)
	movq	%rdx, 8(%r15)
	movq	%r8, 16(%r15)
	cmpq	%r14, %rax
	je	0x10001417b
	nopl	(%rax)
	leaq	-24(%rax), %rbx
	testb	$1, -24(%rax)
	je	0x100014173
	movq	-8(%rax), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r14
	movq	%rbx, %rax
	jne	0x100014160
	testq	%r14, %r14
	je	0x100014196
	movq	%r14, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%r13d, %r13d
	xorl	%r12d, %r12d
	jmp	0x1000140cf
	movq	%r15, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	testq	%r12, %r12
	je	0x1000141c8
	movq	%r12, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
__ZNKSt3__112regex_traitsIcE18__lookup_classnameINS_11__wrap_iterIPKcEEEEjT_S7_bc:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	movl	%ecx, %r13d
	movq	%rdx, %r12
	movq	%rsi, %rbx
	movq	%rdi, %r15
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movq	%r12, %r14
	subq	%rbx, %r14
	cmpq	$-16, %r14
	jae	0x1000143b9
	cmpq	$22, %r14
	ja	0x100014235
	movl	%r14d, %eax
	addb	%al, %al
	movb	%al, -64(%rbp)
	leaq	-63(%rbp), %rax
	cmpq	%r12, %rbx
	je	0x100014353
	cmpq	$32, %r14
	jae	0x100014267
	movq	%rax, %rdx
	jmp	0x100014340
	movl	%r13d, -68(%rbp)
	leaq	16(%r14), %r13
	andq	$-16, %r13
	movq	%r13, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, -48(%rbp)
	orq	$1, %r13
	movq	%r13, -64(%rbp)
	movl	-68(%rbp), %r13d
	movq	%r14, -56(%rbp)
	cmpq	%r12, %rbx
	jne	0x100014227
	jmp	0x100014353
	movq	%r14, %rcx
	andq	$-32, %rcx
	leaq	-32(%rcx), %rdi
	movq	%rdi, %rsi
	shrq	$5, %rsi
	leal	1(%rsi), %edx
	andl	$3, %edx
	cmpq	$96, %rdi
	jae	0x100014291
	xorl	%esi, %esi
	testq	%rdx, %rdx
	jne	0x1000142fd
	jmp	0x10001432b
	leaq	-1(%rdx), %rdi
	subq	%rsi, %rdi
	xorl	%esi, %esi
	nopw	(%rax,%rax)
	movups	(%rbx,%rsi), %xmm0
	movups	16(%rbx,%rsi), %xmm1
	movups	%xmm0, (%rax,%rsi)
	movups	%xmm1, 16(%rax,%rsi)
	movups	32(%rbx,%rsi), %xmm0
	movups	48(%rbx,%rsi), %xmm1
	movups	%xmm0, 32(%rax,%rsi)
	movups	%xmm1, 48(%rax,%rsi)
	movups	64(%rbx,%rsi), %xmm0
	movups	80(%rbx,%rsi), %xmm1
	movups	%xmm0, 64(%rax,%rsi)
	movups	%xmm1, 80(%rax,%rsi)
	movups	96(%rbx,%rsi), %xmm0
	movups	112(%rbx,%rsi), %xmm1
	movups	%xmm0, 96(%rax,%rsi)
	movups	%xmm1, 112(%rax,%rsi)
	subq	$-128, %rsi
	addq	$4, %rdi
	jne	0x1000142a0
	testq	%rdx, %rdx
	je	0x10001432b
	leaq	16(%rbx,%rsi), %rdi
	leaq	16(%rax,%rsi), %rsi
	negq	%rdx
	nopw	(%rax,%rax)
	movups	-16(%rdi), %xmm0
	movups	(%rdi), %xmm1
	movups	%xmm0, -16(%rsi)
	movups	%xmm1, (%rsi)
	addq	$32, %rdi
	addq	$32, %rsi
	incq	%rdx
	jne	0x100014310
	cmpq	%rcx, %r14
	je	0x100014350
	leaq	(%rax,%rcx), %rdx
	addq	%rcx, %rbx
	nopw	(%rax,%rax)
	movzbl	(%rbx), %ecx
	movb	%cl, (%rdx)
	incq	%rbx
	incq	%rdx
	cmpq	%rbx, %r12
	jne	0x100014340
	addq	%r14, %rax
	movb	$0, (%rax)
	movq	8(%r15), %rdi
	movzbl	-64(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	leaq	-63(%rbp), %rbx
	movq	-48(%rbp), %rsi
	cmoveq	%rbx, %rsi
	testb	%al, %al
	cmovneq	-56(%rbp), %rdx
	addq	%rsi, %rdx
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	$1, -64(%rbp)
	cmovneq	-48(%rbp), %rbx
	movzbl	%r13b, %esi
	movq	%rbx, %rdi
	callq	0x100029668 ## symbol stub for: __ZNSt3__115__get_classnameEPKcb
	movl	%eax, %ebx
	testb	$1, -64(%rbp)
	je	0x1000143a8
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movl	%ebx, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	leaq	-64(%rbp), %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x1000143d4
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax)
__ZNKSt3__112regex_traitsIcE9transformINS_11__wrap_iterIPcEEEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEET_SC_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	movq	%rcx, %r12
	movq	%rdx, %rbx
	movq	%rdi, %r15
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movq	%r12, %r14
	subq	%rbx, %r14
	cmpq	$-16, %r14
	jae	0x1000145b3
	cmpq	$22, %r14
	ja	0x100014442
	movl	%r14d, %eax
	addb	%al, %al
	movb	%al, -64(%rbp)
	leaq	-63(%rbp), %rax
	cmpq	%r12, %rbx
	je	0x100014563
	cmpq	$32, %r14
	jae	0x10001447a
	movq	%rax, %rdx
	jmp	0x100014550
	leaq	16(%r14), %r13
	andq	$-16, %r13
	movq	%r13, %rdi
	movq	%r15, -72(%rbp)
	movq	%rsi, %r15
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%r15, %rsi
	movq	-72(%rbp), %r15
	movq	%rax, -48(%rbp)
	orq	$1, %r13
	movq	%r13, -64(%rbp)
	movq	%r14, -56(%rbp)
	cmpq	%r12, %rbx
	jne	0x100014434
	jmp	0x100014563
	movq	%r14, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rdi
	movq	%rdi, %rcx
	shrq	$5, %rcx
	leal	1(%rcx), %edx
	andl	$3, %edx
	cmpq	$96, %rdi
	jae	0x1000144a4
	xorl	%ecx, %ecx
	testq	%rdx, %rdx
	jne	0x10001450d
	jmp	0x10001453b
	leaq	-1(%rdx), %rdi
	subq	%rcx, %rdi
	xorl	%ecx, %ecx
	nopl	(%rax)
	movups	(%rbx,%rcx), %xmm0
	movups	16(%rbx,%rcx), %xmm1
	movups	%xmm0, (%rax,%rcx)
	movups	%xmm1, 16(%rax,%rcx)
	movups	32(%rbx,%rcx), %xmm0
	movups	48(%rbx,%rcx), %xmm1
	movups	%xmm0, 32(%rax,%rcx)
	movups	%xmm1, 48(%rax,%rcx)
	movups	64(%rbx,%rcx), %xmm0
	movups	80(%rbx,%rcx), %xmm1
	movups	%xmm0, 64(%rax,%rcx)
	movups	%xmm1, 80(%rax,%rcx)
	movups	96(%rbx,%rcx), %xmm0
	movups	112(%rbx,%rcx), %xmm1
	movups	%xmm0, 96(%rax,%rcx)
	movups	%xmm1, 112(%rax,%rcx)
	subq	$-128, %rcx
	addq	$4, %rdi
	jne	0x1000144b0
	testq	%rdx, %rdx
	je	0x10001453b
	leaq	16(%rbx,%rcx), %rdi
	leaq	16(%rax,%rcx), %rcx
	negq	%rdx
	nopw	(%rax,%rax)
	movups	-16(%rdi), %xmm0
	movups	(%rdi), %xmm1
	movups	%xmm0, -16(%rcx)
	movups	%xmm1, (%rcx)
	addq	$32, %rdi
	addq	$32, %rcx
	incq	%rdx
	jne	0x100014520
	cmpq	%r8, %r14
	je	0x100014560
	leaq	(%rax,%r8), %rdx
	addq	%r8, %rbx
	nopw	(%rax,%rax)
	movzbl	(%rbx), %ecx
	movb	%cl, (%rdx)
	incq	%rbx
	incq	%rdx
	cmpq	%rbx, %r12
	jne	0x100014550
	addq	%r14, %rax
	movb	$0, (%rax)
	movq	16(%rsi), %rsi
	movzbl	-64(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	andb	$1, %al
	leaq	-63(%rbp), %rdx
	cmovneq	-48(%rbp), %rdx
	testb	%al, %al
	cmovneq	-56(%rbp), %rcx
	addq	%rdx, %rcx
	movq	(%rsi), %rax
	movq	%r15, %rdi
	callq	*32(%rax)
	testb	$1, -64(%rbp)
	je	0x1000145a1
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rax
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	leaq	-64(%rbp), %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x1000145ce
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE21__push_back_slow_pathIS8_EEvOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movabsq	$384307168202282325, %r12
	movq	(%r14), %rdx
	movq	8(%r14), %r15
	subq	%rdx, %r15
	sarq	$4, %r15
	movabsq	$-6148914691236517205, %rsi
	imulq	%rsi, %r15
	leaq	1(%r15), %rax
	cmpq	%r12, %rax
	ja	0x100014801
	movq	16(%r14), %rcx
	subq	%rdx, %rcx
	sarq	$4, %rcx
	imulq	%rsi, %rcx
	movabsq	$192153584101141161, %rdx
	cmpq	%rdx, %rcx
	ja	0x100014658
	addq	%rcx, %rcx
	cmpq	%rax, %rcx
	cmovbq	%rax, %rcx
	testq	%rcx, %rcx
	movq	%rcx, %r12
	je	0x1000147f7
	movq	%r12, %rax
	shlq	$4, %rax
	leaq	(%rax,%rax,2), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	leaq	(%r15,%r15,2), %rsi
	shlq	$4, %rsi
	leaq	(%rax,%rsi), %rdx
	leaq	(%r12,%r12,2), %r8
	shlq	$4, %r8
	addq	%rax, %r8
	movq	16(%rbx), %rdi
	movq	%rdi, 16(%rax,%rsi)
	movq	(%rbx), %rdi
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rax,%rsi)
	movq	%rdi, (%rax,%rsi)
	movq	$0, 16(%rbx)
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	movq	40(%rbx), %rcx
	movq	%rcx, 40(%rax,%rsi)
	movq	24(%rbx), %rcx
	movq	32(%rbx), %rdi
	movq	%rdi, 32(%rax,%rsi)
	movq	%rcx, 24(%rax,%rsi)
	movq	$0, 40(%rbx)
	movq	$0, 32(%rbx)
	movq	$0, 24(%rbx)
	leaq	48(%rax,%rsi), %rax
	movq	(%r14), %r12
	movq	8(%r14), %rsi
	cmpq	%r12, %rsi
	je	0x100014776
	nopw	(%rax,%rax)
	movq	-32(%rsi), %rcx
	movq	%rcx, -32(%rdx)
	movq	-48(%rsi), %rcx
	movq	-40(%rsi), %rdi
	movq	%rdi, -40(%rdx)
	movq	%rcx, -48(%rdx)
	movq	$0, -32(%rsi)
	movq	$0, -40(%rsi)
	movq	$0, -48(%rsi)
	movq	-8(%rsi), %rcx
	movq	%rcx, -8(%rdx)
	movq	-24(%rsi), %rcx
	movq	-16(%rsi), %rdi
	movq	%rdi, -16(%rdx)
	movq	%rcx, -24(%rdx)
	movq	$0, -8(%rsi)
	movq	$0, -16(%rsi)
	movq	$0, -24(%rsi)
	leaq	-48(%rsi), %rsi
	addq	$-48, %rdx
	cmpq	%rsi, %r12
	jne	0x100014700
	movq	(%r14), %r15
	movq	8(%r14), %r12
	jmp	0x100014779
	movq	%r12, %r15
	movq	%rdx, (%r14)
	movq	%rax, 8(%r14)
	movq	%r8, 16(%r14)
	cmpq	%r15, %r12
	je	0x1000147d9
	nopl	(%rax)
	testb	$1, -24(%r12)
	jne	0x1000147b0
	leaq	-48(%r12), %rbx
	testb	$1, -48(%r12)
	jne	0x1000147c7
	cmpq	%rbx, %r15
	movq	%rbx, %r12
	jne	0x100014790
	jmp	0x1000147d9
	nop
	movq	-8(%r12), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-48(%r12), %rbx
	testb	$1, -48(%r12)
	je	0x1000147a5
	movq	-32(%r12), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r15
	movq	%rbx, %r12
	jne	0x100014790
	testq	%r15, %r15
	je	0x1000147ee
	movq	%r15, %rdi
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%r12d, %r12d
	xorl	%eax, %eax
	jmp	0x100014668
	movq	%r14, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	nopl	(%rax)
__ZNSt3__16vectorINS_4pairIccEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rdi, %r15
	movq	(%r15), %r8
	movq	8(%r15), %r12
	subq	%r8, %r12
	cmpq	$-3, %r12
	jle	0x100014901
	movq	%r12, %r13
	sarq	%r13
	leaq	1(%r13), %rax
	movq	16(%r15), %rcx
	subq	%r8, %rcx
	movq	%rcx, %rdx
	sarq	%rdx
	cmpq	%rax, %rcx
	cmovbq	%rax, %rcx
	movabsq	$4611686018427387903, %rax
	cmpq	%rax, %rdx
	movabsq	$9223372036854775807, %r14
	cmovbq	%rcx, %r14
	testq	%r14, %r14
	je	0x10001489a
	movq	%rsi, -48(%rbp)
	movq	%r8, -56(%rbp)
	js	0x100014909
	leaq	(%r14,%r14), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	-56(%rbp), %r8
	movq	-48(%rbp), %rsi
	jmp	0x10001489c
	xorl	%ebx, %ebx
	leaq	(%rbx,%r14,2), %rcx
	movzwl	(%rsi), %eax
	movw	%ax, (%rbx,%r13,2)
	leaq	2(%rbx,%r13,2), %r13
	testq	%r12, %r12
	jle	0x1000148cc
	movq	%rbx, %rdi
	movq	%r8, %r14
	movq	%r14, %rsi
	movq	%r12, %rdx
	movq	%rcx, %r12
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r12, %rcx
	movq	%r14, %r8
	movq	%rbx, (%r15)
	movq	%r13, 8(%r15)
	movq	%rcx, 16(%r15)
	testq	%r8, %r8
	je	0x1000148f2
	movq	%r8, %rdi
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r15, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	104089(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	108748(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	108438(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	108287(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax)
__ZNKSt3__128__begin_marked_subexpressionIcE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$4294966302, (%rsi)
	movl	16(%rdi), %eax
	decl	%eax
	movq	16(%rsi), %rcx
	movq	32(%rsi), %rdx
	leaq	(%rax,%rax,2), %rax
	movq	%rcx, (%rdx,%rax,8)
	movq	8(%rdi), %rax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	nopl	(%rax)
__ZNKSt3__126__end_marked_subexpressionIcE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$4294966302, (%rsi)
	movl	16(%rdi), %eax
	decl	%eax
	movq	16(%rsi), %rcx
	movq	32(%rsi), %rdx
	leaq	(%rax,%rax,2), %rax
	movq	%rcx, 8(%rdx,%rax,8)
	movb	$1, 16(%rdx,%rax,8)
	movq	8(%rdi), %rax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	nop
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_loopEmmPNS_16__owns_one_stateIcEEmmb:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	movq	%r9, -72(%rbp)
	movq	%r8, -64(%rbp)
	movq	%rcx, %r12
	movq	%rdx, -56(%rbp)
	movq	%rsi, -48(%rbp)
	movq	%rdi, %r15
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r14
	movq	56(%r15), %rax
	movq	8(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	108353(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, (%r14)
	movq	$0, 8(%rax)
	movl	$56, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movb	16(%rbp), %al
	movl	32(%r15), %r13d
	movq	8(%r12), %rcx
	movq	%rcx, 8(%rbx)
	movq	%r14, 16(%rbx)
	movq	108466(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, (%rbx)
	movq	-48(%rbp), %rcx
	movq	%rcx, 24(%rbx)
	movq	-56(%rbp), %rcx
	movq	%rcx, 32(%rbx)
	movl	%r13d, 40(%rbx)
	movq	-64(%rbp), %rcx
	movl	%ecx, 44(%rbx)
	movq	-72(%rbp), %rcx
	movl	%ecx, 48(%rbx)
	movb	%al, 52(%rbx)
	movq	$0, 8(%r12)
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rbx, 8(%rax)
	movq	108296(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, (%rax)
	movq	56(%r15), %rcx
	movq	%rax, 8(%rcx)
	movq	16(%rbx), %rax
	movq	%rax, 56(%r15)
	movq	%rbx, 8(%r12)
	incl	%r13d
	movl	%r13d, 32(%r15)
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %r15
	movq	108228(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	108206(%rip), %r12
	addq	$16, %r12
	movq	%r12, (%r14)
	movq	8(%r14), %rdi
	testq	%rdi, %rdi
	je	0x100014ae8
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	%r14, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	8(%rbx), %rdi
	movq	%r12, (%rbx)
	testq	%rdi, %rdi
	je	0x100014b02
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %r15
	movq	108132(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%r14)
	movq	8(%r14), %rdi
	testq	%rdi, %rdi
	je	0x100014b32
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	%r14, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__117__owns_two_statesIcED1Ev:
__ZNSt3__111__alternateIcED1Ev:
__ZNSt3__16__loopIcED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	108072(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	16(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100014b76
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	108035(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100014b99
	movq	(%rdi), %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmpq	*8(%rax)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
__ZNSt3__117__owns_two_statesIcED0Ev:
__ZNSt3__111__alternateIcED0Ev:
__ZNSt3__16__loopIcED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	107992(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	16(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100014bc6
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	107955(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100014be3
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopw	%cs:(%rax,%rax)
__ZNKSt3__16__loopIcE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	40(%rdi), %eax
	movq	56(%rsi), %r8
	shlq	$4, %rax
	leaq	(%r8,%rax), %rcx
	cmpl	$4294966305, (%rsi)
	jne	0x100014c6b
	movq	(%rcx), %rdx
	incq	%rdx
	movq	%rdx, (%rcx)
	movq	24(%rdi), %r9
	movq	32(%rdi), %rcx
	cmpq	%rcx, %rdx
	setb	%r10b
	cmpq	%r9, %rdx
	jb	0x100014c51
	cmpq	%rcx, %rdx
	jae	0x100014c51
	setb	%r11b
	movq	8(%r8,%rax), %rcx
	cmpq	16(%rsi), %rcx
	setne	%r10b
	andb	%r11b, %r10b
	cmpq	%r9, %rdx
	jb	0x100014d26
	testb	%r10b, %r10b
	je	0x100014d26
	movl	$4294966304, (%rsi)
	popq	%rbp
	retq
	movq	$0, (%rcx)
	cmpq	$0, 32(%rdi)
	je	0x100014dc3
	cmpq	$0, 24(%rdi)
	je	0x100014dd3
	movl	$4294966302, (%rsi)
	movq	8(%rdi), %rcx
	movq	%rcx, 80(%rsi)
	movq	16(%rsi), %rcx
	movq	%rcx, 8(%r8,%rax)
	movl	44(%rdi), %edx
	movl	48(%rdi), %eax
	cmpl	%eax, %edx
	je	0x100014dc1
	decl	%edx
	movq	24(%rsi), %rcx
	movq	32(%rsi), %rsi
	decl	%eax
	movl	%eax, %edi
	subl	%edx, %edi
	leaq	-1(%rax), %r8
	testb	$1, %dil
	movq	%rdx, %rdi
	je	0x100014ce0
	leaq	(%rdx,%rdx,2), %rdi
	movq	%rcx, (%rsi,%rdi,8)
	movq	%rcx, 8(%rsi,%rdi,8)
	movb	$0, 16(%rsi,%rdi,8)
	leaq	1(%rdx), %rdi
	cmpq	%rdx, %r8
	je	0x100014dc1
	subq	%rdi, %rax
	leaq	(%rdi,%rdi,2), %rdx
	leaq	40(%rsi,%rdx,8), %rdx
	nopw	%cs:(%rax,%rax)
	movq	%rcx, -40(%rdx)
	movq	%rcx, -32(%rdx)
	movb	$0, -24(%rdx)
	movq	%rcx, -16(%rdx)
	movq	%rcx, -8(%rdx)
	movb	$0, (%rdx)
	addq	$48, %rdx
	addq	$-2, %rax
	jne	0x100014d00
	jmp	0x100014dc1
	movl	$4294966302, (%rsi)
	testb	%r10b, %r10b
	je	0x100014dc9
	movq	8(%rdi), %rcx
	movq	%rcx, 80(%rsi)
	movq	16(%rsi), %rcx
	movq	%rcx, 8(%r8,%rax)
	movl	44(%rdi), %edx
	movl	48(%rdi), %eax
	cmpl	%eax, %edx
	je	0x100014dc1
	decl	%edx
	movq	24(%rsi), %rcx
	movq	32(%rsi), %rsi
	decl	%eax
	movl	%eax, %edi
	subl	%edx, %edi
	leaq	-1(%rax), %r8
	testb	$1, %dil
	movq	%rdx, %rdi
	je	0x100014d83
	leaq	(%rdx,%rdx,2), %rdi
	movq	%rcx, (%rsi,%rdi,8)
	movq	%rcx, 8(%rsi,%rdi,8)
	movb	$0, 16(%rsi,%rdi,8)
	leaq	1(%rdx), %rdi
	cmpq	%rdx, %r8
	je	0x100014dc1
	subq	%rdi, %rax
	leaq	(%rdi,%rdi,2), %rdx
	leaq	40(%rsi,%rdx,8), %rdx
	nopw	%cs:(%rax,%rax)
	movq	%rcx, -40(%rdx)
	movq	%rcx, -32(%rdx)
	movb	$0, -24(%rdx)
	movq	%rcx, -16(%rdx)
	movq	%rcx, -8(%rdx)
	movb	$0, (%rdx)
	addq	$48, %rdx
	addq	$-2, %rax
	jne	0x100014da0
	popq	%rbp
	retq
	movl	$4294966302, (%rsi)
	movq	16(%rdi), %rax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	movl	$4294966304, (%rsi)
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZNKSt3__16__loopIcE12__exec_splitEbRNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$4294966302, (%rdx)
	movzbl	52(%rdi), %eax
	movzbl	%sil, %ecx
	cmpl	%ecx, %eax
	jne	0x100014e00
	movq	16(%rdi), %rax
	movq	%rax, 80(%rdx)
	popq	%rbp
	retq
	movq	8(%rdi), %rax
	movq	%rax, 80(%rdx)
	movl	40(%rdi), %eax
	movq	16(%rdx), %rcx
	movq	56(%rdx), %rsi
	shlq	$4, %rax
	movq	%rcx, 8(%rsi,%rax)
	movl	44(%rdi), %esi
	movl	48(%rdi), %eax
	cmpl	%eax, %esi
	je	0x100014e91
	decl	%esi
	movq	24(%rdx), %rcx
	movq	32(%rdx), %rdx
	decl	%eax
	movl	%eax, %edi
	subl	%esi, %edi
	leaq	-1(%rax), %r8
	testb	$1, %dil
	movq	%rsi, %rdi
	je	0x100014e59
	leaq	(%rsi,%rsi,2), %rdi
	movq	%rcx, (%rdx,%rdi,8)
	movq	%rcx, 8(%rdx,%rdi,8)
	movb	$0, 16(%rdx,%rdi,8)
	leaq	1(%rsi), %rdi
	cmpq	%rsi, %r8
	je	0x100014e91
	subq	%rdi, %rax
	leaq	(%rdi,%rdi,2), %rsi
	leaq	40(%rdx,%rsi,8), %rdx
	nopw	(%rax,%rax)
	movq	%rcx, -40(%rdx)
	movq	%rcx, -32(%rdx)
	movb	$0, -24(%rdx)
	movq	%rcx, -16(%rdx)
	movq	%rcx, -8(%rdx)
	movb	$0, (%rdx)
	addq	$48, %rdx
	addq	$-2, %rax
	jne	0x100014e70
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNKSt3__117__repeat_one_loopIcE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$4294966305, (%rsi)
	movq	8(%rdi), %rax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNKSt3__111__alternateIcE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$4294966304, (%rsi)
	popq	%rbp
	retq
	nopl	(%rax)
__ZNKSt3__111__alternateIcE12__exec_splitEbRNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$4294966302, (%rdx)
	testb	%sil, %sil
	je	0x100014ee9
	movq	16(%rdi), %rax
	movq	%rax, 80(%rdx)
	popq	%rbp
	retq
	movq	8(%rdi), %rax
	movq	%rax, 80(%rdx)
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE18__parse_nondupl_REINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	movq	%rdx, %r15
	movq	%rsi, %r13
	movq	%rdi, %r12
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE32__parse_one_char_or_coll_elem_REINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_one_char_or_coll_elem_RE<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rax, %r14
	cmpq	%r13, %r14
	je	0x100014f39
	movq	%r14, %rax
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	cmpq	%r15, %r13
	je	0x100014f6b
	leaq	1(%r13), %rax
	cmpq	%r15, %rax
	je	0x1000150a5
	cmpb	$92, (%r13)
	movq	%r14, %rsi
	jne	0x100014f6e
	cmpb	$40, (%rax)
	movq	%r14, %rsi
	jne	0x100014f6e
	leaq	2(%r13), %rsi
	cmpq	%r13, %rsi
	jne	0x100014f77
	jmp	0x1000150b1
	movq	%r14, %rsi
	cmpq	%r13, %rsi
	je	0x1000150b1
	testb	$2, 24(%r12)
	movq	%rsi, -64(%rbp)
	jne	0x100015081
	movl	$24, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	-64(%rbp), %rsi
	movl	28(%r12), %ebx
	incl	%ebx
	movl	%ebx, 28(%r12)
	leaq	56(%r12), %r13
	movq	56(%r12), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	107054(%rip), %rdx
	addq	$16, %rdx
	movq	%rdx, (%rax)
	movl	%ebx, 16(%rax)
	movq	%rax, 8(%rcx)
	movq	56(%r12), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r12)
	cmpq	%r15, %rsi
	je	0x100015094
	movq	%r13, -72(%rbp)
	movq	56(%r12), %r14
	movq	%r12, -56(%rbp)
	movq	%r12, %rdi
	movq	-64(%rbp), %rsi
	movq	%r15, %r13
	movq	%r15, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE18__parse_nondupl_REINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_nondupl_RE<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	-64(%rbp), %rdx
	cmpq	%rdx, %rax
	movl	%ebx, -44(%rbp)
	je	0x10001511b
	movq	%r14, %rcx
	movq	%rdx, %r14
	movl	%ebx, %r12d
	movq	%r13, %r15
	movq	-56(%rbp), %r13
	nop
	movq	%r14, %rbx
	incl	%r12d
	movl	28(%r13), %r9d
	incl	%r9d
	movq	%r13, %rdi
	movq	%rax, %rsi
	movq	%r15, %rdx
	movl	%r12d, %r8d
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE22__parse_RE_dupl_symbolINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_16__owns_one_stateIcEEjj ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_RE_dupl_symbol<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::__owns_one_state<char>*, unsigned int, unsigned int)
	movq	%rax, %r14
	cmpq	%rbx, %r14
	je	0x100015121
	cmpq	%r15, %r14
	je	0x10001515f
	movq	-56(%rbp), %r13
	movl	28(%r13), %r12d
	movq	56(%r13), %rbx
	movq	%r13, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE18__parse_nondupl_REINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_nondupl_RE<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rbx, %rcx
	cmpq	%r14, %rax
	movq	%r14, -64(%rbp)
	movq	%r14, %rbx
	jne	0x100015020
	jmp	0x100015121
	movl	28(%r12), %ebx
	leaq	56(%r12), %r13
	cmpq	%r15, %rsi
	jne	0x100014fdf
	movq	%rsi, %r14
	cmpq	%r14, %r15
	jne	0x10001518b
	jmp	0x1000151d3
	movq	%r14, %rsi
	cmpq	%r13, %rsi
	jne	0x100014f77
	cmpq	%r15, %r13
	je	0x100014f27
	leaq	1(%r13), %rax
	cmpq	%r15, %rax
	je	0x100014f27
	cmpb	$92, (%r13)
	jne	0x100014f27
	movzbl	(%rax), %esi
	movl	%esi, %eax
	andl	$248, %eax
	cmpl	$48, %eax
	sete	%al
	movl	%esi, %ecx
	andl	$254, %ecx
	cmpl	$56, %ecx
	sete	%cl
	leal	-49(%rsi), %edx
	cmpl	$8, %edx
	ja	0x100014f27
	orb	%cl, %al
	je	0x100014f27
	addl	$-48, %esi
	movq	%r12, %rdi
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE15__push_back_refEi ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_back_ref(int)
	addq	$2, %r13
	movq	%r13, %r14
	jmp	0x100014f27
	movq	%rdx, %rbx
	movq	%r13, %r15
	cmpq	%r15, %rbx
	je	0x100015158
	leaq	1(%rbx), %rax
	cmpq	%r15, %rax
	movl	-44(%rbp), %edx
	movq	-72(%rbp), %r13
	movq	-64(%rbp), %r14
	je	0x10001517d
	cmpb	$92, (%rbx)
	movq	-56(%rbp), %r12
	jne	0x100015171
	cmpb	$41, (%rax)
	jne	0x100015171
	movq	%rbx, %r15
	leaq	2(%rbx), %r14
	movl	%edx, %ebx
	cmpq	%r14, %r15
	jne	0x10001518b
	jmp	0x1000151d3
	movq	%rbx, %r15
	movq	-64(%rbp), %r14
	movq	-56(%rbp), %r12
	movl	-44(%rbp), %ebx
	movq	-72(%rbp), %r13
	cmpq	%r14, %r15
	jne	0x10001518b
	jmp	0x1000151d3
	movq	%rbx, %r15
	movl	%edx, %ebx
	cmpq	%r14, %r15
	jne	0x10001518b
	jmp	0x1000151d3
	movq	%rbx, %r15
	movq	-56(%rbp), %r12
	movl	%edx, %ebx
	cmpq	%r14, %r15
	je	0x1000151d3
	testb	$2, 24(%r12)
	jne	0x100014f27
	movl	$24, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	(%r13), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	106540(%rip), %rdx
	addq	$16, %rdx
	movq	%rdx, (%rax)
	movl	%ebx, 16(%rax)
	movq	%rax, 8(%rcx)
	movq	(%r13), %rax
	movq	8(%rax), %rax
	movq	%rax, (%r13)
	jmp	0x100014f27
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$6, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	106196(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	106061(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE22__parse_RE_dupl_symbolINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_16__owns_one_stateIcEEjj:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	subq	$16, %rsp
	movq	%rsi, %rbx
	cmpq	%rdx, %rbx
	je	0x1000154cc
	movb	(%rbx), %al
	cmpb	$42, %al
	jne	0x100015260
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$1, (%rsp)
	xorl	%esi, %esi
	movq	$-1, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_loopEmmPNS_16__owns_one_stateIcEEmmb ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_loop(unsigned long, unsigned long, std::__1::__owns_one_state<char>*, unsigned long, unsigned long, bool)
	incq	%rbx
	jmp	0x1000154cc
	leaq	1(%rbx), %rsi
	cmpq	%rdx, %rsi
	je	0x1000153fc
	cmpb	$92, %al
	movq	%rbx, %r10
	jne	0x100015281
	cmpb	$123, 1(%rbx)
	movq	%rbx, %r10
	jne	0x100015281
	leaq	2(%rbx), %r10
	cmpq	%rbx, %r10
	je	0x1000154cc
	cmpq	%rdx, %r10
	je	0x1000154e5
	movzbl	(%r10), %r14d
	movl	%r14d, %esi
	andl	$248, %esi
	cmpl	$48, %esi
	je	0x1000152b7
	movl	%r14d, %esi
	andl	$254, %esi
	cmpl	$56, %esi
	jne	0x1000154e5
	addl	$-48, %r14d
	cmpl	$-1, %r14d
	je	0x1000154e5
	leaq	1(%r10), %rsi
	cmpq	%rdx, %rsi
	je	0x100015303
	nop
	movzbl	(%rsi), %ebx
	movl	%ebx, %eax
	andl	$248, %eax
	cmpl	$48, %eax
	je	0x1000152eb
	movl	%ebx, %eax
	andl	$254, %eax
	cmpl	$56, %eax
	jne	0x100015306
	addl	$-48, %ebx
	cmpl	$-1, %ebx
	je	0x100015306
	leal	(%r14,%r14,4), %eax
	leal	(%rbx,%rax,2), %r14d
	incq	%rsi
	cmpq	%rsi, %rdx
	jne	0x1000152d0
	movq	%rdx, %rsi
	cmpq	%r10, %rsi
	je	0x1000154e5
	cmpq	%rdx, %rsi
	je	0x100015501
	movb	(%rsi), %r10b
	leaq	1(%rsi), %rbx
	cmpb	$44, %r10b
	jne	0x1000153bd
	cmpq	%rdx, %rbx
	je	0x10001540d
	movzbl	(%rbx), %r11d
	movl	%r11d, %eax
	andl	$248, %eax
	cmpl	$48, %eax
	movl	$4294967295, %r10d
	je	0x10001535a
	movl	%r11d, %eax
	andl	$254, %eax
	cmpl	$56, %eax
	jne	0x10001545d
	addl	$-48, %r11d
	cmpl	$-1, %r11d
	je	0x10001545d
	addq	$2, %rsi
	cmpq	%rdx, %rsi
	je	0x1000153ac
	movzbl	(%rsi), %ebx
	movl	%ebx, %eax
	andl	$248, %eax
	cmpl	$48, %eax
	je	0x100015390
	movl	%ebx, %eax
	andl	$254, %eax
	cmpl	$56, %eax
	jne	0x100015457
	addl	$-48, %ebx
	cmpl	$-1, %ebx
	je	0x100015457
	leal	(%r11,%r11,4), %eax
	leal	(%rbx,%rax,2), %r11d
	incq	%rsi
	cmpq	%rsi, %rdx
	jne	0x100015371
	movl	%r11d, %r10d
	movq	%rdx, %rbx
	cmpq	%rbx, %rdx
	jne	0x10001548c
	jmp	0x10001541b
	cmpq	%rdx, %rbx
	je	0x10001543a
	cmpb	$92, %r10b
	movq	%rsi, %rbx
	jne	0x10001543d
	cmpb	$125, 1(%rsi)
	movq	%rsi, %rbx
	jne	0x10001543d
	leaq	2(%rsi), %rbx
	cmpq	%rbx, %rsi
	jne	0x100015442
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$7, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x100015537
	movq	%rbx, %r10
	cmpq	%rbx, %r10
	jne	0x10001528a
	jmp	0x1000154cc
	movl	$4294967295, %r10d
	movq	%rdx, %rbx
	cmpq	%rbx, %rdx
	jne	0x10001548c
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$7, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x100015537
	movq	%rsi, %rbx
	cmpq	%rbx, %rsi
	je	0x1000153dd
	movslq	%r14d, %rsi
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$1, (%rsp)
	movq	%rsi, %rdx
	jmp	0x1000154c7
	movl	%r11d, %r10d
	movq	%rsi, %rbx
	cmpq	%rdx, %rbx
	je	0x1000154db
	leaq	1(%rbx), %rax
	cmpq	%rdx, %rax
	je	0x100015484
	cmpb	$92, (%rbx)
	jne	0x100015484
	cmpb	$125, 1(%rbx)
	jne	0x1000154d8
	movq	%rbx, %rdx
	leaq	2(%rbx), %rbx
	cmpq	%rbx, %rdx
	jne	0x10001548c
	jmp	0x10001541b
	movq	%rbx, %rdx
	cmpq	%rbx, %rdx
	je	0x10001541b
	cmpl	$-1, %r10d
	je	0x1000154b0
	cmpl	%r14d, %r10d
	jl	0x10001551d
	movslq	%r14d, %rsi
	movslq	%r10d, %rdx
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$1, (%rsp)
	jmp	0x1000154c7
	movslq	%r14d, %rsi
	movl	%r8d, %r8d
	movl	%r9d, %r9d
	movl	$1, (%rsp)
	movq	$-1, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_loopEmmPNS_16__owns_one_stateIcEEmmb ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_loop(unsigned long, unsigned long, std::__1::__owns_one_state<char>*, unsigned long, unsigned long, bool)
	movq	%rbx, %rax
	addq	$16, %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	movq	%rbx, %rdx
	cmpq	%rbx, %rdx
	jne	0x10001548c
	jmp	0x10001541b
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$8, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x100015537
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$7, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	jmp	0x100015537
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$8, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	105354(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	105219(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	jmp	0x100015555
	jmp	0x100015555
	jmp	0x100015555
	jmp	0x100015555
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE32__parse_one_char_or_coll_elem_REINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rdx, %r15
	movq	%rsi, %r12
	movq	%rdi, %r14
	cmpq	%r15, %r12
	je	0x100015652
	leaq	1(%r12), %rbx
	cmpq	%r15, %rbx
	movb	(%r12), %al
	jne	0x10001559f
	cmpb	$36, %al
	je	0x1000155c4
	movl	%eax, %ecx
	addb	$-46, %cl
	cmpb	$46, %cl
	ja	0x10001566f
	movzbl	%cl, %ecx
	movabsq	$105553116266497, %rdx
	btq	%rcx, %rdx
	jae	0x10001566f
	cmpb	$92, %al
	jne	0x100015652
	cmpq	%r15, %rbx
	movq	%r12, %rbx
	je	0x100015605
	movsbl	1(%r12), %eax
	leal	-36(%rax), %ecx
	cmpl	$58, %ecx
	ja	0x100015652
	movabsq	$396316767208604737, %rdx
	btq	%rcx, %rdx
	movq	%r12, %rbx
	jae	0x100015605
	movsbl	%al, %esi
	movq	%r14, %rdi
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_charEc ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_char(char)
	leaq	2(%r12), %rbx
	cmpq	%r12, %rbx
	jne	0x10001567a
	cmpq	%r15, %r12
	je	0x10001565c
	cmpb	$46, (%r12)
	jne	0x10001565c
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%r14), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	105221(%rip), %rdx
	addq	$16, %rdx
	movq	%rdx, (%rax)
	movq	%rax, 8(%rcx)
	movq	56(%r14), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%r14)
	incq	%r12
	movq	%r12, %rbx
	jmp	0x10001567a
	movq	%r12, %rbx
	cmpq	%r12, %rbx
	jne	0x10001567a
	jmp	0x10001560a
	movq	%r14, %rdi
	movq	%r12, %rsi
	movq	%r15, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE26__parse_bracket_expressionINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_bracket_expression<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rax, %rbx
	jmp	0x10001567a
	movsbl	%al, %esi
	movq	%r14, %rdi
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_charEc ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_char(char)
	movq	%rbx, %rax
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNKSt3__111__match_anyIcE6__execERNS_7__stateIcEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	16(%rsi), %rax
	cmpq	24(%rsi), %rax
	je	0x1000156ba
	cmpb	$0, (%rax)
	je	0x1000156ba
	movl	$4294966301, (%rsi)
	incq	%rax
	movq	%rax, 16(%rsi)
	movq	8(%rdi), %rax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	movl	$4294966303, (%rsi)
	xorl	%eax, %eax
	movq	%rax, 80(%rsi)
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE18__parse_ERE_branchINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rdx, %r14
	movq	%rsi, %rbx
	movq	%rdi, %r15
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE22__parse_ERE_expressionINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_ERE_expression<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	cmpq	%rbx, %rax
	je	0x100015714
	nopl	(%rax)
	movq	%rax, %rbx
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE22__parse_ERE_expressionINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_ERE_expression<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	cmpq	%rbx, %rax
	jne	0x1000156f0
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$15, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	104851(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	104716(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE22__parse_ERE_expressionINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rdx, %r12
	movq	%rsi, %r13
	movq	%rdi, %rbx
	movq	56(%rbx), %rax
	movq	%rax, -56(%rbp)
	movl	28(%rbx), %r15d
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE20__parse_ORD_CHAR_EREINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_ORD_CHAR_ERE<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rax, %r14
	cmpq	%r13, %r14
	jne	0x1000157a9
	movq	%rbx, %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE23__parse_QUOTED_CHAR_EREINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_QUOTED_CHAR_ERE<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rax, %r14
	cmpq	%r13, %r14
	je	0x1000157f9
	cmpq	%r13, %r14
	jne	0x10001594c
	cmpq	%r12, %r14
	je	0x10001594c
	movsbl	(%r13), %eax
	cmpl	$36, %eax
	je	0x10001587a
	cmpl	$40, %eax
	je	0x10001582c
	cmpl	$94, %eax
	jne	0x10001594c
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%rbx), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	104732(%rip), %rdx
	jmp	0x100015897
	cmpq	%r12, %r13
	je	0x1000158c0
	cmpb	$46, (%r13)
	jne	0x1000158c0
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%rbx), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	104718(%rip), %rdx
	jmp	0x100015897
	testb	$2, 24(%rbx)
	jne	0x1000158dc
	movl	$24, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movl	28(%rbx), %esi
	incl	%esi
	movl	%esi, 28(%rbx)
	movq	56(%rbx), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	104845(%rip), %rdx
	addq	$16, %rdx
	movq	%rdx, (%rax)
	movl	%esi, -44(%rbp)
	movl	%esi, 16(%rax)
	movq	%rax, 8(%rcx)
	movq	56(%rbx), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%rbx)
	jmp	0x1000158e2
	movl	$16, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%rbx), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	104577(%rip), %rdx
	addq	$16, %rdx
	movq	%rdx, (%rax)
	movq	%rax, 8(%rcx)
	movq	56(%rbx), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%rbx)
	leaq	1(%r13), %r14
	cmpq	%r13, %r14
	jne	0x100015951
	jmp	0x100015973
	movq	%rbx, %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE26__parse_bracket_expressionINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_bracket_expression<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rax, %r14
	cmpq	%r13, %r14
	je	0x1000157b2
	jmp	0x10001594c
	movl	28(%rbx), %eax
	movl	%eax, -44(%rbp)
	incl	36(%rbx)
	leaq	1(%r13), %rsi
	movq	%rbx, %rdi
	movq	%r12, %rdx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE24__parse_extended_reg_expINS_11__wrap_iterIPKcEEEET_S9_S9_ ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_extended_reg_exp<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>)
	movq	%rax, %r14
	cmpq	%r12, %r14
	je	0x100015985
	cmpb	$41, (%r14)
	jne	0x100015985
	testb	$2, 24(%rbx)
	jne	0x100015946
	movl	$24, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	56(%rbx), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	104631(%rip), %rdx
	addq	$16, %rdx
	movq	%rdx, (%rax)
	movl	-44(%rbp), %edx
	movl	%edx, 16(%rax)
	movq	%rax, 8(%rcx)
	movq	56(%rbx), %rax
	movq	8(%rax), %rax
	movq	%rax, 56(%rbx)
	decl	36(%rbx)
	incq	%r14
	cmpq	%r13, %r14
	je	0x100015973
	incl	%r15d
	movl	28(%rbx), %r9d
	incl	%r9d
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movq	%r12, %rdx
	movq	-56(%rbp), %rcx
	movl	%r15d, %r8d
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE23__parse_ERE_dupl_symbolINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_16__owns_one_stateIcEEjj ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_ERE_dupl_symbol<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::__owns_one_state<char>*, unsigned int, unsigned int)
	movq	%rax, %r14
	movq	%r14, %rax
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	movl	$6, %esi
	movq	%rbx, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	104226(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	104091(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax,%rax)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE20__parse_ORD_CHAR_EREINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %rbx
	cmpq	%rdx, %rbx
	je	0x1000159fb
	movsbl	(%rbx), %eax
	movl	%eax, %ecx
	addl	$-36, %ecx
	cmpl	$88, %ecx
	ja	0x100015a0b
	leaq	38(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	cmpl	$0, 36(%rdi)
	jne	0x1000159fb
	movsbl	%al, %esi
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_charEc ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_char(char)
	incq	%rbx
	jmp	0x1000159fb
	jrcxz	0x100015a19
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	inl	%dx, %eax
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	pushq	%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbx
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	(%rdi)
	.byte 0x1f #bad opcode
	addb	%dl, 72(%rbp)
__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE23__parse_QUOTED_CHAR_EREINS_11__wrap_iterIPKcEEEET_S9_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %rbx
	cmpq	%rdx, %rbx
	je	0x100015bc3
	leaq	1(%rbx), %rsi
	cmpq	%rdx, %rsi
	je	0x100015bc3
	cmpb	$92, (%rbx)
	jne	0x100015bc3
	movsbl	(%rsi), %eax
	leal	-36(%rax), %ecx
	cmpl	$89, %ecx
	ja	0x100015bcd
	leaq	58(%rip), %r8
	movslq	(%r8,%rcx,4), %rcx
	addq	%r8, %rcx
	jmpq	*%rcx
	movsbl	%al, %esi
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE11__push_charEc ## std::__1::basic_regex<char, std::__1::regex_traits<char> >::__push_char(char)
	addq	$2, %rbx
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	movl	$496, %eax
	andl	24(%rdi), %eax
	cmpl	$64, %eax
	jne	0x100015bc3
	xorl	%ecx, %ecx
	callq	__ZNSt3__111basic_regexIcNS_12regex_traitsIcEEE18__parse_awk_escapeINS_11__wrap_iterIPKcEEEET_S9_S9_PNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE ## std::__1::__wrap_iter<char const*> std::__1::basic_regex<char, std::__1::regex_traits<char> >::__parse_awk_escape<std::__1::__wrap_iter<char const*> >(std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
	movq	%rax, %rbx
	jmp	0x100015bc3
	nop
	iretl
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	%edi
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	%edi
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	%edi
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	%edi
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	%edi
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	%edi
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	%edi
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	%edi
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	%edi
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*%rbp
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	%edi
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	%edi
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	decl	%edi
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	*72(%rbp)
__ZNKSt3__111basic_regexIcNS_12regex_traitsIcEEE8__searchINS_9allocatorINS_9sub_matchIPKcEEEEEEbS8_S8_RNS_13match_resultsIS8_T_EENS_15regex_constants15match_flag_typeE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movl	%r8d, %r14d
	movq	%rcx, %rbx
	movq	%rdx, %r13
	movq	%rsi, %r12
	movq	%rdi, %r15
	movl	28(%r15), %esi
	incl	%esi
	leaq	24(%rbx), %rdx
	movq	%r13, 24(%rbx)
	movq	%r13, 32(%rbx)
	movb	$0, 40(%rbx)
	movq	%rbx, %rdi
	movq	%rdx, -56(%rbp)
	callq	__ZNSt3__16vectorINS_9sub_matchIPKcEENS_9allocatorIS4_EEE6assignEmRKS4_ ## std::__1::vector<std::__1::sub_match<char const*>, std::__1::allocator<std::__1::sub_match<char const*> > >::assign(unsigned long, std::__1::sub_match<char const*> const&)
	movq	%r12, 48(%rbx)
	movq	%r12, 56(%rbx)
	movb	$0, 64(%rbx)
	movups	24(%rbx), %xmm0
	movups	%xmm0, 72(%rbx)
	movb	40(%rbx), %al
	movb	%al, 88(%rbx)
	movl	%r14d, %eax
	movl	%eax, -44(%rbp)
	testb	$8, %ah
	jne	0x100015dbb
	movq	%r12, 104(%rbx)
	movb	$1, 96(%rbx)
	movzwl	24(%r15), %eax
	testw	$496, %ax
	je	0x100015e2f
	cmpl	$0, 28(%r15)
	je	0x100015f6e
	xorl	%r9d, %r9d
	movl	-44(%rbp), %eax
	testb	$8, %ah
	sete	%r9b
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r13, %rdx
	movq	%rbx, %rcx
	movl	%eax, %r8d
	callq	__ZNKSt3__111basic_regexIcNS_12regex_traitsIcEEE27__match_at_start_posix_subsINS_9allocatorINS_9sub_matchIPKcEEEEEEbS8_S8_RNS_13match_resultsIS8_T_EENS_15regex_constants15match_flag_typeEb ## bool std::__1::basic_regex<char, std::__1::regex_traits<char> >::__match_at_start_posix_subs<std::__1::allocator<std::__1::sub_match<char const*> > >(char const*, char const*, std::__1::match_results<char const*, std::__1::allocator<std::__1::sub_match<char const*> > >&, std::__1::regex_constants::match_flag_type, bool) const
	testb	%al, %al
	movq	-56(%rbp), %rcx
	je	0x100015e58
	movq	(%rbx), %rax
	cmpq	%rax, 8(%rbx)
	cmovneq	%rax, %rcx
	movq	(%rcx), %rax
	movq	%rax, 56(%rbx)
	cmpq	%rax, 48(%rbx)
	setne	64(%rbx)
	movq	8(%rcx), %rax
	movq	%rax, 72(%rbx)
	cmpq	80(%rbx), %rax
	setne	88(%rbx)
	movb	$1, %al
	jmp	0x100015f5f
	xorl	%r9d, %r9d
	movl	-44(%rbp), %eax
	testb	$8, %ah
	sete	%r9b
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r13, %rdx
	movq	%rbx, %rcx
	movl	%eax, %r8d
	callq	__ZNKSt3__111basic_regexIcNS_12regex_traitsIcEEE21__match_at_start_ecmaINS_9allocatorINS_9sub_matchIPKcEEEEEEbS8_S8_RNS_13match_resultsIS8_T_EENS_15regex_constants15match_flag_typeEb ## bool std::__1::basic_regex<char, std::__1::regex_traits<char> >::__match_at_start_ecma<std::__1::allocator<std::__1::sub_match<char const*> > >(char const*, char const*, std::__1::match_results<char const*, std::__1::allocator<std::__1::sub_match<char const*> > >&, std::__1::regex_constants::match_flag_type, bool) const
	testb	%al, %al
	movq	-56(%rbp), %rcx
	jne	0x100015dfe
	movq	%r15, -64(%rbp)
	cmpq	%r13, %r12
	movq	%rcx, %r15
	je	0x100015f56
	movl	-44(%rbp), %eax
	andl	$64, %eax
	jne	0x100015f56
	incq	%r12
	cmpq	%r13, %r12
	je	0x100015f56
	orl	$128, -44(%rbp)
	movabsq	$-6148914691236517205, %rax
	nopw	%cs:(%rax,%rax)
	movq	8(%rbx), %rsi
	subq	(%rbx), %rsi
	sarq	$3, %rsi
	movq	%rax, %r14
	imulq	%rax, %rsi
	movq	%rbx, %rdi
	movq	%r15, %rdx
	callq	__ZNSt3__16vectorINS_9sub_matchIPKcEENS_9allocatorIS4_EEE6assignEmRKS4_ ## std::__1::vector<std::__1::sub_match<char const*>, std::__1::allocator<std::__1::sub_match<char const*> > >::assign(unsigned long, std::__1::sub_match<char const*> const&)
	movq	-64(%rbp), %rdi
	movzwl	24(%rdi), %eax
	testw	$496, %ax
	je	0x100015ef0
	cmpl	$0, 28(%rdi)
	je	0x100015f10
	xorl	%r9d, %r9d
	movq	%r12, %rsi
	movq	%r13, %rdx
	movq	%rbx, %rcx
	movl	-44(%rbp), %r8d
	callq	__ZNKSt3__111basic_regexIcNS_12regex_traitsIcEEE27__match_at_start_posix_subsINS_9allocatorINS_9sub_matchIPKcEEEEEEbS8_S8_RNS_13match_resultsIS8_T_EENS_15regex_constants15match_flag_typeEb ## bool std::__1::basic_regex<char, std::__1::regex_traits<char> >::__match_at_start_posix_subs<std::__1::allocator<std::__1::sub_match<char const*> > >(char const*, char const*, std::__1::match_results<char const*, std::__1::allocator<std::__1::sub_match<char const*> > >&, std::__1::regex_constants::match_flag_type, bool) const
	testb	%al, %al
	je	0x100015f29
	jmp	0x100015fa0
	nop
	xorl	%r9d, %r9d
	movq	%r12, %rsi
	movq	%r13, %rdx
	movq	%rbx, %rcx
	movl	-44(%rbp), %r8d
	callq	__ZNKSt3__111basic_regexIcNS_12regex_traitsIcEEE21__match_at_start_ecmaINS_9allocatorINS_9sub_matchIPKcEEEEEEbS8_S8_RNS_13match_resultsIS8_T_EENS_15regex_constants15match_flag_typeEb ## bool std::__1::basic_regex<char, std::__1::regex_traits<char> >::__match_at_start_ecma<std::__1::allocator<std::__1::sub_match<char const*> > >(char const*, char const*, std::__1::match_results<char const*, std::__1::allocator<std::__1::sub_match<char const*> > >&, std::__1::regex_constants::match_flag_type, bool) const
	testb	%al, %al
	je	0x100015f29
	jmp	0x100015fa0
	nop
	xorl	%r9d, %r9d
	movq	%r12, %rsi
	movq	%r13, %rdx
	movq	%rbx, %rcx
	movl	-44(%rbp), %r8d
	callq	__ZNKSt3__111basic_regexIcNS_12regex_traitsIcEEE29__match_at_start_posix_nosubsINS_9allocatorINS_9sub_matchIPKcEEEEEEbS8_S8_RNS_13match_resultsIS8_T_EENS_15regex_constants15match_flag_typeEb ## bool std::__1::basic_regex<char, std::__1::regex_traits<char> >::__match_at_start_posix_nosubs<std::__1::allocator<std::__1::sub_match<char const*> > >(char const*, char const*, std::__1::match_results<char const*, std::__1::allocator<std::__1::sub_match<char const*> > >&, std::__1::regex_constants::match_flag_type, bool) const
	testb	%al, %al
	jne	0x100015fa0
	movq	8(%rbx), %rsi
	subq	(%rbx), %rsi
	sarq	$3, %rsi
	imulq	%r14, %rsi
	movq	%rbx, %rdi
	movq	-56(%rbp), %r15
	movq	%r15, %rdx
	callq	__ZNSt3__16vectorINS_9sub_matchIPKcEENS_9allocatorIS4_EEE6assignEmRKS4_ ## std::__1::vector<std::__1::sub_match<char const*>, std::__1::allocator<std::__1::sub_match<char const*> > >::assign(unsigned long, std::__1::sub_match<char const*> const&)
	movq	%r14, %rax
	incq	%r12
	cmpq	%r12, %r13
	jne	0x100015ea0
	movq	(%rbx), %rax
	movq	%rax, 8(%rbx)
	xorl	%eax, %eax
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%r9d, %r9d
	movl	-44(%rbp), %eax
	testb	$8, %ah
	sete	%r9b
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r13, %rdx
	movq	%rbx, %rcx
	movl	%eax, %r8d
	callq	__ZNKSt3__111basic_regexIcNS_12regex_traitsIcEEE29__match_at_start_posix_nosubsINS_9allocatorINS_9sub_matchIPKcEEEEEEbS8_S8_RNS_13match_resultsIS8_T_EENS_15regex_constants15match_flag_typeEb ## bool std::__1::basic_regex<char, std::__1::regex_traits<char> >::__match_at_start_posix_nosubs<std::__1::allocator<std::__1::sub_match<char const*> > >(char const*, char const*, std::__1::match_results<char const*, std::__1::allocator<std::__1::sub_match<char const*> > >&, std::__1::regex_constants::match_flag_type, bool) const
	testb	%al, %al
	movq	-56(%rbp), %rcx
	jne	0x100015dfe
	jmp	0x100015e58
	movq	(%rbx), %rax
	cmpq	%rax, 8(%rbx)
	movq	-56(%rbp), %r13
	cmovneq	%rax, %r13
	movq	(%r13), %rax
	movq	%rax, 56(%rbx)
	cmpq	%rax, 48(%rbx)
	setne	64(%rbx)
	movq	8(%r13), %rax
	jmp	0x100015e1c
	nopl	(%rax,%rax)
__ZNKSt3__111basic_regexIcNS_12regex_traitsIcEEE29__match_at_start_posix_nosubsINS_9allocatorINS_9sub_matchIPKcEEEEEEbS8_S8_RNS_13match_resultsIS8_T_EENS_15regex_constants15match_flag_typeEb:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$232, %rsp
	movl	%r9d, %r12d
	movl	%r8d, -116(%rbp)
	movq	%rdx, -152(%rbp)
	movq	%rsi, -144(%rbp)
	movq	%rdi, %r15
	movq	102957(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	movq	%rax, -48(%rbp)
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, -80(%rbp)
	movdqa	%xmm0, -96(%rbp)
	movdqa	%xmm0, -112(%rbp)
	movq	40(%r15), %r14
	testq	%r14, %r14
	je	0x1000160a4
	movq	%rcx, -160(%rbp)
	movq	$0, -244(%rbp)
	movq	$0, -252(%rbp)
	movq	$0, -260(%rbp)
	movl	$0, -56(%rbp)
	movq	$0, -64(%rbp)
	leaq	-112(%rbp), %rdi
	callq	__ZNSt3__15dequeINS_7__stateIcEENS_9allocatorIS2_EEE19__add_back_capacityEv ## std::__1::deque<std::__1::__state<char>, std::__1::allocator<std::__1::__state<char> > >::__add_back_capacity()
	movq	-104(%rbp), %rcx
	cmpq	%rcx, -96(%rbp)
	je	0x1000160b0
	movq	-72(%rbp), %rsi
	addq	-80(%rbp), %rsi
	movq	%rsi, %rax
	shrq	%rax
	movabsq	$-4392081922311798003, %rdx
	mulq	%rdx
	shrq	$4, %rdx
	imulq	$42, %rdx, %rax
	subq	%rax, %rsi
	leaq	(%rsi,%rsi,2), %rax
	shlq	$5, %rax
	addq	(%rcx,%rdx,8), %rax
	jmp	0x1000160b2
	leaq	-112(%rbp), %rdi
	xorl	%r14d, %r14d
	jmp	0x100016853
	xorl	%eax, %eax
	movl	$0, (%rax)
	movl	-240(%rbp), %ecx
	movl	%ecx, 28(%rax)
	movq	-248(%rbp), %rcx
	movq	%rcx, 20(%rax)
	movq	-264(%rbp), %rcx
	movq	-256(%rbp), %rdx
	movq	%rdx, 12(%rax)
	movq	%rcx, 4(%rax)
	movq	$0, 72(%rax)
	movq	$0, 64(%rax)
	movq	$0, 56(%rax)
	movq	$0, 48(%rax)
	movq	$0, 40(%rax)
	movq	$0, 32(%rax)
	movq	-64(%rbp), %rcx
	movq	-59(%rbp), %rdx
	movq	%rdx, 85(%rax)
	movq	%rcx, 80(%rax)
	movq	-72(%rbp), %rsi
	leaq	1(%rsi), %rcx
	movq	%rcx, -72(%rbp)
	movq	-104(%rbp), %rdi
	movq	-80(%rbp), %rbx
	addq	%rbx, %rsi
	movq	%rsi, %rax
	shrq	%rax
	movabsq	$-4392081922311798003, %r11
	mulq	%r11
	shrq	$4, %rdx
	movq	(%rdi,%rdx,8), %r8
	imulq	$42, %rdx, %rax
	subq	%rax, %rsi
	shlq	$5, %rsi
	leaq	(%rsi,%rsi,2), %r10
	movl	$0, (%r8,%r10)
	movq	-144(%rbp), %r9
	movq	%r9, 8(%r8,%r10)
	movq	(%rdi,%rdx,8), %rsi
	movq	%r9, 16(%rsi,%r10)
	movq	(%rdi,%rdx,8), %rsi
	movq	-152(%rbp), %rax
	movq	%rax, 24(%rsi,%r10)
	movq	(%rdi,%rdx,8), %r9
	movl	32(%r15), %esi
	movq	56(%r9,%r10), %r8
	movq	64(%r9,%r10), %rdx
	subq	%r8, %rdx
	sarq	$4, %rdx
	cmpq	%rsi, %rdx
	jae	0x1000161d3
	leaq	56(%r9,%r10), %rdi
	subq	%rdx, %rsi
	callq	__ZNSt3__16vectorINS_4pairImPKcEENS_9allocatorIS4_EEE8__appendEm ## std::__1::vector<std::__1::pair<unsigned long, char const*>, std::__1::allocator<std::__1::pair<unsigned long, char const*> > >::__append(unsigned long)
	movq	-72(%rbp), %rcx
	movq	-104(%rbp), %rdi
	movq	-80(%rbp), %rbx
	movabsq	$-4392081922311798003, %r11
	jmp	0x1000161e4
	jbe	0x1000161e4
	leaq	64(%r9,%r10), %rax
	shlq	$4, %rsi
	addq	%rsi, %r8
	movq	%r8, (%rax)
	movq	-152(%rbp), %rax
	subq	-144(%rbp), %rax
	movq	%rax, -168(%rbp)
	leaq	-1(%rcx,%rbx), %rsi
	movq	%rsi, %rax
	shrq	%rax
	mulq	%r11
	shrq	$4, %rdx
	movq	(%rdi,%rdx,8), %r8
	imulq	$42, %rdx, %rax
	subq	%rax, %rsi
	shlq	$5, %rsi
	leaq	(%rsi,%rsi,2), %rax
	movq	%r14, 80(%r8,%rax)
	movq	(%rdi,%rdx,8), %rdx
	movl	-116(%rbp), %esi
	movl	%esi, 88(%rdx,%rax)
	movb	%r12b, 92(%rdx,%rax)
	xorl	%eax, %eax
	movq	%rax, -128(%rbp)
	leaq	1916(%rip), %r14
	xorl	%eax, %eax
	movq	%rax, -136(%rbp)
	jmp	0x100016258
	nopl	(%rax,%rax)
	movq	-104(%rbp), %rdi
	movq	-80(%rbp), %rbx
	leaq	-1(%rcx,%rbx), %rcx
	movq	%rcx, %rax
	shrq	%rax
	mulq	%r11
	shrq	$4, %rdx
	movq	(%rdi,%rdx,8), %r12
	imulq	$42, %rdx, %rax
	subq	%rax, %rcx
	leaq	(%rcx,%rcx,2), %r15
	shlq	$5, %r15
	leaq	(%r12,%r15), %rbx
	movq	80(%r12,%r15), %rdi
	testq	%rdi, %rdi
	je	0x10001629e
	movq	(%rdi), %rax
	movq	%rbx, %rsi
	callq	*16(%rax)
	movabsq	$-4392081922311798003, %r11
	movl	(%rbx), %eax
	movl	$1000, %ecx
	addl	%ecx, %eax
	cmpl	$9, %eax
	ja	0x1000168db
	leaq	80(%r12,%r15), %r13
	movslq	(%r14,%rax,4), %rax
	addq	%r14, %rax
	jmpq	*%rax
	testb	$32, -116(%rbp)
	je	0x1000162d2
	movq	-144(%rbp), %rax
	cmpq	%rax, 16(%r12,%r15)
	je	0x1000162f0
	movl	-116(%rbp), %eax
	testb	$16, %ah
	je	0x1000165f1
	movq	-152(%rbp), %rax
	cmpq	%rax, 16(%r12,%r15)
	je	0x1000165f1
	movq	-72(%rbp), %rax
	movq	-104(%rbp), %rcx
	movq	-80(%rbp), %rdx
	leaq	-1(%rax,%rdx), %rsi
	movq	%rsi, %rax
	shrq	%rax
	mulq	%r11
	shrq	$4, %rdx
	movq	(%rcx,%rdx,8), %r15
	imulq	$42, %rdx, %rax
	subq	%rax, %rsi
	leaq	(%rsi,%rsi,2), %rbx
	jmp	0x100016491
	movq	-80(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x100016342
	leaq	-112(%rbp), %rdi
	callq	__ZNSt3__15dequeINS_7__stateIcEENS_9allocatorIS2_EEE20__add_front_capacityEv ## std::__1::deque<std::__1::__state<char>, std::__1::allocator<std::__1::__state<char> > >::__add_front_capacity()
	movabsq	$-4392081922311798003, %r11
	movq	-80(%rbp), %rdi
	movq	-104(%rbp), %r8
	movq	%rdi, %rsi
	shrq	%rsi
	movq	%rsi, %rax
	mulq	%r11
	movq	%rdx, %rcx
	shrq	$4, %rcx
	cmpq	%r8, -96(%rbp)
	movq	(%r8,%rcx,8), %r9
	je	0x100016653
	movq	%rsi, %rax
	mulq	%r11
	shrq	$4, %rdx
	imulq	$42, %rdx, %rax
	subq	%rax, %rdi
	leaq	(%rdi,%rdi,2), %rax
	shlq	$5, %rax
	addq	%r9, %rax
	cmpq	%r9, %rax
	jne	0x100016395
	movq	-8(%r8,%rcx,8), %rax
	movl	$4032, %ecx
	addq	%rcx, %rax
	movq	24(%rbx), %rcx
	movq	%rcx, -72(%rax)
	movq	16(%rbx), %rcx
	movq	%rcx, -80(%rax)
	movq	(%rbx), %rcx
	movq	8(%rbx), %rdx
	movq	%rdx, -88(%rax)
	movq	%rcx, -96(%rax)
	movq	$0, -48(%rax)
	movq	$0, -56(%rax)
	movq	$0, -64(%rax)
	movups	32(%r12,%r15), %xmm0
	movups	%xmm0, -64(%rax)
	movq	48(%r12,%r15), %rcx
	movq	%rcx, -48(%rax)
	movq	$0, 48(%r12,%r15)
	movq	$0, 40(%r12,%r15)
	movq	$0, 32(%r12,%r15)
	movq	$0, -24(%rax)
	movq	$0, -32(%rax)
	movq	$0, -40(%rax)
	movups	56(%r12,%r15), %xmm0
	movups	%xmm0, -40(%rax)
	movq	72(%r12,%r15), %rcx
	movq	%rcx, -24(%rax)
	movq	$0, 72(%r12,%r15)
	movq	$0, 64(%r12,%r15)
	movq	$0, 56(%r12,%r15)
	movq	(%r13), %rcx
	movq	5(%r13), %rdx
	movq	%rdx, -11(%rax)
	movq	%rcx, -16(%rax)
	movdqa	-80(%rbp), %xmm0
	pextrq	$1, %xmm0, %rax
	paddq	80412(%rip), %xmm0
	movdqa	%xmm0, -80(%rbp)
	movq	%xmm0, %rcx
	addq	%rax, %rcx
	movq	-104(%rbp), %rsi
	movq	%rcx, %rax
	shrq	%rax
	mulq	%r11
	shrq	$4, %rdx
	movq	(%rsi,%rdx,8), %r15
	imulq	$42, %rdx, %rax
	subq	%rax, %rcx
	leaq	(%rcx,%rcx,2), %rbx
	shlq	$5, %rbx
	movq	56(%r15,%rbx), %rdi
	testq	%rdi, %rdi
	je	0x1000164b3
	movq	%rdi, 64(%r15,%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movabsq	$-4392081922311798003, %r11
	movq	32(%r15,%rbx), %rdi
	testq	%rdi, %rdi
	je	0x1000164d1
	movq	%rdi, 40(%r15,%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movabsq	$-4392081922311798003, %r11
	movq	-96(%rbp), %rax
	movq	-72(%rbp), %rcx
	leaq	-1(%rcx), %rdx
	movq	%rdx, -72(%rbp)
	movq	%rax, %rdx
	subq	-104(%rbp), %rdx
	sarq	$3, %rdx
	imulq	$42, %rdx, %rsi
	decq	%rsi
	testq	%rdx, %rdx
	cmoveq	%rdx, %rsi
	movl	$1, %edx
	subq	%rcx, %rdx
	subq	-80(%rbp), %rdx
	addq	%rsi, %rdx
	cmpq	$84, %rdx
	jb	0x100016527
	movq	-8(%rax), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movabsq	$-4392081922311798003, %r11
	addq	$-8, -96(%rbp)
	movq	-72(%rbp), %rcx
	testq	%rcx, %rcx
	jne	0x100016250
	jmp	0x10001681b
	leaq	-264(%rbp), %r15
	movq	%r15, %rdi
	movq	%rbx, %rsi
	callq	__ZNSt3__17__stateIcEC2ERKS1_ ## std::__1::__state<char>::__state(std::__1::__state<char> const&)
	movq	(%r13), %rdi
	movq	(%rdi), %rax
	movl	$1, %esi
	movq	%rbx, %rdx
	callq	*24(%rax)
	movq	-184(%rbp), %rdi
	movq	(%rdi), %rax
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	*24(%rax)
	movq	-104(%rbp), %rcx
	movq	-96(%rbp), %rax
	movq	%rax, %rdx
	subq	%rcx, %rdx
	sarq	$3, %rdx
	imulq	$42, %rdx, %rdi
	decq	%rdi
	testq	%rdx, %rdx
	cmoveq	%rdx, %rdi
	movq	-80(%rbp), %rdx
	movq	-72(%rbp), %rsi
	leaq	(%rsi,%rdx), %rbx
	cmpq	%rbx, %rdi
	jne	0x1000165b9
	leaq	-112(%rbp), %rdi
	callq	__ZNSt3__15dequeINS_7__stateIcEENS_9allocatorIS2_EEE19__add_back_capacityEv ## std::__1::deque<std::__1::__state<char>, std::__1::allocator<std::__1::__state<char> > >::__add_back_capacity()
	movq	-72(%rbp), %rsi
	movq	-80(%rbp), %rdx
	movq	-104(%rbp), %rcx
	movq	-96(%rbp), %rax
	cmpq	%rcx, %rax
	je	0x100016663
	addq	%rdx, %rsi
	movq	%rsi, %rax
	shrq	%rax
	movabsq	$-4392081922311798003, %r11
	mulq	%r11
	shrq	$4, %rdx
	imulq	$42, %rdx, %rax
	subq	%rax, %rsi
	leaq	(%rsi,%rsi,2), %rax
	shlq	$5, %rax
	addq	(%rcx,%rdx,8), %rax
	jmp	0x10001666f
	movq	16(%r12,%r15), %rax
	subq	8(%r12,%r15), %rax
	movq	-128(%rbp), %rcx
	cmpq	%rax, %rcx
	cmovlq	%rax, %rcx
	testb	$1, -136(%rbp)
	cmoveq	%rax, %rcx
	movq	-168(%rbp), %rbx
	cmpq	%rbx, %rcx
	jne	0x10001675a
	leaq	-112(%rbp), %rdi
	callq	__ZNSt3__112__deque_baseINS_7__stateIcEENS_9allocatorIS2_EEE5clearEv ## std::__1::__deque_base<std::__1::__state<char>, std::__1::allocator<std::__1::__state<char> > >::clear()
	movabsq	$-4392081922311798003, %r11
	movb	$1, %al
	movq	%rax, -136(%rbp)
	movq	%rbx, -128(%rbp)
	movq	-72(%rbp), %rcx
	testq	%rcx, %rcx
	jne	0x100016250
	jmp	0x10001681b
	xorl	%eax, %eax
	cmpq	%r9, %rax
	jne	0x100016395
	jmp	0x100016388
	xorl	%eax, %eax
	movabsq	$-4392081922311798003, %r11
	movq	-240(%rbp), %rcx
	movq	%rcx, 24(%rax)
	movq	-248(%rbp), %rcx
	movq	%rcx, 16(%rax)
	movq	-264(%rbp), %rcx
	movq	-256(%rbp), %rdx
	movq	%rdx, 8(%rax)
	movq	%rcx, (%rax)
	movq	$0, 48(%rax)
	movq	$0, 40(%rax)
	movq	$0, 32(%rax)
	movups	-232(%rbp), %xmm0
	movups	%xmm0, 32(%rax)
	movq	-216(%rbp), %rcx
	movq	%rcx, 48(%rax)
	leaq	-184(%rbp), %rcx
	movq	%rcx, %rdx
	movq	$0, -32(%rdx)
	movq	$0, -40(%rdx)
	movq	$0, -48(%rdx)
	movq	$0, 72(%rax)
	movq	$0, 64(%rax)
	movq	$0, 56(%rax)
	movdqu	-208(%rbp), %xmm0
	movdqu	%xmm0, 56(%rax)
	movq	-192(%rbp), %rcx
	movq	%rcx, 72(%rax)
	movq	$0, -8(%rdx)
	movq	$0, -16(%rdx)
	movq	$0, -24(%rdx)
	movq	(%rdx), %rcx
	movq	5(%rdx), %rdx
	movq	%rdx, 85(%rax)
	movq	%rcx, 80(%rax)
	movq	-72(%rbp), %rcx
	incq	%rcx
	movq	%rcx, -72(%rbp)
	testq	%rcx, %rcx
	jne	0x100016250
	jmp	0x10001681b
	movq	%rcx, -128(%rbp)
	movq	-72(%rbp), %rax
	movq	-104(%rbp), %rcx
	movq	-80(%rbp), %rdx
	leaq	-1(%rax,%rdx), %rsi
	movq	%rsi, %rax
	shrq	%rax
	mulq	%r11
	shrq	$4, %rdx
	movq	(%rcx,%rdx,8), %r15
	imulq	$42, %rdx, %rax
	subq	%rax, %rsi
	leaq	(%rsi,%rsi,2), %rbx
	shlq	$5, %rbx
	movq	56(%r15,%rbx), %rdi
	testq	%rdi, %rdi
	je	0x1000167ad
	movq	%rdi, 64(%r15,%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movabsq	$-4392081922311798003, %r11
	movq	32(%r15,%rbx), %rdi
	testq	%rdi, %rdi
	je	0x1000167cb
	movq	%rdi, 40(%r15,%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movabsq	$-4392081922311798003, %r11
	movq	-96(%rbp), %rax
	movq	-72(%rbp), %rcx
	leaq	-1(%rcx), %rdx
	movq	%rdx, -72(%rbp)
	movq	%rax, %rdx
	subq	-104(%rbp), %rdx
	sarq	$3, %rdx
	imulq	$42, %rdx, %rsi
	decq	%rsi
	testq	%rdx, %rdx
	cmoveq	%rdx, %rsi
	movl	$1, %edx
	subq	%rcx, %rdx
	subq	-80(%rbp), %rdx
	addq	%rsi, %rdx
	movb	$1, %cl
	movq	%rcx, -136(%rbp)
	cmpq	$84, %rdx
	jae	0x10001650f
	jmp	0x100016527
	testb	$1, -136(%rbp)
	jne	0x100016829
	xorl	%r14d, %r14d
	jmp	0x10001684f
	movq	-160(%rbp), %rax
	movq	(%rax), %rax
	movq	-144(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-128(%rbp), %rdx
	addq	%rcx, %rdx
	movq	%rdx, 8(%rax)
	movb	$1, 16(%rax)
	movb	$1, %r14b
	leaq	-112(%rbp), %rdi
	callq	__ZNSt3__112__deque_baseINS_7__stateIcEENS_9allocatorIS2_EEE5clearEv ## std::__1::__deque_base<std::__1::__state<char>, std::__1::allocator<std::__1::__state<char> > >::clear()
	movq	-104(%rbp), %rbx
	movq	-96(%rbp), %r15
	cmpq	%r15, %rbx
	je	0x1000168a3
	nopw	%cs:(%rax,%rax)
	movq	(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$8, %rbx
	cmpq	%rbx, %r15
	jne	0x100016870
	movq	-104(%rbp), %rcx
	movq	-96(%rbp), %rax
	cmpq	%rcx, %rax
	je	0x1000168a3
	leaq	-8(%rax), %rdx
	subq	%rcx, %rdx
	notq	%rdx
	andq	$-8, %rdx
	addq	%rax, %rdx
	movq	%rdx, -96(%rbp)
	movq	-112(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x1000168b1
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	100728(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	cmpq	-48(%rbp), %rax
	jne	0x1000168d6
	movl	%r14d, %eax
	addq	$232, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	callq	0x1000297a0 ## symbol stub for: ___stack_chk_fail
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	movl	$16, %esi
	movq	%r14, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	100300(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	100165(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%r14, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	jmp	0x100016955
	movq	%rax, %r15
	movq	%r14, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	jmp	0x100016958
	jmp	0x100016955
	jmp	0x100016955
	jmp	0x100016955
	movq	%rax, %r15
	movq	-208(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10001693b
	movq	%rdi, -200(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-232(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100016958
	movq	%rdi, -224(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x100016958
	movq	%rax, %r15
	leaq	-112(%rbp), %rdi
	callq	__ZNSt3__112__deque_baseINS_7__stateIcEENS_9allocatorIS2_EEE5clearEv ## std::__1::__deque_base<std::__1::__state<char>, std::__1::allocator<std::__1::__state<char> > >::clear()
	movq	-104(%rbp), %rbx
	movq	-96(%rbp), %r14
	cmpq	%r14, %rbx
	je	0x1000169a3
	nop
	movq	(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$8, %rbx
	cmpq	%rbx, %r14
	jne	0x100016970
	movq	-104(%rbp), %rcx
	movq	-96(%rbp), %rax
	cmpq	%rcx, %rax
	je	0x1000169a3
	leaq	-8(%rax), %rdx
	subq	%rcx, %rdx
	notq	%rdx
	andq	$-8, %rdx
	addq	%rax, %rdx
	movq	%rdx, -96(%rbp)
	movq	-112(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x1000169b1
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax)
	addb	%cl, %bh
	.byte 0xff #bad opcode
	ljmpl	*-5(%rbx)
	.byte 0xff #bad opcode
	lcalll	*(%rdi)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	lcalll	*(%rdi)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	lcalll	*(%rdi)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jmpq	*-7(%rsi)
	.byte 0xff #bad opcode
	ljmpl	*-5(%rbx)
	.byte 0xff #bad opcode
	pushq	(%rcx,%rdi,8)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jge	0x1000169d9
	.byte 0xff #bad opcode
	ljmpl	*-5(%rbx)
	.byte 0xff #bad opcode
	jmpq	*102(%rsi)
	nopw	%cs:(%rax,%rax)
__ZNKSt3__111basic_regexIcNS_12regex_traitsIcEEE27__match_at_start_posix_subsINS_9allocatorINS_9sub_matchIPKcEEEEEEbS8_S8_RNS_13match_resultsIS8_T_EENS_15regex_constants15match_flag_typeEb:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$296, %rsp
	movl	%r8d, -76(%rbp)
	movq	%rcx, %r12
	movq	%rdx, %rbx
	movq	%rsi, %r13
	movq	%rdi, %r15
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movl	$0, -304(%rbp)
	movl	$0, -216(%rbp)
	movq	$0, -224(%rbp)
	movq	$0, -232(%rbp)
	movq	$0, -240(%rbp)
	movq	$0, -248(%rbp)
	movq	$0, -256(%rbp)
	movq	$0, -264(%rbp)
	movq	$0, -272(%rbp)
	movq	$0, -280(%rbp)
	movq	$0, -288(%rbp)
	movq	$0, -296(%rbp)
	movq	40(%r15), %r14
	testq	%r14, %r14
	je	0x100017032
	movl	%r9d, -72(%rbp)
	movq	%rbx, -336(%rbp)
	movq	%rbx, -328(%rbp)
	movb	$0, -320(%rbp)
	movl	$0, -192(%rbp)
	movl	$0, -104(%rbp)
	movq	$0, -112(%rbp)
	movq	$0, -120(%rbp)
	movq	$0, -128(%rbp)
	movq	$0, -136(%rbp)
	movq	$0, -144(%rbp)
	movq	$0, -152(%rbp)
	movq	$0, -160(%rbp)
	movq	$0, -168(%rbp)
	movq	$0, -176(%rbp)
	movq	$0, -184(%rbp)
	leaq	-64(%rbp), %rdi
	leaq	-192(%rbp), %rsi
	callq	__ZNSt3__16vectorINS_7__stateIcEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ ## void std::__1::vector<std::__1::__state<char>, std::__1::allocator<std::__1::__state<char> > >::__push_back_slow_path<std::__1::__state<char> >(std::__1::__state<char>&&)
	movq	-136(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100016b66
	movq	%rdi, -128(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, -96(%rbp)
	movq	%r12, -312(%rbp)
	movq	-160(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100016b89
	movq	%rdi, -152(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-56(%rbp), %r12
	movl	$0, -96(%r12)
	movq	%r13, -88(%r12)
	movq	%r13, -80(%r12)
	movq	-96(%rbp), %rax
	movq	%rax, -72(%r12)
	movl	28(%r15), %esi
	movq	-64(%r12), %rax
	movq	-56(%r12), %rcx
	subq	%rax, %rcx
	sarq	$3, %rcx
	movabsq	$-6148914691236517205, %rdx
	imulq	%rdx, %rcx
	cmpq	%rsi, %rcx
	jae	0x100016bed
	addq	$-64, %r12
	subq	%rcx, %rsi
	leaq	-336(%rbp), %rdx
	movq	%r12, %rdi
	callq	__ZNSt3__16vectorINS_9sub_matchIPKcEENS_9allocatorIS4_EEE8__appendEmRKS4_ ## std::__1::vector<std::__1::sub_match<char const*>, std::__1::allocator<std::__1::sub_match<char const*> > >::__append(unsigned long, std::__1::sub_match<char const*> const&)
	movq	-56(%rbp), %r12
	jmp	0x100016bfc
	jbe	0x100016bfc
	leaq	(%rsi,%rsi,2), %rcx
	leaq	(%rax,%rcx,8), %rax
	movq	%rax, -56(%r12)
	movl	32(%r15), %esi
	movq	-40(%r12), %rax
	movq	-32(%r12), %rcx
	subq	%rax, %rcx
	sarq	$4, %rcx
	cmpq	%rsi, %rcx
	jae	0x100016c2e
	addq	$-40, %r12
	subq	%rcx, %rsi
	movq	%r12, %rdi
	callq	__ZNSt3__16vectorINS_4pairImPKcEENS_9allocatorIS4_EEE8__appendEm ## std::__1::vector<std::__1::pair<unsigned long, char const*>, std::__1::allocator<std::__1::pair<unsigned long, char const*> > >::__append(unsigned long)
	movq	-56(%rbp), %r12
	movl	-72(%rbp), %ecx
	jmp	0x100016c3f
	movl	-72(%rbp), %ecx
	jbe	0x100016c3f
	shlq	$4, %rsi
	addq	%rsi, %rax
	movq	%rax, -32(%r12)
	movq	-96(%rbp), %rax
	movq	%r13, -200(%rbp)
	subq	%r13, %rax
	movq	%rax, -208(%rbp)
	movq	%r14, -16(%r12)
	movl	-76(%rbp), %eax
	movl	%eax, -8(%r12)
	movb	%cl, -4(%r12)
	xorl	%eax, %eax
	movq	%rax, -88(%rbp)
	leaq	1561(%rip), %r13
	xorl	%eax, %eax
	movq	%rax, -72(%rbp)
	leaq	-96(%r12), %rbx
	testq	%r14, %r14
	je	0x100016cfd
	nopw	%cs:(%rax,%rax)
	movq	(%r14), %rax
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	*16(%rax)
	jmp	0x100016cfd
	leaq	-64(%rbp), %rdi
	movq	%r15, %rsi
	callq	__ZNSt3__16vectorINS_7__stateIcEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ ## void std::__1::vector<std::__1::__state<char>, std::__1::allocator<std::__1::__state<char> > >::__push_back_slow_path<std::__1::__state<char> >(std::__1::__state<char>&&)
	movq	-136(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100016cbf
	movq	%rdi, -128(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-160(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100016ce0
	movq	%rdi, -152(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	nopw	(%rax,%rax)
	movq	-56(%rbp), %r12
	cmpq	%r12, -64(%rbp)
	je	0x100017028
	movq	-16(%r12), %r14
	leaq	-96(%r12), %rbx
	testq	%r14, %r14
	jne	0x100016c90
	movl	(%rbx), %eax
	movl	$1000, %ecx
	addl	%ecx, %eax
	cmpl	$9, %eax
	ja	0x10001716a
	leaq	-16(%r12), %r14
	movslq	(%r13,%rax,4), %rax
	addq	%r13, %rax
	jmpq	*%rax
	testb	$32, -76(%rbp)
	je	0x100016d32
	movq	-200(%rbp), %rax
	cmpq	%rax, -80(%r12)
	je	0x100016d50
	movl	-76(%rbp), %eax
	testb	$16, %ah
	je	0x100016ec7
	movq	-96(%rbp), %rax
	cmpq	%rax, -80(%r12)
	je	0x100016ec7
	nopl	(%rax)
	movq	-56(%rbp), %rbx
	movq	-40(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100016d66
	movq	%rdi, -32(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-64(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100016d78
	movq	%rdi, -56(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$-96, %rbx
	movq	%rbx, -56(%rbp)
	movq	-56(%rbp), %r12
	cmpq	%r12, -64(%rbp)
	jne	0x100016cee
	jmp	0x100017028
	nopw	%cs:(%rax,%rax)
	leaq	-192(%rbp), %r15
	movq	%r15, %rdi
	movq	%rbx, %rsi
	callq	__ZNSt3__17__stateIcEC2ERKS1_ ## std::__1::__state<char>::__state(std::__1::__state<char> const&)
	movq	(%r14), %rdi
	movq	(%rdi), %rax
	movl	$1, %esi
	movq	%rbx, %rdx
	callq	*24(%rax)
	movq	-112(%rbp), %rdi
	movq	(%rdi), %rax
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	*24(%rax)
	movq	-56(%rbp), %rax
	cmpq	-48(%rbp), %rax
	jae	0x100016c9e
	movq	-168(%rbp), %rcx
	movq	%rcx, 24(%rax)
	movq	-176(%rbp), %rcx
	movq	%rcx, 16(%rax)
	movq	-192(%rbp), %rcx
	movq	-184(%rbp), %rdx
	movq	%rdx, 8(%rax)
	movq	%rcx, (%rax)
	movq	$0, 48(%rax)
	movq	$0, 40(%rax)
	movq	$0, 32(%rax)
	movups	-160(%rbp), %xmm0
	movups	%xmm0, 32(%rax)
	movq	-144(%rbp), %rcx
	movq	%rcx, 48(%rax)
	leaq	-112(%rbp), %rcx
	movq	%rcx, %rdx
	movq	$0, -32(%rdx)
	movq	$0, -40(%rdx)
	movq	$0, -48(%rdx)
	movq	$0, 72(%rax)
	movq	$0, 64(%rax)
	movq	$0, 56(%rax)
	movups	-136(%rbp), %xmm0
	movups	%xmm0, 56(%rax)
	movq	-120(%rbp), %rcx
	movq	%rcx, 72(%rax)
	movq	$0, -8(%rdx)
	movq	$0, -16(%rdx)
	movq	$0, -24(%rdx)
	movq	(%rdx), %rcx
	movq	5(%rdx), %rdx
	movq	%rdx, 85(%rax)
	movq	%rcx, 80(%rax)
	addq	$96, %rax
	movq	%rax, -56(%rbp)
	movq	-160(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x100016ccb
	jmp	0x100016ce0
	movq	-80(%r12), %r15
	subq	-88(%r12), %r15
	testb	$1, -72(%rbp)
	movq	-88(%rbp), %rax
	je	0x100016f58
	cmpq	%r15, %rax
	jl	0x100016f58
	cmpq	-208(%rbp), %rax
	jne	0x100016fe0
	movq	-64(%rbp), %r14
	movq	-56(%rbp), %rbx
	cmpq	%r14, %rbx
	je	0x100016f30
	nopw	(%rax,%rax)
	movq	-40(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100016f12
	movq	%rdi, -32(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-96(%rbx), %r15
	movq	-64(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100016f28
	movq	%rdi, -56(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%r15, %r14
	movq	%r15, %rbx
	jne	0x100016f00
	movq	%r14, -56(%rbp)
	movb	$1, %al
	movq	%rax, -72(%rbp)
	movq	-208(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-56(%rbp), %r12
	cmpq	%r12, -64(%rbp)
	jne	0x100016cee
	jmp	0x100017028
	movq	24(%rbx), %rax
	movq	%rax, -280(%rbp)
	movq	16(%rbx), %rax
	movq	%rax, -288(%rbp)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	movq	%rcx, -296(%rbp)
	movq	%rax, -304(%rbp)
	leaq	-304(%rbp), %rax
	cmpq	%rbx, %rax
	je	0x100016fbb
	movq	-64(%r12), %rsi
	movq	-56(%r12), %rdx
	leaq	-272(%rbp), %rdi
	callq	__ZNSt3__16vectorINS_9sub_matchIPKcEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ ## std::__1::enable_if<(__is_forward_iterator<std::__1::sub_match<char const*>*>::value) && (is_constructible<std::__1::sub_match<char const*>, std::__1::iterator_traits<std::__1::sub_match<char const*>*>::reference>::value), void>::type std::__1::vector<std::__1::sub_match<char const*>, std::__1::allocator<std::__1::sub_match<char const*> > >::assign<std::__1::sub_match<char const*>*>(std::__1::sub_match<char const*>*, std::__1::sub_match<char const*>*)
	movq	-40(%r12), %rsi
	movq	-32(%r12), %rdx
	leaq	-248(%rbp), %rdi
	callq	__ZNSt3__16vectorINS_4pairImPKcEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ ## std::__1::enable_if<(__is_forward_iterator<std::__1::pair<unsigned long, char const*>*>::value) && (is_constructible<std::__1::pair<unsigned long, char const*>, std::__1::iterator_traits<std::__1::pair<unsigned long, char const*>*>::reference>::value), void>::type std::__1::vector<std::__1::pair<unsigned long, char const*>, std::__1::allocator<std::__1::pair<unsigned long, char const*> > >::assign<std::__1::pair<unsigned long, char const*>*>(std::__1::pair<unsigned long, char const*>*, std::__1::pair<unsigned long, char const*>*)
	movq	(%r14), %rax
	movq	5(%r14), %rcx
	leaq	-224(%rbp), %rdx
	movq	%rcx, 5(%rdx)
	movq	%rax, (%rdx)
	movq	%r15, %rax
	cmpq	-208(%rbp), %rax
	je	0x100016eed
	movq	%rax, -88(%rbp)
	movq	-56(%rbp), %rbx
	movq	-40(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100016ffa
	movq	%rdi, -32(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-64(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x10001700c
	movq	%rdi, -56(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$-96, %rbx
	movq	%rbx, -56(%rbp)
	movb	$1, %al
	movq	%rax, -72(%rbp)
	movq	-56(%rbp), %r12
	cmpq	%r12, -64(%rbp)
	jne	0x100016cee
	testb	$1, -72(%rbp)
	jne	0x1000170d7
	xorl	%r14d, %r14d
	movq	-248(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10001704d
	movq	%rdi, -240(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-272(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100017065
	movq	%rdi, -264(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-64(%rbp), %r15
	testq	%r15, %r15
	je	0x1000170c2
	movq	-56(%rbp), %rbx
	cmpq	%r15, %rbx
	je	0x1000170b6
	nopw	(%rax,%rax)
	movq	-40(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100017092
	movq	%rdi, -32(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-96(%rbx), %r12
	movq	-64(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x1000170a8
	movq	%rdi, -56(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%r12, %r15
	movq	%r12, %rbx
	jne	0x100017080
	movq	-64(%rbp), %rdi
	jmp	0x1000170b9
	movq	%r15, %rdi
	movq	%r15, -56(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movl	%r14d, %eax
	addq	$296, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	-312(%rbp), %rax
	movq	(%rax), %rax
	movq	-200(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-88(%rbp), %rdx
	addq	%rcx, %rdx
	movq	%rdx, 8(%rax)
	movb	$1, 16(%rax)
	movq	-272(%rbp), %rcx
	movq	-264(%rbp), %r8
	subq	%rcx, %r8
	je	0x100017152
	sarq	$3, %r8
	movabsq	$-6148914691236517205, %rdx
	imulq	%rdx, %r8
	movl	$1, %esi
	xorl	%edi, %edi
	nopw	%cs:(%rax,%rax)
	leaq	(%rdi,%rdi,2), %rbx
	movl	%esi, %edi
	leaq	(%rdi,%rdi,2), %rdx
	movups	(%rcx,%rbx,8), %xmm0
	movups	%xmm0, (%rax,%rdx,8)
	movzbl	16(%rcx,%rbx,8), %ebx
	movb	%bl, 16(%rax,%rdx,8)
	incl	%esi
	cmpq	%rdi, %r8
	ja	0x100017130
	movb	$1, %r14b
	movq	-248(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x100017041
	jmp	0x10001704d
	movl	$24, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	movl	$16, %esi
	movq	%r14, %rdi
	callq	0x1000295cc ## symbol stub for: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
	movq	98109(%rip), %rsi ## literal pool symbol address: __ZTINSt3__111regex_errorE
	movq	97974(%rip), %rdx ## literal pool symbol address: __ZNSt3__111regex_errorD1Ev
	movq	%r14, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	jmp	0x1000171f9
	movq	%rax, %r15
	movq	%r14, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	-248(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x100017208
	jmp	0x100017214
	jmp	0x1000171f9
	jmp	0x1000171bb
	jmp	0x1000171f9
	movq	%rax, %r15
	movq	-136(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x1000171d3
	movq	%rdi, -128(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-160(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x1000171fc
	movq	%rdi, -152(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-248(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x100017208
	jmp	0x100017214
	movq	%rax, %r15
	movq	-248(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100017214
	movq	%rdi, -240(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-272(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10001722c
	movq	%rdi, -264(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-64(%rbp), %r14
	testq	%r14, %r14
	je	0x10001727d
	movq	-56(%rbp), %rbx
	cmpq	%r14, %rbx
	je	0x100017285
	nop
	movq	-40(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100017252
	movq	%rdi, -32(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-96(%rbx), %r12
	movq	-64(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100017268
	movq	%rdi, -56(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%r12, %r14
	movq	%r12, %rbx
	jne	0x100017240
	movq	-64(%rbp), %rdi
	movq	%r14, -56(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%r14, %rdi
	jmp	0x100017274
	nop
	xchgl	%edx, %eax
	cli
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivrp	%st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivrp	%st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivrp	%st(6)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	fdivrp	%st(6)
	.byte 0xff #bad opcode
	callq	*-1(%rdx,%rdi,8)
	callq	*-1(%rdx,%rdi,8)
	incl	%esp
	cli
	.byte 0xff #bad opcode
	callq	*(%rbx,%rdi,8)
	.byte 0xff #bad opcode
	callq	*-1(%rdx,%rdi,8)
	jmpq	*102(%rsi)
	nopw	%cs:(%rax,%rax)
__ZNSt3__15dequeINS_7__stateIcEENS_9allocatorIS2_EEE19__add_back_capacityEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$88, %rsp
	movq	%rdi, %r15
	movq	32(%r15), %rax
	cmpq	$42, %rax
	jb	0x10001737f
	addq	$-42, %rax
	movq	%rax, 32(%r15)
	movq	8(%r15), %r13
	movq	16(%r15), %r14
	movq	(%r13), %rdx
	leaq	8(%r13), %rbx
	movq	%rbx, 8(%r15)
	movq	24(%r15), %rax
	cmpq	%rax, %r14
	jne	0x1000176d4
	movq	(%r15), %rsi
	movq	%rbx, %rcx
	subq	%rsi, %rcx
	jbe	0x1000175ab
	sarq	$3, %rcx
	leaq	1(%rcx), %rax
	shrq	$63, %rax
	leaq	1(%rcx,%rax), %rax
	sarq	%rax
	movq	%rax, %rcx
	negq	%rcx
	shlq	$3, %rax
	movq	%rbx, %r12
	subq	%rax, %r12
	subq	%rbx, %r14
	movq	%r14, %r13
	sarq	$3, %r13
	je	0x10001736a
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%rdx, -48(%rbp)
	movq	%r14, %rdx
	movq	%rcx, %rbx
	callq	0x100029824 ## symbol stub for: _memmove
	movq	%rbx, %rcx
	movq	-48(%rbp), %rdx
	movq	8(%r15), %rbx
	leaq	(%r12,%r13,8), %r14
	movq	%r14, 16(%r15)
	leaq	(%rbx,%rcx,8), %rax
	movq	%rax, 8(%r15)
	jmp	0x1000176d4
	movq	16(%r15), %rax
	movq	24(%r15), %rcx
	movq	%rax, %rbx
	subq	8(%r15), %rbx
	sarq	$3, %rbx
	movq	%rcx, %rdx
	subq	(%r15), %rdx
	movq	%rdx, %rsi
	sarq	$3, %rsi
	cmpq	%rsi, %rbx
	jae	0x100017498
	movl	$4032, %edi
	cmpq	%rax, %rcx
	jne	0x100017591
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, -96(%rbp)
	leaq	-96(%rbp), %rsi
	movq	%r15, %rdi
	callq	__ZNSt3__114__split_bufferIPNS_7__stateIcEENS_9allocatorIS3_EEE10push_frontEOS3_ ## std::__1::__split_buffer<std::__1::__state<char>*, std::__1::allocator<std::__1::__state<char>*> >::push_front(std::__1::__state<char>*&&)
	movq	8(%r15), %r13
	movq	16(%r15), %r14
	movq	(%r13), %rdx
	leaq	8(%r13), %rbx
	movq	%rbx, 8(%r15)
	movq	24(%r15), %rax
	cmpq	%rax, %r14
	jne	0x1000176d4
	movq	(%r15), %rsi
	movq	%rbx, %rcx
	subq	%rsi, %rcx
	ja	0x10001731a
	movq	%rdx, -48(%rbp)
	movq	%rsi, -112(%rbp)
	subq	%rsi, %rax
	sarq	$2, %rax
	movl	$1, %r12d
	cmovneq	%rax, %r12
	movq	%r12, %rax
	shrq	$61, %rax
	jne	0x1000177ae
	movabsq	$9223372036854775804, %rax
	andq	%r12, %rax
	movq	%rax, -104(%rbp)
	leaq	(,%r12,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	-104(%rbp), %rcx
	leaq	(%rax,%rcx,2), %r9
	leaq	(%rax,%r12,8), %r8
	cmpq	%r14, %rbx
	movq	%r9, %rsi
	movq	-112(%rbp), %rdi
	je	0x1000176ae
	leaq	-16(%r14), %rcx
	subq	%r13, %rcx
	movl	%ecx, %edi
	shrl	$3, %edi
	incl	%edi
	andq	$7, %rdi
	je	0x1000176eb
	negq	%rdi
	movq	%r9, %rsi
	nopl	(%rax)
	movq	(%rbx), %rdx
	movq	%rdx, (%rsi)
	addq	$8, %rsi
	addq	$8, %rbx
	incq	%rdi
	jne	0x100017480
	jmp	0x1000176ee
	sarq	$2, %rdx
	movl	$1, %r14d
	cmovneq	%rdx, %r14
	leaq	24(%r15), %rax
	movq	$0, -72(%rbp)
	movq	%rax, -64(%rbp)
	movq	%r14, %rax
	shrq	$61, %rax
	jne	0x100017750
	leaq	(,%r14,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, -96(%rbp)
	leaq	(%rax,%rbx,8), %rcx
	movq	%rcx, -80(%rbp)
	movq	%rcx, -88(%rbp)
	leaq	(%rax,%r14,8), %rax
	movq	%rax, -72(%rbp)
	movl	$4032, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	%rbx, -120(%rbp)
	leaq	-96(%rbp), %rdi
	leaq	-120(%rbp), %rsi
	callq	__ZNSt3__114__split_bufferIPNS_7__stateIcEERNS_9allocatorIS3_EEE9push_backEOS3_ ## std::__1::__split_buffer<std::__1::__state<char>*, std::__1::allocator<std::__1::__state<char>*>&>::push_back(std::__1::__state<char>*&&)
	movq	8(%r15), %rax
	movq	16(%r15), %rbx
	cmpq	%rax, %rbx
	je	0x10001753c
	leaq	-96(%rbp), %r14
	nopw	(%rax,%rax)
	addq	$-8, %rbx
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	__ZNSt3__114__split_bufferIPNS_7__stateIcEERNS_9allocatorIS3_EEE10push_frontERKS3_ ## std::__1::__split_buffer<std::__1::__state<char>*, std::__1::allocator<std::__1::__state<char>*>&>::push_front(std::__1::__state<char>* const&)
	movq	8(%r15), %rax
	cmpq	%rax, %rbx
	jne	0x100017520
	movq	16(%r15), %rbx
	movq	(%r15), %rdi
	movaps	-96(%rbp), %xmm0
	movq	%rdi, -96(%rbp)
	movups	%xmm0, (%r15)
	movq	%rax, -88(%rbp)
	movaps	-80(%rbp), %xmm0
	movq	%rbx, -80(%rbp)
	movq	24(%r15), %rcx
	movups	%xmm0, 16(%r15)
	movq	%rcx, -72(%rbp)
	cmpq	%rbx, %rax
	je	0x10001757e
	leaq	-8(%rbx), %rcx
	subq	%rax, %rcx
	notq	%rcx
	andq	$-8, %rcx
	addq	%rbx, %rcx
	movq	%rcx, -80(%rbp)
	testq	%rdi, %rdi
	je	0x1000176dc
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x1000176dc
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, -96(%rbp)
	leaq	-96(%rbp), %rsi
	movq	%r15, %rdi
	callq	__ZNSt3__114__split_bufferIPNS_7__stateIcEENS_9allocatorIS3_EEE9push_backEOS3_ ## std::__1::__split_buffer<std::__1::__state<char>*, std::__1::allocator<std::__1::__state<char>*> >::push_back(std::__1::__state<char>*&&)
	jmp	0x1000176dc
	movq	%rdx, -48(%rbp)
	movq	%rsi, -112(%rbp)
	subq	%rsi, %rax
	sarq	$2, %rax
	movl	$1, %r12d
	cmovneq	%rax, %r12
	movq	%r12, %rax
	shrq	$61, %rax
	jne	0x10001776e
	movabsq	$9223372036854775804, %rax
	andq	%r12, %rax
	movq	%rax, -104(%rbp)
	leaq	(,%r12,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	-104(%rbp), %rcx
	leaq	(%rax,%rcx,2), %r9
	leaq	(%rax,%r12,8), %r8
	cmpq	%r14, %rbx
	movq	%r9, %rsi
	movq	-112(%rbp), %rdi
	je	0x1000176ae
	leaq	-16(%r14), %rcx
	subq	%r13, %rcx
	movl	%ecx, %edi
	shrl	$3, %edi
	incl	%edi
	andq	$7, %rdi
	je	0x10001764b
	negq	%rdi
	movq	%r9, %rsi
	nopw	%cs:(%rax,%rax)
	movq	(%rbx), %rdx
	movq	%rdx, (%rsi)
	addq	$8, %rsi
	addq	$8, %rbx
	incq	%rdi
	jne	0x100017630
	cmpq	$56, %rcx
	jb	0x1000176ab
	jmp	0x100017660
	movq	%r9, %rsi
	cmpq	$56, %rcx
	jb	0x1000176ab
	nopw	%cs:(%rax,%rax)
	movq	(%rbx), %rcx
	movq	%rcx, (%rsi)
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rsi)
	movq	16(%rbx), %rcx
	movq	%rcx, 16(%rsi)
	movq	24(%rbx), %rcx
	movq	%rcx, 24(%rsi)
	movq	32(%rbx), %rcx
	movq	%rcx, 32(%rsi)
	movq	40(%rbx), %rcx
	movq	%rcx, 40(%rsi)
	movq	48(%rbx), %rcx
	movq	%rcx, 48(%rsi)
	movq	56(%rbx), %rcx
	movq	%rcx, 56(%rsi)
	addq	$64, %rsi
	addq	$64, %rbx
	cmpq	%r14, %rbx
	jne	0x100017660
	movq	(%r15), %rdi
	movq	%rax, (%r15)
	movq	%r9, 8(%r15)
	movq	%rsi, 16(%r15)
	movq	%r8, 24(%r15)
	testq	%rdi, %rdi
	je	0x1000176cd
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	16(%r15), %r14
	jmp	0x1000176d0
	movq	%rsi, %r14
	movq	-48(%rbp), %rdx
	movq	%rdx, (%r14)
	addq	$8, 16(%r15)
	addq	$88, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r9, %rsi
	cmpq	$56, %rcx
	jb	0x1000176ab
	nopw	%cs:(%rax,%rax)
	movq	(%rbx), %rcx
	movq	%rcx, (%rsi)
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rsi)
	movq	16(%rbx), %rcx
	movq	%rcx, 16(%rsi)
	movq	24(%rbx), %rcx
	movq	%rcx, 24(%rsi)
	movq	32(%rbx), %rcx
	movq	%rcx, 32(%rsi)
	movq	40(%rbx), %rcx
	movq	%rcx, 40(%rsi)
	movq	48(%rbx), %rcx
	movq	%rcx, 48(%rsi)
	movq	56(%rbx), %rcx
	movq	%rcx, 56(%rsi)
	addq	$64, %rsi
	addq	$64, %rbx
	cmpq	%r14, %rbx
	jne	0x100017700
	jmp	0x1000176ab
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	leaq	92242(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%r14, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	jmp	0x10001778a
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	leaq	92212(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%r14, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	96871(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%r14)
	movq	96561(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	96410(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%r14, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	leaq	92148(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%r14, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	jmp	0x10001778a
	jmp	0x1000177d0
	jmp	0x1000177d0
	movq	%rax, %r15
	movq	%r14, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %r15
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x1000177f5
	jmp	0x1000177f2
	movq	%rax, %r15
	movq	-88(%rbp), %rcx
	movq	-80(%rbp), %rax
	cmpq	%rcx, %rax
	jne	0x100017813
	movq	-96(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x100017831
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	leaq	-8(%rax), %rdx
	subq	%rcx, %rdx
	notq	%rdx
	andq	$-8, %rdx
	addq	%rax, %rdx
	movq	%rdx, -80(%rbp)
	movq	-96(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10001780b
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nop
__ZNSt3__114__split_bufferIPNS_7__stateIcEENS_9allocatorIS3_EEE9push_backEOS3_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rdi, %r15
	movq	16(%r15), %r12
	movq	24(%r15), %rax
	cmpq	%rax, %r12
	jne	0x1000179f4
	movq	(%r15), %rdx
	movq	8(%r15), %rbx
	movq	%rbx, %rcx
	subq	%rdx, %rcx
	jbe	0x1000178da
	sarq	$3, %rcx
	leaq	1(%rcx), %rax
	shrq	$63, %rax
	leaq	1(%rcx,%rax), %rax
	sarq	%rax
	movq	%rax, %rcx
	negq	%rcx
	shlq	$3, %rax
	movq	%rbx, %r13
	subq	%rax, %r13
	subq	%rbx, %r12
	movq	%r12, %r14
	sarq	$3, %r14
	je	0x1000178c4
	movq	%r13, %rdi
	movq	%rsi, -48(%rbp)
	movq	%rbx, %rsi
	movq	%r12, %rdx
	movq	%rcx, %rbx
	callq	0x100029824 ## symbol stub for: _memmove
	movq	%rbx, %rcx
	movq	-48(%rbp), %rsi
	movq	8(%r15), %rbx
	leaq	(%r13,%r14,8), %r12
	movq	%r12, 16(%r15)
	leaq	(%rbx,%rcx,8), %rax
	movq	%rax, 8(%r15)
	jmp	0x1000179f4
	movq	%rsi, -48(%rbp)
	movq	%rdx, -56(%rbp)
	subq	%rdx, %rax
	sarq	$2, %rax
	movl	$1, %r14d
	cmovneq	%rax, %r14
	movq	%r14, %rax
	shrq	$61, %rax
	jne	0x100017a1e
	movabsq	$9223372036854775804, %r13
	andq	%r14, %r13
	leaq	(,%r14,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	leaq	(%rax,%r13,2), %r9
	leaq	(%rax,%r14,8), %r8
	cmpq	%r12, %rbx
	movq	%r9, %rsi
	movq	-56(%rbp), %rdi
	je	0x1000179ce
	leaq	-8(%r12), %rcx
	subq	%rbx, %rcx
	movl	%ecx, %edi
	shrl	$3, %edi
	incl	%edi
	andq	$7, %rdi
	je	0x100017a0f
	negq	%rdi
	movq	%r9, %rsi
	nopw	%cs:(%rax,%rax)
	movq	(%rbx), %rdx
	movq	%rdx, (%rsi)
	addq	$8, %rsi
	addq	$8, %rbx
	incq	%rdi
	jne	0x100017960
	cmpq	$56, %rcx
	jb	0x1000179cb
	nopl	(%rax)
	movq	(%rbx), %rcx
	movq	%rcx, (%rsi)
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rsi)
	movq	16(%rbx), %rcx
	movq	%rcx, 16(%rsi)
	movq	24(%rbx), %rcx
	movq	%rcx, 24(%rsi)
	movq	32(%rbx), %rcx
	movq	%rcx, 32(%rsi)
	movq	40(%rbx), %rcx
	movq	%rcx, 40(%rsi)
	movq	48(%rbx), %rcx
	movq	%rcx, 48(%rsi)
	movq	56(%rbx), %rcx
	movq	%rcx, 56(%rsi)
	addq	$64, %rsi
	addq	$64, %rbx
	cmpq	%r12, %rbx
	jne	0x100017980
	movq	(%r15), %rdi
	movq	%rax, (%r15)
	movq	%r9, 8(%r15)
	movq	%rsi, 16(%r15)
	movq	%r8, 24(%r15)
	testq	%rdi, %rdi
	je	0x1000179ed
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	16(%r15), %r12
	jmp	0x1000179f0
	movq	%rsi, %r12
	movq	-48(%rbp), %rsi
	movq	(%rsi), %rax
	movq	%rax, (%r12)
	addq	$8, 16(%r15)
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r9, %rsi
	cmpq	$56, %rcx
	jae	0x100017980
	jmp	0x1000179cb
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	91524(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	96183(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	95873(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	95722(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__114__split_bufferIPNS_7__stateIcEENS_9allocatorIS3_EEE10push_frontEOS3_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r14
	movq	%rdi, %r15
	movq	(%r15), %rcx
	movq	8(%r15), %rbx
	cmpq	%rcx, %rbx
	je	0x100017aa8
	movq	%rbx, %r12
	jmp	0x100017c17
	movq	%r14, -48(%rbp)
	movq	16(%r15), %r13
	movq	24(%r15), %rax
	cmpq	%rax, %r13
	jae	0x100017b10
	subq	%r13, %rax
	sarq	$3, %rax
	leaq	1(%rax), %rcx
	shrq	$63, %rcx
	leaq	1(%rax,%rcx), %r14
	sarq	%r14
	leaq	(%r13,%r14,8), %r12
	movq	%r13, %rdx
	subq	%rbx, %rdx
	movq	%rdx, %rax
	sarq	$3, %rax
	je	0x100017afa
	shlq	$3, %rax
	subq	%rax, %r12
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	0x100029824 ## symbol stub for: _memmove
	movq	16(%r15), %r13
	movq	%r12, 8(%r15)
	leaq	(%r13,%r14,8), %rax
	movq	%rax, 16(%r15)
	movq	-48(%rbp), %r14
	jmp	0x100017c17
	subq	%rcx, %rax
	sarq	$2, %rax
	movl	$1, %r14d
	cmovneq	%rax, %r14
	movq	%r14, %rax
	shrq	$61, %rax
	jne	0x100017c42
	leaq	6(%r14,%r14), %r12
	andq	$-8, %r12
	leaq	(,%r14,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	addq	%rax, %r12
	leaq	(%rax,%r14,8), %r8
	cmpq	%r13, %rbx
	je	0x100017bf0
	leaq	-8(%r13), %rsi
	subq	%rbx, %rsi
	movl	%esi, %edi
	shrl	$3, %edi
	incl	%edi
	andq	$7, %rdi
	movq	-48(%rbp), %r14
	je	0x100017c33
	negq	%rdi
	movq	%r12, %rdx
	nopw	%cs:(%rax,%rax)
	movq	(%rbx), %rcx
	movq	%rcx, (%rdx)
	addq	$8, %rdx
	addq	$8, %rbx
	incq	%rdi
	jne	0x100017b80
	cmpq	$56, %rsi
	jb	0x100017beb
	nopl	(%rax)
	movq	(%rbx), %rcx
	movq	%rcx, (%rdx)
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rdx)
	movq	16(%rbx), %rcx
	movq	%rcx, 16(%rdx)
	movq	24(%rbx), %rcx
	movq	%rcx, 24(%rdx)
	movq	32(%rbx), %rcx
	movq	%rcx, 32(%rdx)
	movq	40(%rbx), %rcx
	movq	%rcx, 40(%rdx)
	movq	48(%rbx), %rcx
	movq	%rcx, 48(%rdx)
	movq	56(%rbx), %rcx
	movq	%rcx, 56(%rdx)
	addq	$64, %rdx
	addq	$64, %rbx
	cmpq	%r13, %rbx
	jne	0x100017ba0
	movq	(%r15), %rbx
	jmp	0x100017bf7
	movq	%r12, %rdx
	movq	-48(%rbp), %r14
	movq	%rax, (%r15)
	movq	%r12, 8(%r15)
	movq	%rdx, 16(%r15)
	movq	%r8, 24(%r15)
	testq	%rbx, %rbx
	je	0x100017c17
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	8(%r15), %r12
	movq	(%r14), %rax
	movq	%rax, -8(%r12)
	addq	$-8, 8(%r15)
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r12, %rdx
	cmpq	$56, %rsi
	jae	0x100017ba0
	jmp	0x100017beb
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	90976(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	95635(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	95325(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	95174(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__114__split_bufferIPNS_7__stateIcEERNS_9allocatorIS3_EEE9push_backEOS3_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rdi, %r15
	movq	16(%r15), %r12
	movq	24(%r15), %rax
	cmpq	%rax, %r12
	jne	0x100017e54
	movq	(%r15), %rdx
	movq	8(%r15), %rbx
	movq	%rbx, %rcx
	subq	%rdx, %rcx
	jbe	0x100017d3a
	sarq	$3, %rcx
	leaq	1(%rcx), %rax
	shrq	$63, %rax
	leaq	1(%rcx,%rax), %rax
	sarq	%rax
	movq	%rax, %rcx
	negq	%rcx
	shlq	$3, %rax
	movq	%rbx, %r13
	subq	%rax, %r13
	subq	%rbx, %r12
	movq	%r12, %r14
	sarq	$3, %r14
	je	0x100017d24
	movq	%r13, %rdi
	movq	%rsi, -48(%rbp)
	movq	%rbx, %rsi
	movq	%r12, %rdx
	movq	%rcx, %rbx
	callq	0x100029824 ## symbol stub for: _memmove
	movq	%rbx, %rcx
	movq	-48(%rbp), %rsi
	movq	8(%r15), %rbx
	leaq	(%r13,%r14,8), %r12
	movq	%r12, 16(%r15)
	leaq	(%rbx,%rcx,8), %rax
	movq	%rax, 8(%r15)
	jmp	0x100017e54
	movq	%rsi, -48(%rbp)
	movq	%rdx, -56(%rbp)
	subq	%rdx, %rax
	sarq	$2, %rax
	movl	$1, %r14d
	cmovneq	%rax, %r14
	movq	%r14, %rax
	shrq	$61, %rax
	jne	0x100017e7e
	movabsq	$9223372036854775804, %r13
	andq	%r14, %r13
	leaq	(,%r14,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	leaq	(%rax,%r13,2), %r9
	leaq	(%rax,%r14,8), %r8
	cmpq	%r12, %rbx
	movq	%r9, %rsi
	movq	-56(%rbp), %rdi
	je	0x100017e2e
	leaq	-8(%r12), %rcx
	subq	%rbx, %rcx
	movl	%ecx, %edi
	shrl	$3, %edi
	incl	%edi
	andq	$7, %rdi
	je	0x100017e6f
	negq	%rdi
	movq	%r9, %rsi
	nopw	%cs:(%rax,%rax)
	movq	(%rbx), %rdx
	movq	%rdx, (%rsi)
	addq	$8, %rsi
	addq	$8, %rbx
	incq	%rdi
	jne	0x100017dc0
	cmpq	$56, %rcx
	jb	0x100017e2b
	nopl	(%rax)
	movq	(%rbx), %rcx
	movq	%rcx, (%rsi)
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rsi)
	movq	16(%rbx), %rcx
	movq	%rcx, 16(%rsi)
	movq	24(%rbx), %rcx
	movq	%rcx, 24(%rsi)
	movq	32(%rbx), %rcx
	movq	%rcx, 32(%rsi)
	movq	40(%rbx), %rcx
	movq	%rcx, 40(%rsi)
	movq	48(%rbx), %rcx
	movq	%rcx, 48(%rsi)
	movq	56(%rbx), %rcx
	movq	%rcx, 56(%rsi)
	addq	$64, %rsi
	addq	$64, %rbx
	cmpq	%r12, %rbx
	jne	0x100017de0
	movq	(%r15), %rdi
	movq	%rax, (%r15)
	movq	%r9, 8(%r15)
	movq	%rsi, 16(%r15)
	movq	%r8, 24(%r15)
	testq	%rdi, %rdi
	je	0x100017e4d
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	16(%r15), %r12
	jmp	0x100017e50
	movq	%rsi, %r12
	movq	-48(%rbp), %rsi
	movq	(%rsi), %rax
	movq	%rax, (%r12)
	addq	$8, 16(%r15)
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r9, %rsi
	cmpq	$56, %rcx
	jae	0x100017de0
	jmp	0x100017e2b
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	90404(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	95063(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	94753(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	94602(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__114__split_bufferIPNS_7__stateIcEERNS_9allocatorIS3_EEE10push_frontERKS3_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r14
	movq	%rdi, %r15
	movq	(%r15), %rcx
	movq	8(%r15), %rbx
	cmpq	%rcx, %rbx
	je	0x100017f08
	movq	%rbx, %r12
	jmp	0x100018077
	movq	%r14, -48(%rbp)
	movq	16(%r15), %r13
	movq	24(%r15), %rax
	cmpq	%rax, %r13
	jae	0x100017f70
	subq	%r13, %rax
	sarq	$3, %rax
	leaq	1(%rax), %rcx
	shrq	$63, %rcx
	leaq	1(%rax,%rcx), %r14
	sarq	%r14
	leaq	(%r13,%r14,8), %r12
	movq	%r13, %rdx
	subq	%rbx, %rdx
	movq	%rdx, %rax
	sarq	$3, %rax
	je	0x100017f5a
	shlq	$3, %rax
	subq	%rax, %r12
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	0x100029824 ## symbol stub for: _memmove
	movq	16(%r15), %r13
	movq	%r12, 8(%r15)
	leaq	(%r13,%r14,8), %rax
	movq	%rax, 16(%r15)
	movq	-48(%rbp), %r14
	jmp	0x100018077
	subq	%rcx, %rax
	sarq	$2, %rax
	movl	$1, %r14d
	cmovneq	%rax, %r14
	movq	%r14, %rax
	shrq	$61, %rax
	jne	0x1000180a2
	leaq	6(%r14,%r14), %r12
	andq	$-8, %r12
	leaq	(,%r14,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	addq	%rax, %r12
	leaq	(%rax,%r14,8), %r8
	cmpq	%r13, %rbx
	je	0x100018050
	leaq	-8(%r13), %rsi
	subq	%rbx, %rsi
	movl	%esi, %edi
	shrl	$3, %edi
	incl	%edi
	andq	$7, %rdi
	movq	-48(%rbp), %r14
	je	0x100018093
	negq	%rdi
	movq	%r12, %rdx
	nopw	%cs:(%rax,%rax)
	movq	(%rbx), %rcx
	movq	%rcx, (%rdx)
	addq	$8, %rdx
	addq	$8, %rbx
	incq	%rdi
	jne	0x100017fe0
	cmpq	$56, %rsi
	jb	0x10001804b
	nopl	(%rax)
	movq	(%rbx), %rcx
	movq	%rcx, (%rdx)
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rdx)
	movq	16(%rbx), %rcx
	movq	%rcx, 16(%rdx)
	movq	24(%rbx), %rcx
	movq	%rcx, 24(%rdx)
	movq	32(%rbx), %rcx
	movq	%rcx, 32(%rdx)
	movq	40(%rbx), %rcx
	movq	%rcx, 40(%rdx)
	movq	48(%rbx), %rcx
	movq	%rcx, 48(%rdx)
	movq	56(%rbx), %rcx
	movq	%rcx, 56(%rdx)
	addq	$64, %rdx
	addq	$64, %rbx
	cmpq	%r13, %rbx
	jne	0x100018000
	movq	(%r15), %rbx
	jmp	0x100018057
	movq	%r12, %rdx
	movq	-48(%rbp), %r14
	movq	%rax, (%r15)
	movq	%r12, 8(%r15)
	movq	%rdx, 16(%r15)
	movq	%r8, 24(%r15)
	testq	%rbx, %rbx
	je	0x100018077
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	8(%r15), %r12
	movq	(%r14), %rax
	movq	%rax, -8(%r12)
	addq	$-8, 8(%r15)
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r12, %rdx
	cmpq	$56, %rsi
	jae	0x100018000
	jmp	0x10001804b
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	89856(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	94515(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	94205(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	94054(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__112__deque_baseINS_7__stateIcEENS_9allocatorIS2_EEE5clearEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %r15
	movq	8(%r15), %rsi
	movq	16(%r15), %rdi
	movq	32(%r15), %r8
	movq	%r8, %rcx
	shrq	%rcx
	movabsq	$-4392081922311798003, %r9
	movq	%rcx, %rax
	mulq	%r9
	cmpq	%rsi, %rdi
	je	0x1000181ef
	shrq	$4, %rdx
	leaq	(%rsi,%rdx,8), %r12
	movq	%rcx, %rax
	mulq	%r9
	shrq	$4, %rdx
	imulq	$42, %rdx, %rax
	movq	%r8, %rcx
	subq	%rax, %rcx
	leaq	(%rcx,%rcx,2), %rbx
	shlq	$5, %rbx
	addq	(%r12), %rbx
	leaq	40(%r15), %r14
	addq	40(%r15), %r8
	movq	%r8, %rax
	shrq	%rax
	mulq	%r9
	shrq	$4, %rdx
	imulq	$42, %rdx, %rax
	subq	%rax, %r8
	leaq	(%r8,%r8,2), %r13
	shlq	$5, %r13
	addq	(%rsi,%rdx,8), %r13
	cmpq	%rbx, %r13
	je	0x1000181f3
	nopw	%cs:(%rax,%rax)
	movq	56(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x1000181b2
	movq	%rdi, 64(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	32(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x1000181c4
	movq	%rdi, 40(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$96, %rbx
	movq	%rbx, %rax
	subq	(%r12), %rax
	cmpq	$4032, %rax
	jne	0x1000181e0
	movq	8(%r12), %rbx
	addq	$8, %r12
	cmpq	%rbx, %r13
	jne	0x1000181a0
	movq	8(%r15), %rsi
	movq	16(%r15), %rdi
	jmp	0x1000181f3
	leaq	40(%r15), %r14
	subq	%rsi, %rdi
	movq	$0, (%r14)
	sarq	$3, %rdi
	cmpq	$3, %rdi
	jb	0x100018235
	nopw	(%rax,%rax)
	movq	(%rsi), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	8(%r15), %rsi
	movq	16(%r15), %rdi
	addq	$8, %rsi
	movq	%rsi, 8(%r15)
	subq	%rsi, %rdi
	sarq	$3, %rdi
	cmpq	$2, %rdi
	ja	0x100018210
	cmpq	$1, %rdi
	je	0x100018248
	cmpq	$2, %rdi
	jne	0x100018251
	movl	$42, %eax
	jmp	0x10001824d
	movl	$21, %eax
	movq	%rax, 32(%r15)
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
__ZNSt3__15dequeINS_7__stateIcEENS_9allocatorIS2_EEE20__add_front_capacityEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$72, %rsp
	movq	%rdi, %r14
	movq	8(%r14), %rax
	movq	16(%r14), %rcx
	movq	%rcx, %rdx
	subq	%rax, %rdx
	movq	%rdx, %rsi
	sarq	$3, %rsi
	imulq	$42, %rsi, %rdi
	decq	%rdi
	testq	%rsi, %rsi
	cmoveq	%rsi, %rdi
	movq	32(%r14), %rsi
	movq	40(%r14), %rbx
	addq	%rsi, %rbx
	subq	%rbx, %rdi
	cmpq	$42, %rdi
	jb	0x1000182d4
	addq	$42, %rsi
	movq	%rsi, 32(%r14)
	movq	-8(%rcx), %rax
	addq	$-8, %rcx
	movq	%rax, -80(%rbp)
	movq	%rcx, 16(%r14)
	leaq	-80(%rbp), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__114__split_bufferIPNS_7__stateIcEENS_9allocatorIS3_EEE10push_frontERKS3_ ## std::__1::__split_buffer<std::__1::__state<char>*, std::__1::allocator<std::__1::__state<char>*> >::push_front(std::__1::__state<char>* const&)
	jmp	0x100018651
	movq	(%r14), %rsi
	movq	24(%r14), %rcx
	subq	%rsi, %rcx
	cmpq	%rcx, %rdx
	jae	0x10001832b
	movl	$4032, %edi
	cmpq	%rsi, %rax
	jne	0x10001859a
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, -80(%rbp)
	leaq	-80(%rbp), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__114__split_bufferIPNS_7__stateIcEENS_9allocatorIS3_EEE9push_backEOS3_ ## std::__1::__split_buffer<std::__1::__state<char>*, std::__1::allocator<std::__1::__state<char>*> >::push_back(std::__1::__state<char>*&&)
	movq	16(%r14), %rax
	movq	-8(%rax), %rcx
	addq	$-8, %rax
	movq	%rcx, -80(%rbp)
	movq	%rax, 16(%r14)
	leaq	-80(%rbp), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__114__split_bufferIPNS_7__stateIcEENS_9allocatorIS3_EEE10push_frontERKS3_ ## std::__1::__split_buffer<std::__1::__state<char>*, std::__1::allocator<std::__1::__state<char>*> >::push_front(std::__1::__state<char>* const&)
	jmp	0x1000185af
	sarq	$2, %rcx
	movl	$1, %ebx
	cmovneq	%rcx, %rbx
	leaq	24(%r14), %rax
	movq	$0, -56(%rbp)
	movq	%rax, -48(%rbp)
	movq	%rbx, %rax
	shrq	$61, %rax
	jne	0x1000186a0
	leaq	(,%rbx,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, -80(%rbp)
	movq	%rax, -64(%rbp)
	movq	%rax, -72(%rbp)
	leaq	(%rax,%rbx,8), %rax
	movq	%rax, -56(%rbp)
	movl	$4032, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	%rbx, -104(%rbp)
	leaq	-80(%rbp), %rdi
	leaq	-104(%rbp), %rsi
	callq	__ZNSt3__114__split_bufferIPNS_7__stateIcEERNS_9allocatorIS3_EEE9push_backEOS3_ ## std::__1::__split_buffer<std::__1::__state<char>*, std::__1::allocator<std::__1::__state<char>*>&>::push_back(std::__1::__state<char>*&&)
	movq	8(%r14), %r13
	movq	16(%r14), %rcx
	cmpq	%rcx, %r13
	je	0x1000185d2
	movq	-64(%rbp), %r15
	movq	%r14, -88(%rbp)
	jmp	0x1000183d0
	movq	%r9, %rsi
	cmpq	$56, %rcx
	jae	0x1000184f0
	jmp	0x10001853b
	nopw	%cs:(%rax,%rax)
	movq	-56(%rbp), %r12
	cmpq	%r12, %r15
	jne	0x100018570
	movq	-80(%rbp), %rcx
	movq	-72(%rbp), %rbx
	movq	%rbx, %rax
	subq	%rcx, %rax
	jbe	0x10001844e
	sarq	$3, %rax
	leaq	1(%rax), %rcx
	shrq	$63, %rcx
	leaq	1(%rax,%rcx), %rax
	sarq	%rax
	movq	%rax, %rcx
	negq	%rcx
	shlq	$3, %rax
	movq	%rbx, %r15
	subq	%rax, %r15
	subq	%rbx, %r12
	movq	%r12, %r14
	sarq	$3, %r14
	je	0x100018435
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r12, %rdx
	movq	%rcx, %rbx
	callq	0x100029824 ## symbol stub for: _memmove
	movq	%rbx, %rcx
	movq	-72(%rbp), %rbx
	leaq	(%r15,%r14,8), %r15
	movq	%r15, -64(%rbp)
	leaq	(%rbx,%rcx,8), %rax
	movq	%rax, -72(%rbp)
	movq	-88(%rbp), %r14
	jmp	0x100018570
	movq	%rcx, -96(%rbp)
	subq	%rcx, %r12
	sarq	$2, %r12
	movl	$1, %eax
	cmoveq	%rax, %r12
	movabsq	$2305843009213693951, %rax
	cmpq	%rax, %r12
	ja	0x100018660
	leaq	(,%r12,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%r12, %rcx
	movabsq	$9223372036854775804, %rdx
	andq	%rdx, %rcx
	leaq	(%rax,%rcx,2), %r9
	leaq	(%rax,%r12,8), %r8
	cmpq	%r15, %rbx
	movq	%r9, %rsi
	je	0x10001853b
	leaq	-8(%r15), %rcx
	subq	%rbx, %rcx
	movl	%ecx, %edi
	shrl	$3, %edi
	incl	%edi
	andq	$7, %rdi
	je	0x1000183af
	negq	%rdi
	movq	%r9, %rsi
	nopw	%cs:(%rax,%rax)
	movq	(%rbx), %rdx
	movq	%rdx, (%rsi)
	addq	$8, %rsi
	addq	$8, %rbx
	incq	%rdi
	jne	0x1000184d0
	cmpq	$56, %rcx
	jb	0x10001853b
	nopl	(%rax)
	movq	(%rbx), %rcx
	movq	%rcx, (%rsi)
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rsi)
	movq	16(%rbx), %rcx
	movq	%rcx, 16(%rsi)
	movq	24(%rbx), %rcx
	movq	%rcx, 24(%rsi)
	movq	32(%rbx), %rcx
	movq	%rcx, 32(%rsi)
	movq	40(%rbx), %rcx
	movq	%rcx, 40(%rsi)
	movq	48(%rbx), %rcx
	movq	%rcx, 48(%rsi)
	movq	56(%rbx), %rcx
	movq	%rcx, 56(%rsi)
	addq	$64, %rsi
	addq	$64, %rbx
	cmpq	%r15, %rbx
	jne	0x1000184f0
	movq	%rax, -80(%rbp)
	movq	%r9, -72(%rbp)
	movq	%rsi, -64(%rbp)
	movq	%r8, -56(%rbp)
	movq	-96(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10001855f
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-64(%rbp), %r15
	jmp	0x100018570
	movq	%rsi, %r15
	nopw	%cs:(%rax,%rax)
	movq	(%r13), %rax
	movq	%rax, (%r15)
	movq	-64(%rbp), %r15
	addq	$8, %r15
	movq	%r15, -64(%rbp)
	addq	$8, %r13
	movq	16(%r14), %rcx
	cmpq	%rcx, %r13
	jne	0x1000183d0
	movq	8(%r14), %r13
	jmp	0x1000185d6
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, -80(%rbp)
	leaq	-80(%rbp), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__114__split_bufferIPNS_7__stateIcEENS_9allocatorIS3_EEE10push_frontEOS3_ ## std::__1::__split_buffer<std::__1::__state<char>*, std::__1::allocator<std::__1::__state<char>*> >::push_front(std::__1::__state<char>*&&)
	movq	16(%r14), %rax
	subq	8(%r14), %rax
	cmpq	$8, %rax
	jne	0x1000185c4
	movl	$21, %eax
	jmp	0x1000185cc
	movq	32(%r14), %rax
	addq	$42, %rax
	movq	%rax, 32(%r14)
	jmp	0x100018651
	movq	-64(%rbp), %r15
	movq	(%r14), %rdi
	movq	-80(%rbp), %rax
	movq	%rax, (%r14)
	movq	%rdi, -80(%rbp)
	movq	-72(%rbp), %rax
	movq	%rax, 8(%r14)
	movq	%r13, -72(%rbp)
	movq	%r15, 16(%r14)
	movq	%rcx, -64(%rbp)
	movq	24(%r14), %rdx
	movq	-56(%rbp), %rsi
	movq	%rsi, 24(%r14)
	movq	%rdx, -56(%rbp)
	subq	%rax, %r15
	cmpq	$8, %r15
	jne	0x100018621
	movl	$21, %eax
	movq	%rax, 32(%r14)
	cmpq	%r13, %rcx
	jne	0x100018632
	jmp	0x100018647
	movq	32(%r14), %rax
	addq	$42, %rax
	movq	%rax, 32(%r14)
	cmpq	%r13, %rcx
	je	0x100018647
	leaq	-8(%rcx), %rax
	subq	%r13, %rax
	notq	%rax
	andq	$-8, %rax
	addq	%rcx, %rax
	movq	%rax, -64(%rbp)
	testq	%rdi, %rdi
	je	0x100018651
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$72, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	leaq	88386(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%r14, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	93045(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%r14)
	movq	92735(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	92584(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%r14, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	leaq	88322(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%r14, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	92981(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%r14)
	movq	92671(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	92520(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%r14, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r15
	movq	%r14, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	jmp	0x100018711
	movq	%rax, %r15
	movq	%r14, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	jmp	0x100018714
	movq	%rax, %r15
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x100018714
	jmp	0x100018711
	movq	%rax, %r15
	movq	-72(%rbp), %rcx
	movq	-64(%rbp), %rax
	cmpq	%rcx, %rax
	je	0x100018736
	leaq	-8(%rax), %rdx
	subq	%rcx, %rdx
	notq	%rdx
	andq	$-8, %rdx
	addq	%rax, %rdx
	movq	%rdx, -64(%rbp)
	movq	-80(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x100018747
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__114__split_bufferIPNS_7__stateIcEENS_9allocatorIS3_EEE10push_frontERKS3_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r14
	movq	%rdi, %r15
	movq	(%r15), %rcx
	movq	8(%r15), %rbx
	cmpq	%rcx, %rbx
	je	0x100018788
	movq	%rbx, %r12
	jmp	0x1000188f7
	movq	%r14, -48(%rbp)
	movq	16(%r15), %r13
	movq	24(%r15), %rax
	cmpq	%rax, %r13
	jae	0x1000187f0
	subq	%r13, %rax
	sarq	$3, %rax
	leaq	1(%rax), %rcx
	shrq	$63, %rcx
	leaq	1(%rax,%rcx), %r14
	sarq	%r14
	leaq	(%r13,%r14,8), %r12
	movq	%r13, %rdx
	subq	%rbx, %rdx
	movq	%rdx, %rax
	sarq	$3, %rax
	je	0x1000187da
	shlq	$3, %rax
	subq	%rax, %r12
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	0x100029824 ## symbol stub for: _memmove
	movq	16(%r15), %r13
	movq	%r12, 8(%r15)
	leaq	(%r13,%r14,8), %rax
	movq	%rax, 16(%r15)
	movq	-48(%rbp), %r14
	jmp	0x1000188f7
	subq	%rcx, %rax
	sarq	$2, %rax
	movl	$1, %r14d
	cmovneq	%rax, %r14
	movq	%r14, %rax
	shrq	$61, %rax
	jne	0x100018922
	leaq	6(%r14,%r14), %r12
	andq	$-8, %r12
	leaq	(,%r14,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	addq	%rax, %r12
	leaq	(%rax,%r14,8), %r8
	cmpq	%r13, %rbx
	je	0x1000188d0
	leaq	-8(%r13), %rsi
	subq	%rbx, %rsi
	movl	%esi, %edi
	shrl	$3, %edi
	incl	%edi
	andq	$7, %rdi
	movq	-48(%rbp), %r14
	je	0x100018913
	negq	%rdi
	movq	%r12, %rdx
	nopw	%cs:(%rax,%rax)
	movq	(%rbx), %rcx
	movq	%rcx, (%rdx)
	addq	$8, %rdx
	addq	$8, %rbx
	incq	%rdi
	jne	0x100018860
	cmpq	$56, %rsi
	jb	0x1000188cb
	nopl	(%rax)
	movq	(%rbx), %rcx
	movq	%rcx, (%rdx)
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rdx)
	movq	16(%rbx), %rcx
	movq	%rcx, 16(%rdx)
	movq	24(%rbx), %rcx
	movq	%rcx, 24(%rdx)
	movq	32(%rbx), %rcx
	movq	%rcx, 32(%rdx)
	movq	40(%rbx), %rcx
	movq	%rcx, 40(%rdx)
	movq	48(%rbx), %rcx
	movq	%rcx, 48(%rdx)
	movq	56(%rbx), %rcx
	movq	%rcx, 56(%rdx)
	addq	$64, %rdx
	addq	$64, %rbx
	cmpq	%r13, %rbx
	jne	0x100018880
	movq	(%r15), %rbx
	jmp	0x1000188d7
	movq	%r12, %rdx
	movq	-48(%rbp), %r14
	movq	%rax, (%r15)
	movq	%r12, 8(%r15)
	movq	%rdx, 16(%r15)
	movq	%r8, 24(%r15)
	testq	%rbx, %rbx
	je	0x1000188f7
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	8(%r15), %r12
	movq	(%r14), %rax
	movq	%rax, -8(%r12)
	addq	$-8, 8(%r15)
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r12, %rdx
	cmpq	$56, %rsi
	jae	0x100018880
	jmp	0x1000188cb
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	87680(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	92339(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	92029(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	91878(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorINS_9sub_matchIPKcEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rdx, %rcx
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	%rcx, %r15
	subq	%rbx, %r15
	movq	%r15, %r12
	sarq	$3, %r12
	movabsq	$-6148914691236517205, %r13
	imulq	%r13, %r12
	movq	(%r14), %rdi
	movq	16(%r14), %rax
	movq	%rax, %rdx
	subq	%rdi, %rdx
	sarq	$3, %rdx
	imulq	%r13, %rdx
	cmpq	%rdx, %r12
	jbe	0x100018a8c
	testq	%rdi, %rdi
	je	0x1000189f7
	movq	%rdi, 8(%r14)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	$0, 16(%r14)
	movq	$0, 8(%r14)
	movq	$0, (%r14)
	xorl	%eax, %eax
	movabsq	$768614336404564650, %rcx
	cmpq	%rcx, %r12
	ja	0x100018b11
	sarq	$3, %rax
	imulq	%r13, %rax
	movabsq	$384307168202282324, %rdx
	cmpq	%rdx, %rax
	ja	0x100018a2e
	addq	%rax, %rax
	cmpq	%r12, %rax
	cmovbq	%r12, %rax
	movq	%rax, %rcx
	shlq	$3, %rcx
	leaq	(%rcx,%rcx,2), %r13
	movq	%r13, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r12
	movq	%r12, 8(%r14)
	movq	%r12, (%r14)
	addq	%r12, %r13
	movq	%r13, 16(%r14)
	testq	%r15, %r15
	movabsq	$-6148914691236517205, %rcx
	jle	0x100018b02
	movq	%r15, %rax
	mulq	%rcx
	movq	%rdx, %r13
	shrq	$4, %r13
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	leaq	(%r13,%r13,2), %rax
	leaq	(%r12,%rax,8), %rax
	movq	%rax, 8(%r14)
	jmp	0x100018b02
	movq	8(%r14), %rax
	subq	%rdi, %rax
	leaq	(%rbx,%rax), %rsi
	sarq	$3, %rax
	imulq	%r13, %rax
	cmpq	%rax, %r12
	cmovbeq	%rcx, %rsi
	cmpq	%rbx, %rsi
	je	0x100018aca
	nopl	(%rax,%rax)
	movups	(%rbx), %xmm0
	movups	%xmm0, (%rdi)
	movzbl	16(%rbx), %edx
	movb	%dl, 16(%rdi)
	addq	$24, %rdi
	addq	$24, %rbx
	cmpq	%rsi, %rbx
	jne	0x100018ab0
	cmpq	%rax, %r12
	jbe	0x100018afe
	subq	%rsi, %rcx
	testq	%rcx, %rcx
	jle	0x100018b02
	movq	%rcx, %rax
	mulq	%r13
	movq	%rdx, %rbx
	shrq	$4, %rbx
	movq	8(%r14), %rdi
	movq	%rcx, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	leaq	(%rbx,%rbx,2), %rax
	shlq	$3, %rax
	addq	%rax, 8(%r14)
	jmp	0x100018b02
	movq	%rdi, 8(%r14)
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r14, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	nopl	(%rax)
__ZNSt3__16vectorINS_4pairImPKcEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rdx, %r12
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	%r12, %r13
	subq	%rbx, %r13
	movq	%r13, %r15
	sarq	$4, %r15
	movq	(%r14), %rdi
	movq	16(%r14), %rax
	movq	%rax, %rcx
	subq	%rdi, %rcx
	sarq	$4, %rcx
	cmpq	%rcx, %r15
	jbe	0x100018bcf
	testq	%rdi, %rdi
	je	0x100018b81
	movq	%rdi, 8(%r14)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	$0, 16(%r14)
	movq	$0, 8(%r14)
	movq	$0, (%r14)
	xorl	%eax, %eax
	movq	%r15, %rcx
	shrq	$60, %rcx
	jne	0x100018bc7
	movabsq	$1152921504606846975, %rcx
	movq	%rax, %rdx
	sarq	$4, %rdx
	movabsq	$576460752303423486, %rsi
	cmpq	%rsi, %rdx
	ja	0x100018ca9
	sarq	$3, %rax
	cmpq	%r15, %rax
	jb	0x100018cac
	cmpq	%rcx, %rax
	movq	%rax, %r15
	jbe	0x100018cac
	movq	%r14, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	8(%r14), %rax
	subq	%rdi, %rax
	leaq	(%rbx,%rax), %rsi
	sarq	$4, %rax
	cmpq	%rax, %r15
	cmovbeq	%r12, %rsi
	cmpq	%rbx, %rsi
	je	0x100018c84
	leaq	-16(%rsi), %r8
	subq	%rbx, %r8
	movl	%r8d, %ecx
	shrl	$4, %ecx
	incl	%ecx
	andq	$7, %rcx
	je	0x100018cf2
	negq	%rcx
	movq	%rdi, %rdx
	nopl	(%rax)
	movups	(%rbx), %xmm0
	movups	%xmm0, (%rdx)
	addq	$16, %rbx
	addq	$16, %rdx
	incq	%rcx
	jne	0x100018c10
	cmpq	$112, %r8
	jb	0x100018c7b
	nopl	(%rax)
	movups	(%rbx), %xmm0
	movups	%xmm0, (%rdx)
	movups	16(%rbx), %xmm0
	movups	%xmm0, 16(%rdx)
	movups	32(%rbx), %xmm0
	movups	%xmm0, 32(%rdx)
	movups	48(%rbx), %xmm0
	movups	%xmm0, 48(%rdx)
	movups	64(%rbx), %xmm0
	movups	%xmm0, 64(%rdx)
	movups	80(%rbx), %xmm0
	movups	%xmm0, 80(%rdx)
	movups	96(%rbx), %xmm0
	movups	%xmm0, 96(%rdx)
	movups	112(%rbx), %xmm0
	movups	%xmm0, 112(%rdx)
	subq	$-128, %rbx
	subq	$-128, %rdx
	cmpq	%rsi, %rbx
	jne	0x100018c30
	andq	$-16, %r8
	leaq	16(%rdi,%r8), %rdi
	cmpq	%rax, %r15
	jbe	0x100018ca3
	subq	%rsi, %r12
	testq	%r12, %r12
	jle	0x100018ce3
	movq	8(%r14), %rdi
	movq	%r12, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	addq	%r12, 8(%r14)
	jmp	0x100018ce3
	movq	%rdi, 8(%r14)
	jmp	0x100018ce3
	movq	%rcx, %r15
	shlq	$4, %r15
	movq	%r15, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r12
	movq	%r12, 8(%r14)
	movq	%r12, (%r14)
	addq	%r12, %r15
	movq	%r15, 16(%r14)
	testq	%r13, %r13
	jle	0x100018ce3
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%r13, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	addq	%r13, %r12
	movq	%r12, 8(%r14)
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rdi, %rdx
	cmpq	$112, %r8
	jae	0x100018c30
	jmp	0x100018c7b
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorIxNS_9allocatorIxEEE21__push_back_slow_pathIRKxEEvOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rsi, %r8
	movq	%rdi, %r13
	movq	(%r13), %rsi
	movq	8(%r13), %r12
	subq	%rsi, %r12
	movq	%r12, %r15
	sarq	$3, %r15
	leaq	1(%r15), %rax
	movq	%rax, %rcx
	shrq	$61, %rcx
	jne	0x100018e58
	movabsq	$2305843009213693951, %rcx
	movq	16(%r13), %r14
	subq	%rsi, %r14
	movq	%r14, %rdx
	sarq	$3, %rdx
	movabsq	$1152921504606846974, %rdi
	cmpq	%rdi, %rdx
	ja	0x100018dd2
	sarq	$2, %r14
	cmpq	%rax, %r14
	cmovbq	%rax, %r14
	testq	%r14, %r14
	je	0x100018e51
	movq	%r8, -48(%rbp)
	movq	%rsi, -56(%rbp)
	cmpq	%rcx, %r14
	jbe	0x100018ddd
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	86544(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	91203(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	90893(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	90742(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%r8, -48(%rbp)
	movq	%rsi, -56(%rbp)
	movq	%rcx, %r14
	leaq	(,%r14,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	-56(%rbp), %rsi
	movq	-48(%rbp), %r8
	leaq	(%rbx,%r14,8), %r14
	movq	(%r8), %rax
	movq	%rax, (%rbx,%r15,8)
	leaq	8(%rbx,%r15,8), %r15
	testq	%r12, %r12
	jle	0x100018e1b
	movq	%rbx, %rdi
	movq	%r12, %rdx
	movq	%rsi, %r12
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r12, %rsi
	movq	%rbx, (%r13)
	movq	%r15, 8(%r13)
	movq	%r14, 16(%r13)
	testq	%rsi, %rsi
	je	0x100018e42
	movq	%rsi, %rdi
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
	jmp	0x100018df5
	movq	%r13, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorINS_10unique_ptrIN9benchmark8internal9BenchmarkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rsi, %r15
	movq	%rdi, %r14
	movq	(%r14), %rdx
	movq	8(%r14), %r12
	subq	%rdx, %r12
	sarq	$3, %r12
	leaq	1(%r12), %rax
	movq	%rax, %rcx
	shrq	$61, %rcx
	jne	0x1000190b7
	movabsq	$2305843009213693951, %rcx
	movq	16(%r14), %rbx
	subq	%rdx, %rbx
	movq	%rbx, %rdx
	sarq	$3, %rdx
	movabsq	$1152921504606846974, %rsi
	cmpq	%rsi, %rdx
	ja	0x100018f31
	sarq	$2, %rbx
	cmpq	%rax, %rbx
	cmovbq	%rax, %rbx
	testq	%rbx, %rbx
	je	0x1000190ae
	cmpq	%rcx, %rbx
	jbe	0x100018f34
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	86193(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	90852(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	90542(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	90391(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rcx, %rbx
	leaq	(,%rbx,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	leaq	(%rax,%r12,8), %rdx
	leaq	(%rax,%rbx,8), %r8
	movq	(%r15), %rcx
	movq	$0, (%r15)
	movq	%rcx, (%rax,%r12,8)
	leaq	8(%rax,%r12,8), %rax
	movq	(%r14), %r15
	movq	8(%r14), %rsi
	cmpq	%r15, %rsi
	je	0x10001905a
	leaq	-8(%rsi), %rcx
	subq	%r15, %rcx
	movl	%ecx, %edi
	shrl	$3, %edi
	incl	%edi
	andq	$7, %rdi
	je	0x100018fad
	negq	%rdi
	nopw	%cs:(%rax,%rax)
	movq	-8(%rsi), %rbx
	movq	$0, -8(%rsi)
	leaq	-8(%rsi), %rsi
	movq	%rbx, -8(%rdx)
	addq	$-8, %rdx
	incq	%rdi
	jne	0x100018f90
	cmpq	$56, %rcx
	jb	0x100019051
	nopw	(%rax,%rax)
	movq	-8(%rsi), %rcx
	movq	$0, -8(%rsi)
	movq	%rcx, -8(%rdx)
	movq	-16(%rsi), %rcx
	movq	$0, -16(%rsi)
	movq	%rcx, -16(%rdx)
	movq	-24(%rsi), %rcx
	movq	$0, -24(%rsi)
	movq	%rcx, -24(%rdx)
	movq	-32(%rsi), %rcx
	movq	$0, -32(%rsi)
	movq	%rcx, -32(%rdx)
	movq	-40(%rsi), %rcx
	movq	$0, -40(%rsi)
	movq	%rcx, -40(%rdx)
	movq	-48(%rsi), %rcx
	movq	$0, -48(%rsi)
	movq	%rcx, -48(%rdx)
	movq	-56(%rsi), %rcx
	movq	$0, -56(%rsi)
	movq	%rcx, -56(%rdx)
	movq	-64(%rsi), %rcx
	movq	$0, -64(%rsi)
	leaq	-64(%rsi), %rsi
	movq	%rcx, -64(%rdx)
	addq	$-64, %rdx
	cmpq	%rsi, %r15
	jne	0x100018fc0
	movq	(%r14), %r15
	movq	8(%r14), %rbx
	jmp	0x10001905d
	movq	%r15, %rbx
	movq	%rdx, (%r14)
	movq	%rax, 8(%r14)
	movq	%r8, 16(%r14)
	cmpq	%r15, %rbx
	je	0x100019090
	nopl	(%rax)
	movq	-8(%rbx), %rdi
	movq	$0, -8(%rbx)
	leaq	-8(%rbx), %rbx
	testq	%rdi, %rdi
	je	0x10001908b
	movq	(%rdi), %rax
	callq	*8(%rax)
	cmpq	%rbx, %r15
	jne	0x100019070
	testq	%r15, %r15
	je	0x1000190a5
	movq	%r15, %rdi
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%ebx, %ebx
	xorl	%eax, %eax
	jmp	0x100018f41
	movq	%r14, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorIxNS_9allocatorIxEEE6assignIPxEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIxNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rdx, %r12
	movq	%rdi, %r15
	movq	%r12, %r14
	subq	%rsi, %r14
	movq	%r14, %r13
	sarq	$3, %r13
	movq	(%r15), %rbx
	movq	16(%r15), %rax
	movq	%rax, %rcx
	subq	%rbx, %rcx
	sarq	$3, %rcx
	cmpq	%rcx, %r13
	jbe	0x10001918d
	movq	%rsi, %r12
	testq	%rbx, %rbx
	je	0x100019147
	movq	%rbx, 8(%r15)
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	$0, 16(%r15)
	movq	$0, 8(%r15)
	movq	$0, (%r15)
	xorl	%eax, %eax
	movq	%r13, %rcx
	shrq	$61, %rcx
	jne	0x100019185
	movabsq	$2305843009213693951, %rcx
	movq	%rax, %rdx
	sarq	$3, %rdx
	movabsq	$1152921504606846974, %rsi
	cmpq	%rsi, %rdx
	ja	0x1000191f6
	sarq	$2, %rax
	cmpq	%r13, %rax
	jb	0x1000191f9
	cmpq	%rcx, %rax
	movq	%rax, %r13
	jbe	0x1000191f9
	movq	%r15, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	8(%r15), %r14
	subq	%rbx, %r14
	leaq	(%rsi,%r14), %rax
	sarq	$3, %r14
	cmpq	%r14, %r13
	cmovbeq	%r12, %rax
	movq	%rax, %rdx
	subq	%rsi, %rdx
	movq	%rdx, %rcx
	sarq	$3, %rcx
	je	0x1000191ca
	movq	%rbx, %rdi
	movq	%rax, -56(%rbp)
	movq	%rcx, -48(%rbp)
	callq	0x100029824 ## symbol stub for: _memmove
	movq	-48(%rbp), %rcx
	movq	-56(%rbp), %rax
	cmpq	%r14, %r13
	jbe	0x1000191ec
	subq	%rax, %r12
	testq	%r12, %r12
	jle	0x100019232
	movq	8(%r15), %rdi
	movq	%rax, %rsi
	movq	%r12, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	addq	%r12, 8(%r15)
	jmp	0x100019232
	leaq	(%rbx,%rcx,8), %rax
	movq	%rax, 8(%r15)
	jmp	0x100019232
	movq	%rcx, %r13
	leaq	(,%r13,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	%rbx, 8(%r15)
	movq	%rbx, (%r15)
	leaq	(%rbx,%r13,8), %rax
	movq	%rax, 16(%r15)
	testq	%r14, %r14
	jle	0x100019232
	movq	%rbx, %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	addq	%r14, %rbx
	movq	%rbx, 8(%r15)
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorIN9benchmark8internal9Benchmark8InstanceENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movabsq	$121360158379668102, %r12
	movq	(%r14), %rdx
	movq	8(%r14), %r15
	subq	%rdx, %r15
	sarq	$3, %r15
	movabsq	$-8737931403336103397, %rsi
	imulq	%rsi, %r15
	leaq	1(%r15), %rax
	cmpq	%r12, %rax
	ja	0x1000195f3
	movq	16(%r14), %rcx
	subq	%rdx, %rcx
	sarq	$3, %rcx
	imulq	%rsi, %rcx
	movabsq	$60680079189834050, %rdx
	cmpq	%rdx, %rcx
	ja	0x1000192c8
	addq	%rcx, %rcx
	cmpq	%rax, %rcx
	cmovbq	%rax, %rcx
	testq	%rcx, %rcx
	movq	%rcx, %r12
	je	0x1000195e9
	imulq	$152, %r12, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	imulq	$152, %r15, %rsi
	leaq	(%rax,%rsi), %rdx
	imulq	$152, %r12, %r8
	movq	16(%rbx), %rdi
	movq	%rdi, 16(%rax,%rsi)
	movq	(%rbx), %rdi
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rax,%rsi)
	movq	%rdi, (%rax,%rsi)
	movq	$0, 16(%rbx)
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	movl	32(%rbx), %ecx
	movl	%ecx, 32(%rax,%rsi)
	movq	24(%rbx), %rcx
	movq	%rcx, 24(%rax,%rsi)
	movq	$0, 56(%rax,%rsi)
	movq	$0, 48(%rax,%rsi)
	movups	40(%rbx), %xmm0
	movups	%xmm0, 40(%rax,%rsi)
	movq	56(%rbx), %rcx
	movq	%rcx, 56(%rax,%rsi)
	movq	$0, 56(%rbx)
	movq	$0, 48(%rbx)
	movq	$0, 40(%rbx)
	movq	80(%rbx), %rcx
	movq	%rcx, 80(%rax,%rsi)
	movq	64(%rbx), %rcx
	movq	72(%rbx), %rdi
	movq	%rdi, 72(%rax,%rsi)
	movq	%rcx, 64(%rax,%rsi)
	movdqu	88(%rbx), %xmm0
	movdqu	%xmm0, 88(%rax,%rsi)
	movq	104(%rbx), %rcx
	movq	%rcx, 104(%rax,%rsi)
	testq	%rcx, %rcx
	leaq	96(%rax,%rsi), %rdi
	je	0x1000193c0
	pextrq	$1, %xmm0, %rcx
	movq	%rdi, 16(%rcx)
	leaq	96(%rbx), %rcx
	movq	%rcx, 88(%rbx)
	movq	$0, 104(%rbx)
	movq	$0, 96(%rbx)
	jmp	0x1000193c8
	leaq	88(%rax,%rsi), %rcx
	movq	%rdi, (%rcx)
	addq	%rax, %r8
	movl	144(%rbx), %ecx
	movl	%ecx, 144(%rax,%rsi)
	movq	136(%rbx), %rcx
	movq	%rcx, 136(%rax,%rsi)
	movq	128(%rbx), %rcx
	movq	%rcx, 128(%rax,%rsi)
	movq	112(%rbx), %rcx
	movq	120(%rbx), %rdi
	movq	%rdi, 120(%rax,%rsi)
	movq	%rcx, 112(%rax,%rsi)
	leaq	152(%rdx), %rax
	movq	(%r14), %r12
	movq	8(%r14), %rsi
	cmpq	%r12, %rsi
	je	0x100019563
	addq	$-56, %rsi
	negq	%r12
	nopw	%cs:(%rax,%rax)
	movq	-80(%rsi), %rcx
	movq	%rcx, -136(%rdx)
	movq	-96(%rsi), %rcx
	movq	-88(%rsi), %rdi
	movq	%rdi, -144(%rdx)
	movq	%rcx, -152(%rdx)
	movq	$0, -80(%rsi)
	movq	$0, -88(%rsi)
	movq	$0, -96(%rsi)
	movl	-64(%rsi), %ecx
	movl	%ecx, -120(%rdx)
	movq	-72(%rsi), %rcx
	movq	%rcx, -128(%rdx)
	movq	$0, -96(%rdx)
	movq	$0, -104(%rdx)
	movq	$0, -112(%rdx)
	movdqu	-56(%rsi), %xmm0
	movdqu	%xmm0, -112(%rdx)
	movq	-40(%rsi), %rcx
	movq	%rcx, -96(%rdx)
	movq	$0, -40(%rsi)
	movq	$0, -48(%rsi)
	movq	$0, -56(%rsi)
	movq	-16(%rsi), %rcx
	movq	%rcx, -72(%rdx)
	movq	-32(%rsi), %rcx
	movq	-24(%rsi), %rdi
	movq	%rdi, -80(%rdx)
	movq	%rcx, -88(%rdx)
	movq	-8(%rsi), %rcx
	movq	%rcx, -64(%rdx)
	leaq	-56(%rdx), %rdi
	movq	(%rsi), %rbx
	movq	%rbx, -56(%rdx)
	movq	8(%rsi), %rcx
	movq	%rcx, -48(%rdx)
	testq	%rcx, %rcx
	je	0x100019510
	movq	%rdi, 16(%rbx)
	movq	%rsi, -8(%rsi)
	movq	$0, 8(%rsi)
	movq	$0, (%rsi)
	jmp	0x100019514
	nopw	(%rax,%rax)
	movq	%rdi, -64(%rdx)
	movl	48(%rsi), %ecx
	movl	%ecx, -8(%rdx)
	movq	40(%rsi), %rcx
	movq	%rcx, -16(%rdx)
	movq	32(%rsi), %rcx
	movq	%rcx, -24(%rdx)
	movq	16(%rsi), %rcx
	movq	24(%rsi), %rdi
	movq	%rdi, -32(%rdx)
	movq	%rcx, -40(%rdx)
	addq	$-152, %rdx
	leaq	-152(%rsi,%r12), %rcx
	addq	$-152, %rsi
	cmpq	$-56, %rcx
	jne	0x100019430
	movq	(%r14), %r15
	movq	8(%r14), %r12
	jmp	0x100019566
	movq	%r12, %r15
	movq	%rdx, (%r14)
	movq	%rax, 8(%r14)
	movq	%r8, 16(%r14)
	cmpq	%r15, %r12
	je	0x1000195cb
	nopw	%cs:(%rax,%rax)
	leaq	-64(%r12), %rdi
	movq	-56(%r12), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	-112(%r12), %rdi
	testq	%rdi, %rdi
	je	0x1000195a3
	movq	%rdi, -104(%r12)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-152(%r12), %rbx
	testb	$1, -152(%r12)
	je	0x1000195c3
	movq	-136(%r12), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r15
	movq	%rbx, %r12
	jne	0x100019580
	testq	%r15, %r15
	je	0x1000195e0
	movq	%r15, %rdi
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%r12d, %r12d
	xorl	%eax, %eax
	jmp	0x1000192d4
	movq	%r14, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	nopl	(%rax,%rax)
__ZNSt3__16vectorINS0_IxNS_9allocatorIxEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rsi, %r14
	movq	%rdi, %r15
	movabsq	$768614336404564650, %r12
	movq	(%r15), %rdx
	movq	8(%r15), %rbx
	subq	%rdx, %rbx
	sarq	$3, %rbx
	movabsq	$-6148914691236517205, %rsi
	imulq	%rsi, %rbx
	leaq	1(%rbx), %rax
	cmpq	%r12, %rax
	ja	0x1000197a6
	movq	16(%r15), %rcx
	subq	%rdx, %rcx
	sarq	$3, %rcx
	imulq	%rsi, %rcx
	movabsq	$384307168202282324, %rdx
	cmpq	%rdx, %rcx
	ja	0x100019678
	addq	%rcx, %rcx
	cmpq	%rax, %rcx
	cmovbq	%rax, %rcx
	testq	%rcx, %rcx
	movq	%rcx, %r12
	je	0x10001979c
	leaq	(,%r12,8), %rax
	leaq	(%rax,%rax,2), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	leaq	(%rbx,%rbx,2), %rsi
	leaq	(%rax,%rsi,8), %rdx
	leaq	(%r12,%r12,2), %rcx
	leaq	(%rax,%rcx,8), %rcx
	movq	$0, 16(%rax,%rsi,8)
	movq	$0, 8(%rax,%rsi,8)
	movups	(%r14), %xmm0
	movups	%xmm0, (%rax,%rsi,8)
	movq	16(%r14), %rdi
	movq	%rdi, 16(%rax,%rsi,8)
	movq	$0, 16(%r14)
	movq	$0, 8(%r14)
	movq	$0, (%r14)
	leaq	24(%rax,%rsi,8), %rsi
	movq	(%r15), %rax
	movq	8(%r15), %rdi
	cmpq	%rax, %rdi
	je	0x100019746
	nopw	%cs:(%rax,%rax)
	movq	$0, -8(%rdx)
	movq	$0, -16(%rdx)
	movq	$0, -24(%rdx)
	movups	-24(%rdi), %xmm0
	movups	%xmm0, -24(%rdx)
	movq	-8(%rdi), %rbx
	movq	%rbx, -8(%rdx)
	movq	$0, -8(%rdi)
	movq	$0, -16(%rdi)
	movq	$0, -24(%rdi)
	leaq	-24(%rdi), %rdi
	addq	$-24, %rdx
	cmpq	%rdi, %rax
	jne	0x1000196f0
	movq	(%r15), %r14
	movq	8(%r15), %rax
	jmp	0x100019749
	movq	%rax, %r14
	movq	%rdx, (%r15)
	movq	%rsi, 8(%r15)
	movq	%rcx, 16(%r15)
	cmpq	%r14, %rax
	je	0x10001977e
	nopl	(%rax)
	leaq	-24(%rax), %rbx
	movq	-24(%rax), %rdi
	testq	%rdi, %rdi
	je	0x100019776
	movq	%rdi, -16(%rax)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r14
	movq	%rbx, %rax
	jne	0x100019760
	testq	%r14, %r14
	je	0x100019793
	movq	%r14, %rdi
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%r12d, %r12d
	xorl	%eax, %eax
	jmp	0x100019689
	movq	%r15, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	nop
__ZNSt3__16vectorINS0_IxNS_9allocatorIxEEEENS1_IS3_EEEC2Em:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	$0, 16(%r14)
	movq	$0, 8(%r14)
	movq	$0, (%r14)
	testq	%rbx, %rbx
	je	0x100019909
	movabsq	$768614336404564651, %rax
	cmpq	%rax, %rbx
	jae	0x100019912
	leaq	(,%rbx,8), %rax
	leaq	(%rax,%rax,2), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rcx
	movq	%rcx, 8(%r14)
	movq	%rcx, (%r14)
	leaq	(%rbx,%rbx,2), %rax
	leaq	(%rcx,%rax,8), %rax
	movq	%rax, 16(%r14)
	leaq	-1(%rbx), %rax
	movq	%rbx, %rdx
	andq	$3, %rdx
	je	0x10001985b
	negq	%rdx
	nopl	(%rax,%rax)
	movq	$0, 16(%rcx)
	movq	$0, 8(%rcx)
	movq	$0, (%rcx)
	movq	8(%r14), %rcx
	addq	$24, %rcx
	movq	%rcx, 8(%r14)
	decq	%rbx
	incq	%rdx
	jne	0x100019830
	cmpq	$3, %rax
	jb	0x100019909
	nopw	%cs:(%rax,%rax)
	movq	$0, 16(%rcx)
	movq	$0, 8(%rcx)
	movq	$0, (%rcx)
	movq	8(%r14), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	$0, 40(%rax)
	movq	$0, 32(%rax)
	movq	$0, 24(%rax)
	movq	8(%r14), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	$0, 40(%rax)
	movq	$0, 32(%rax)
	movq	$0, 24(%rax)
	movq	8(%r14), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	$0, 40(%rax)
	movq	$0, 32(%rax)
	movq	$0, 24(%rax)
	movq	8(%r14), %rcx
	addq	$24, %rcx
	movq	%rcx, 8(%r14)
	addq	$-4, %rbx
	jne	0x100019870
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r14, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r15
	movq	(%r14), %r12
	testq	%r12, %r12
	je	0x10001995a
	movq	8(%r14), %rax
	cmpq	%r12, %rax
	je	0x100019962
	nop
	leaq	-24(%rax), %rbx
	movq	-24(%rax), %rdi
	testq	%rdi, %rdi
	je	0x100019946
	movq	%rdi, -16(%rax)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r12
	movq	%rbx, %rax
	jne	0x100019930
	movq	(%r14), %rdi
	movq	%r12, 8(%r14)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%r12, %rdi
	jmp	0x100019951
	nopw	(%rax,%rax)
__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_:
__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPKS6_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rdx, %r14
	movq	%rsi, %rbx
	movq	%rdi, %r15
	movq	%r14, %r13
	subq	%rbx, %r13
	sarq	$3, %r13
	movabsq	$-6148914691236517205, %rdx
	imulq	%rdx, %r13
	movq	(%r15), %r12
	movq	16(%r15), %rax
	movq	%rax, %rcx
	subq	%r12, %rcx
	sarq	$3, %rcx
	imulq	%rdx, %rcx
	cmpq	%rcx, %r13
	jbe	0x100019a0a
	testq	%r12, %r12
	je	0x100019b03
	movq	8(%r15), %rax
	cmpq	%r12, %rax
	je	0x100019ad4
	movq	%r13, -48(%rbp)
	movq	%r14, %r13
	nopl	(%rax)
	leaq	-24(%rax), %r14
	testb	$1, -24(%rax)
	je	0x1000199f3
	movq	-8(%rax), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%r14, %r12
	movq	%r14, %rax
	jne	0x1000199e0
	movq	(%r15), %rdi
	movq	%r13, %r14
	movq	-48(%rbp), %r13
	jmp	0x100019ad7
	movq	8(%r15), %rcx
	subq	%r12, %rcx
	movq	%r13, %rax
	leaq	(%rbx,%rcx), %r13
	sarq	$3, %rcx
	imulq	%rdx, %rcx
	movq	%rax, -48(%rbp)
	movq	%rcx, -64(%rbp)
	cmpq	%rcx, %rax
	movq	%r14, -56(%rbp)
	cmovaq	%r13, %r14
	cmpq	%rbx, %r14
	je	0x100019a58
	nopl	(%rax,%rax)
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	addq	$24, %rbx
	addq	$24, %r12
	cmpq	%rbx, %r14
	jne	0x100019a40
	movq	-64(%rbp), %rax
	cmpq	%rax, -48(%rbp)
	jbe	0x100019aa2
	movq	-56(%rbp), %rax
	cmpq	%rax, %r14
	movq	%rax, %rbx
	je	0x100019b7d
	movq	8(%r15), %rdi
	nopw	%cs:(%rax,%rax)
	movq	%r13, %rsi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	addq	$24, %r13
	movq	8(%r15), %rdi
	addq	$24, %rdi
	movq	%rdi, 8(%r15)
	cmpq	%r13, %rbx
	jne	0x100019a80
	jmp	0x100019b7d
	movq	8(%r15), %rax
	cmpq	%r12, %rax
	je	0x100019acb
	nopl	(%rax,%rax)
	leaq	-24(%rax), %rbx
	testb	$1, -24(%rax)
	je	0x100019ac3
	movq	-8(%rax), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r12
	movq	%rbx, %rax
	jne	0x100019ab0
	movq	%r12, 8(%r15)
	jmp	0x100019b7d
	movq	%r12, %rdi
	movq	%r12, 8(%r15)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	$0, 16(%r15)
	movq	$0, 8(%r15)
	movq	$0, (%r15)
	xorl	%eax, %eax
	movabsq	$-6148914691236517205, %rdx
	movabsq	$768614336404564650, %rcx
	cmpq	%rcx, %r13
	ja	0x100019b8c
	sarq	$3, %rax
	imulq	%rdx, %rax
	movabsq	$384307168202282324, %rdx
	cmpq	%rdx, %rax
	ja	0x100019b36
	addq	%rax, %rax
	cmpq	%r13, %rax
	cmovbq	%r13, %rax
	movq	%rax, %rcx
	shlq	$3, %rcx
	leaq	(%rcx,%rcx,2), %r12
	movq	%r12, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rdi
	movq	%rdi, 8(%r15)
	movq	%rdi, (%r15)
	addq	%rdi, %r12
	movq	%r12, 16(%r15)
	cmpq	%r14, %rbx
	je	0x100019b7d
	nopl	(%rax)
	movq	%rbx, %rsi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	addq	$24, %rbx
	movq	8(%r15), %rdi
	addq	$24, %rdi
	movq	%rdi, 8(%r15)
	cmpq	%rbx, %r14
	jne	0x100019b60
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r15, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorINS0_IxNS_9allocatorIxEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	movq	%rsi, %r13
	movabsq	$768614336404564650, %rsi
	movq	(%rdi), %r15
	movq	8(%rdi), %r12
	movq	%r12, %rbx
	subq	%r15, %rbx
	sarq	$3, %rbx
	movabsq	$-6148914691236517205, %rdx
	imulq	%rdx, %rbx
	leaq	1(%rbx), %rax
	cmpq	%rsi, %rax
	ja	0x100019dc5
	movq	16(%rdi), %rcx
	subq	%r15, %rcx
	sarq	$3, %rcx
	imulq	%rdx, %rcx
	movabsq	$384307168202282324, %rdx
	cmpq	%rdx, %rcx
	movq	%rdi, -80(%rbp)
	ja	0x100019c22
	addq	%rcx, %rcx
	cmpq	%rax, %rcx
	cmovbq	%rax, %rcx
	testq	%rcx, %rcx
	movq	%rcx, %rsi
	je	0x100019db8
	movq	%rsi, -64(%rbp)
	leaq	(,%rsi,8), %rax
	leaq	(%rax,%rax,2), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rcx
	leaq	(%rbx,%rbx,2), %rax
	leaq	(%rcx,%rax,8), %rbx
	movq	$0, 16(%rcx,%rax,8)
	movq	$0, 8(%rcx,%rax,8)
	movq	$0, (%rcx,%rax,8)
	movq	(%r13), %rdx
	movq	8(%r13), %r13
	subq	%rdx, %r13
	movq	%r13, %r14
	sarq	$3, %r14
	je	0x100019cd8
	movq	%rdx, -72(%rbp)
	movq	%rax, -48(%rbp)
	movq	%rcx, -56(%rbp)
	movq	%r14, %rax
	shrq	$61, %rax
	jne	0x100019dca
	movq	%r13, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	-56(%rbp), %rcx
	movq	-48(%rbp), %rdx
	movq	%rax, 8(%rcx,%rdx,8)
	movq	%rax, (%rbx)
	leaq	(%rax,%r14,8), %rsi
	movq	%rsi, 16(%rcx,%rdx,8)
	testq	%r13, %r13
	movq	-72(%rbp), %rsi
	jle	0x100019cd8
	leaq	8(%rcx,%rdx,8), %rcx
	movq	%rcx, -48(%rbp)
	movq	%rax, %r14
	movq	%r14, %rdi
	movq	%r13, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	-56(%rbp), %rcx
	addq	%r13, %r14
	movq	-48(%rbp), %rax
	movq	%r14, (%rax)
	movq	-64(%rbp), %rax
	leaq	(%rax,%rax,2), %rax
	leaq	(%rcx,%rax,8), %rax
	leaq	24(%rbx), %rcx
	cmpq	%r15, %r12
	movq	-80(%rbp), %rsi
	je	0x100019d5d
	nopw	%cs:(%rax,%rax)
	movq	$0, -8(%rbx)
	movq	$0, -16(%rbx)
	movq	$0, -24(%rbx)
	movups	-24(%r12), %xmm0
	movups	%xmm0, -24(%rbx)
	movq	-8(%r12), %rdx
	movq	%rdx, -8(%rbx)
	movq	$0, -8(%r12)
	movq	$0, -16(%r12)
	movq	$0, -24(%r12)
	leaq	-24(%r12), %r12
	addq	$-24, %rbx
	cmpq	%r12, %r15
	jne	0x100019d00
	movq	(%rsi), %r15
	movq	8(%rsi), %rdx
	jmp	0x100019d60
	movq	%r15, %rdx
	movq	%rbx, (%rsi)
	movq	%rcx, 8(%rsi)
	movq	%rax, 16(%rsi)
	cmpq	%r15, %rdx
	je	0x100019d8e
	leaq	-24(%rdx), %rbx
	movq	-24(%rdx), %rdi
	testq	%rdi, %rdi
	je	0x100019d86
	movq	%rdi, -16(%rdx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r15
	movq	%rbx, %rdx
	jne	0x100019d70
	testq	%r15, %r15
	je	0x100019da9
	movq	%r15, %rdi
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%eax, %eax
	movq	%rax, -64(%rbp)
	xorl	%ecx, %ecx
	jmp	0x100019c3a
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rbx, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r14
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100019def
	movq	-56(%rbp), %rax
	movq	-48(%rbp), %rcx
	movq	%rdi, 8(%rax,%rcx,8)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-56(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
__ZNSt3__16vectorIN9benchmark10StatisticsENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEERPFdRKNS0_IdNS3_IdEEEEEEEEvDpOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	movq	%rdi, %rbx
	movq	(%rbx), %rdi
	movq	8(%rbx), %r13
	subq	%rdi, %r13
	sarq	$5, %r13
	leaq	1(%r13), %rax
	movq	%rax, %rcx
	shrq	$59, %rcx
	jne	0x10001a0f2
	movabsq	$576460752303423487, %r8
	movq	16(%rbx), %r12
	subq	%rdi, %r12
	movq	%r12, %rdi
	sarq	$5, %rdi
	movabsq	$288230376151711742, %rcx
	cmpq	%rcx, %rdi
	movq	%rdx, -56(%rbp)
	ja	0x100019eba
	sarq	$4, %r12
	cmpq	%rax, %r12
	cmovbq	%rax, %r12
	testq	%r12, %r12
	je	0x10001a0e7
	movq	%rsi, %r15
	cmpq	%r8, %r12
	jbe	0x100019ec0
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %r14
	leaq	82216(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%r14, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	86875(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%r14)
	movq	86565(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	86414(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%r14, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rsi, %r15
	movq	%r8, %r12
	movq	%r12, %rdi
	shlq	$5, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r14
	movq	%r15, %rsi
	movq	%rbx, -48(%rbp)
	leaq	-80(%rbp), %rdi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	shlq	$5, %r13
	leaq	(%r14,%r13), %rbx
	movq	-56(%rbp), %rax
	movq	(%rax), %r15
	leaq	-80(%rbp), %rsi
	movq	%rbx, %rdi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	shlq	$5, %r12
	movq	%r15, 24(%r14,%r13)
	testb	$1, -80(%rbp)
	je	0x100019f12
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	%r12, %r14
	leaq	32(%rbx), %r8
	movq	-48(%rbp), %r9
	movq	(%r9), %r12
	movq	8(%r9), %rcx
	cmpq	%r12, %rcx
	je	0x10001a09a
	leaq	-32(%rcx), %rdx
	subq	%r12, %rdx
	movl	%edx, %esi
	shrl	$5, %esi
	incl	%esi
	andq	$3, %rsi
	je	0x100019f95
	negq	%rsi
	nopw	%cs:(%rax,%rax)
	movq	-16(%rcx), %rdi
	movq	%rdi, -16(%rbx)
	movq	-32(%rcx), %rdi
	movq	-24(%rcx), %rax
	movq	%rax, -24(%rbx)
	movq	%rdi, -32(%rbx)
	movq	$0, -16(%rcx)
	movq	$0, -24(%rcx)
	movq	$0, -32(%rcx)
	movq	-8(%rcx), %rax
	leaq	-32(%rcx), %rcx
	movq	%rax, -8(%rbx)
	addq	$-32, %rbx
	incq	%rsi
	jne	0x100019f50
	cmpq	$96, %rdx
	jb	0x10001a091
	nop
	movq	-16(%rcx), %rax
	movq	%rax, -16(%rbx)
	movq	-32(%rcx), %rax
	movq	-24(%rcx), %rdx
	movq	%rdx, -24(%rbx)
	movq	%rax, -32(%rbx)
	movq	$0, -16(%rcx)
	movq	$0, -24(%rcx)
	movq	$0, -32(%rcx)
	movq	-8(%rcx), %rax
	movq	%rax, -8(%rbx)
	movq	-48(%rcx), %rax
	movq	%rax, -48(%rbx)
	movq	-64(%rcx), %rax
	movq	-56(%rcx), %rdx
	movq	%rdx, -56(%rbx)
	movq	%rax, -64(%rbx)
	movq	$0, -48(%rcx)
	movq	$0, -56(%rcx)
	movq	$0, -64(%rcx)
	movq	-40(%rcx), %rax
	movq	%rax, -40(%rbx)
	movq	-96(%rcx), %rax
	movq	-88(%rcx), %rdx
	movq	%rdx, -88(%rbx)
	movq	-80(%rcx), %rdx
	movq	%rdx, -80(%rbx)
	movq	%rax, -96(%rbx)
	movq	$0, -80(%rcx)
	movq	$0, -88(%rcx)
	movq	$0, -96(%rcx)
	movq	-72(%rcx), %rax
	movq	%rax, -72(%rbx)
	movq	-112(%rcx), %rax
	movq	%rax, -112(%rbx)
	movq	-128(%rcx), %rax
	movq	-120(%rcx), %rdx
	movq	%rdx, -120(%rbx)
	movq	%rax, -128(%rbx)
	movq	$0, -120(%rcx)
	movq	$0, -112(%rcx)
	movq	$0, -128(%rcx)
	movq	-104(%rcx), %rax
	leaq	-128(%rcx), %rcx
	movq	%rax, -104(%rbx)
	leaq	-128(%rbx), %rbx
	cmpq	%rcx, %r12
	jne	0x100019fa0
	movq	(%r9), %r12
	movq	8(%r9), %rcx
	jmp	0x10001a09d
	movq	%r12, %rcx
	movq	%rbx, (%r9)
	movq	%r8, 8(%r9)
	movq	%r14, 16(%r9)
	cmpq	%r12, %rcx
	je	0x10001a0cb
	nopl	(%rax)
	leaq	-32(%rcx), %rbx
	testb	$1, -32(%rcx)
	je	0x10001a0c3
	movq	-16(%rcx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r12
	movq	%rbx, %rcx
	jne	0x10001a0b0
	testq	%r12, %r12
	je	0x10001a0d8
	movq	%r12, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%r12d, %r12d
	xorl	%r14d, %r14d
	jmp	0x100019ed2
	movq	%rbx, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r15
	movq	%r14, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %r15
	testb	$1, -80(%rbp)
	jne	0x10001a123
	testq	%r14, %r14
	jne	0x10001a13b
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testq	%r14, %r14
	je	0x10001a11b
	jmp	0x10001a13b
	movq	%rax, %r15
	testq	%r14, %r14
	je	0x10001a11b
	movq	%r14, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax,%rax)
__ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rsi, %r8
	movq	%rdi, %r13
	movq	(%r13), %rsi
	movq	8(%r13), %r12
	subq	%rsi, %r12
	movq	%r12, %r15
	sarq	$2, %r15
	leaq	1(%r15), %rax
	movq	%rax, %rcx
	shrq	$62, %rcx
	jne	0x10001a297
	movabsq	$4611686018427387903, %rcx
	movq	16(%r13), %r14
	subq	%rsi, %r14
	movq	%r14, %rdx
	sarq	$2, %rdx
	movabsq	$2305843009213693950, %rdi
	cmpq	%rdi, %rdx
	ja	0x10001a211
	sarq	%r14
	cmpq	%rax, %r14
	cmovbq	%rax, %r14
	testq	%r14, %r14
	je	0x10001a290
	movq	%r8, -48(%rbp)
	movq	%rsi, -56(%rbp)
	cmpq	%rcx, %r14
	jbe	0x10001a21c
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	81361(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	86020(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	85710(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	85559(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%r8, -48(%rbp)
	movq	%rsi, -56(%rbp)
	movq	%rcx, %r14
	leaq	(,%r14,4), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	-56(%rbp), %rsi
	movq	-48(%rbp), %r8
	leaq	(%rbx,%r14,4), %r14
	movl	(%r8), %eax
	movl	%eax, (%rbx,%r15,4)
	leaq	4(%rbx,%r15,4), %r15
	testq	%r12, %r12
	jle	0x10001a25a
	movq	%rbx, %rdi
	movq	%r12, %rdx
	movq	%rsi, %r12
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r12, %rsi
	movq	%rbx, (%r13)
	movq	%r15, 8(%r13)
	movq	%r14, 16(%r13)
	testq	%rsi, %rsi
	je	0x10001a281
	movq	%rsi, %rdi
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
	jmp	0x10001a234
	movq	%r13, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
__GLOBAL__sub_I_benchmark_register.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark8internal17InitializeStreamsEv ## benchmark::internal::InitializeStreams()
	nop
	nop
	nop
	nop
	nop
	nop
__ZN9benchmark12FormatStringEPKcP13__va_list_tag:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$312, %rsp
	movq	%rdx, %r13
	movq	%rsi, %r12
	movq	%rdi, %r15
	movq	85820(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	movq	%rax, -48(%rbp)
	movq	16(%r13), %rax
	movq	%rax, -64(%rbp)
	movq	(%r13), %rax
	movq	8(%r13), %rcx
	movq	%rcx, -72(%rbp)
	movq	%rax, -80(%rbp)
	leaq	-336(%rbp), %rdi
	leaq	-80(%rbp), %rcx
	movl	$256, %esi
	movq	%r12, %rdx
	callq	0x10002988a ## symbol stub for: _vsnprintf
	movl	%eax, %ebx
	movq	85228(%rip), %r14 ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%r14), %al
	testb	%al, %al
	jne	0x10001a365
	movq	85214(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10001a365
	movq	85694(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	85184(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	testl	%ebx, %ebx
	je	0x10001a3c5
	cmpl	$255, %ebx
	ja	0x10001a3e1
	movq	$0, 16(%r15)
	movq	$0, 8(%r15)
	movq	$0, (%r15)
	leaq	-336(%rbp), %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	%rax, %r12
	cmpq	$-16, %r12
	jae	0x10001a52c
	cmpq	$23, %r12
	jae	0x10001a484
	movl	%r12d, %eax
	addb	%al, %al
	movb	%al, (%r15)
	leaq	1(%r15), %r14
	testq	%r12, %r12
	jne	0x10001a4a9
	jmp	0x10001a4bb
	movq	$0, 16(%r15)
	movq	$0, 8(%r15)
	movq	$0, (%r15)
	jmp	0x10001a502
	movslq	%ebx, %rbx
	incq	%rbx
	movq	%rbx, %rdi
	callq	0x100029740 ## symbol stub for: __Znam
	movq	%rax, -344(%rbp)
	movq	%rax, %rdi
	movq	%rbx, %rsi
	movq	%r12, %rdx
	movq	%r13, %rcx
	callq	0x10002988a ## symbol stub for: _vsnprintf
	movb	(%r14), %al
	testb	%al, %al
	jne	0x10001a438
	movq	85003(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10001a438
	movq	85483(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	84973(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	$0, 16(%r15)
	movq	$0, 8(%r15)
	movq	$0, (%r15)
	movq	-344(%rbp), %r14
	movq	%r14, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	%rax, %r13
	cmpq	$-16, %r13
	jae	0x10001a534
	cmpq	$23, %r13
	jae	0x10001a4c2
	movl	%r13d, %eax
	addb	%al, %al
	movb	%al, (%r15)
	leaq	1(%r15), %r12
	testq	%r13, %r13
	jne	0x10001a4e7
	jmp	0x10001a4f5
	movq	%r12, %rbx
	addq	$16, %rbx
	andq	$-16, %rbx
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r14
	movq	%r14, 16(%r15)
	orq	$1, %rbx
	movq	%rbx, (%r15)
	movq	%r12, 8(%r15)
	leaq	-336(%rbp), %rsi
	movq	%r14, %rdi
	movq	%r12, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	movb	$0, (%r14,%r12)
	jmp	0x10001a502
	movq	%r13, %rbx
	addq	$16, %rbx
	andq	$-16, %rbx
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r12
	movq	%r12, 16(%r15)
	orq	$1, %rbx
	movq	%rbx, (%r15)
	movq	%r13, 8(%r15)
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r13, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	movb	$0, (%r12,%r13)
	movq	%r14, %rdi
	callq	0x100029734 ## symbol stub for: __ZdaPv
	movq	85287(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	cmpq	-48(%rbp), %rax
	jne	0x10001a527
	movq	%r15, %rax
	addq	$312, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	callq	0x1000297a0 ## symbol stub for: ___stack_chk_fail
	movq	%r15, %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%r15, %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	0x100029734 ## symbol stub for: __ZdaPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nop
__ZN9benchmark12FormatStringEPKcz:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	subq	$216, %rsp
	movq	%rdi, %rbx
	testb	%al, %al
	je	0x10001a58c
	movaps	%xmm0, -176(%rbp)
	movaps	%xmm1, -160(%rbp)
	movaps	%xmm2, -144(%rbp)
	movaps	%xmm3, -128(%rbp)
	movaps	%xmm4, -112(%rbp)
	movaps	%xmm5, -96(%rbp)
	movaps	%xmm6, -80(%rbp)
	movaps	%xmm7, -64(%rbp)
	movq	%r9, -184(%rbp)
	movq	%r8, -192(%rbp)
	movq	%rcx, -200(%rbp)
	movq	%rdx, -208(%rbp)
	movq	85121(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	movq	%rax, -16(%rbp)
	leaq	-224(%rbp), %rax
	movq	%rax, -32(%rbp)
	leaq	16(%rbp), %rax
	movq	%rax, -40(%rbp)
	movl	$48, -44(%rbp)
	movl	$16, -48(%rbp)
	leaq	-48(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZN9benchmark12FormatStringEPKcP13__va_list_tag ## benchmark::FormatString(char const*, __va_list_tag*)
	movq	85062(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	cmpq	-16(%rbp), %rax
	jne	0x10001a600
	movq	%rbx, %rax
	addq	$216, %rsp
	popq	%rbx
	popq	%rbp
	retq
	callq	0x1000297a0 ## symbol stub for: ___stack_chk_fail
	nopw	%cs:(%rax,%rax)
__ZN9benchmark11ColorPrintfERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_8LogColorEPKcz:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$208, %rsp
	testb	%al, %al
	je	0x10001a645
	movaps	%xmm0, -160(%rbp)
	movaps	%xmm1, -144(%rbp)
	movaps	%xmm2, -128(%rbp)
	movaps	%xmm3, -112(%rbp)
	movaps	%xmm4, -96(%rbp)
	movaps	%xmm5, -80(%rbp)
	movaps	%xmm6, -64(%rbp)
	movaps	%xmm7, -48(%rbp)
	movq	%r9, -168(%rbp)
	movq	%r8, -176(%rbp)
	movq	%rcx, -184(%rbp)
	movq	84943(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	leaq	-208(%rbp), %rax
	movq	%rax, -16(%rbp)
	leaq	16(%rbp), %rax
	movq	%rax, -24(%rbp)
	movl	$48, -28(%rbp)
	movl	$24, -32(%rbp)
	leaq	-32(%rbp), %rcx
	callq	__ZN9benchmark11ColorPrintfERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_8LogColorEPKcP13__va_list_tag ## benchmark::ColorPrintf(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, benchmark::LogColor, char const*, __va_list_tag*)
	movq	84887(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	cmpq	-8(%rbp), %rax
	jne	0x10001a6ab
	addq	$208, %rsp
	popq	%rbp
	retq
	callq	0x1000297a0 ## symbol stub for: ___stack_chk_fail
__ZN9benchmark11ColorPrintfERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_8LogColorEPKcP13__va_list_tag:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	subq	$24, %rsp
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rdi, %rbx
	decl	%esi
	cmpl	$6, %esi
	ja	0x10001a720
	movslq	%esi, %rax
	leaq	86153(%rip), %rcx
	movq	(%rcx,%rax,8), %rdx
	leaq	80154(%rip), %rsi ## literal pool for: "\033[0;3%sm"
	leaq	-48(%rbp), %rdi
	xorl	%eax, %eax
	callq	__ZN9benchmark12FormatStringEPKcz ## benchmark::FormatString(char const*, ...)
	movzbl	-48(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	leaq	-47(%rbp), %rsi
	cmovneq	-32(%rbp), %rsi
	testb	%al, %al
	cmovneq	-40(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -48(%rbp)
	je	0x10001a720
	movq	-32(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-48(%rbp), %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	__ZN9benchmark12FormatStringEPKcP13__va_list_tag ## benchmark::FormatString(char const*, __va_list_tag*)
	movzbl	-48(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	leaq	-47(%rbp), %rsi
	cmovneq	-32(%rbp), %rsi
	testb	%al, %al
	cmovneq	-40(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	80043(%rip), %rsi ## literal pool for: "\033[m"
	movl	$3, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -48(%rbp)
	je	0x10001a776
	movq	-32(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$24, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	testb	$1, -48(%rbp)
	jne	0x10001a795
	jmp	0x10001a79e
	movq	%rax, %rbx
	testb	$1, -48(%rbp)
	je	0x10001a79e
	movq	-32(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark15IsColorTerminalEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	leaq	80070(%rip), %rdi ## literal pool for: "TERM"
	callq	0x1000297e8 ## symbol stub for: _getenv
	movq	%rax, %rbx
	testq	%rbx, %rbx
	je	0x10001a8b7
	leaq	79923(%rip), %rsi ## literal pool for: "xterm"
	movq	%rbx, %rdi
	callq	0x100029854 ## symbol stub for: _strcmp
	movb	$1, %r14b
	testl	%eax, %eax
	je	0x10001a8ba
	leaq	79903(%rip), %rsi ## literal pool for: "xterm-color"
	movq	%rbx, %rdi
	callq	0x100029854 ## symbol stub for: _strcmp
	testl	%eax, %eax
	je	0x10001a8ba
	leaq	79892(%rip), %rsi ## literal pool for: "xterm-256color"
	movq	%rbx, %rdi
	callq	0x100029854 ## symbol stub for: _strcmp
	testl	%eax, %eax
	je	0x10001a8ba
	leaq	79884(%rip), %rsi ## literal pool for: "screen"
	movq	%rbx, %rdi
	callq	0x100029854 ## symbol stub for: _strcmp
	testl	%eax, %eax
	je	0x10001a8ba
	leaq	79868(%rip), %rsi ## literal pool for: "screen-256color"
	movq	%rbx, %rdi
	callq	0x100029854 ## symbol stub for: _strcmp
	testl	%eax, %eax
	je	0x10001a8ba
	leaq	79865(%rip), %rsi ## literal pool for: "tmux"
	movq	%rbx, %rdi
	callq	0x100029854 ## symbol stub for: _strcmp
	testl	%eax, %eax
	je	0x10001a8ba
	leaq	79851(%rip), %rsi ## literal pool for: "tmux-256color"
	movq	%rbx, %rdi
	callq	0x100029854 ## symbol stub for: _strcmp
	testl	%eax, %eax
	je	0x10001a8ba
	leaq	79846(%rip), %rsi ## literal pool for: "rxvt-unicode"
	movq	%rbx, %rdi
	callq	0x100029854 ## symbol stub for: _strcmp
	testl	%eax, %eax
	je	0x10001a8ba
	leaq	79840(%rip), %rsi ## literal pool for: "rxvt-unicode-256color"
	movq	%rbx, %rdi
	callq	0x100029854 ## symbol stub for: _strcmp
	testl	%eax, %eax
	je	0x10001a8ba
	leaq	79843(%rip), %rsi ## literal pool for: "linux"
	movq	%rbx, %rdi
	callq	0x100029854 ## symbol stub for: _strcmp
	testl	%eax, %eax
	je	0x10001a8ba
	leaq	79830(%rip), %rsi ## literal pool for: "cygwin"
	movq	%rbx, %rdi
	callq	0x100029854 ## symbol stub for: _strcmp
	testl	%eax, %eax
	sete	%r14b
	jmp	0x10001a8ba
	xorl	%r14d, %r14d
	movq	84351(%rip), %rax ## literal pool symbol address: ___stdoutp
	movq	(%rax), %rdi
	callq	0x1000297be ## symbol stub for: _fileno
	movl	%eax, %edi
	callq	0x1000297f4 ## symbol stub for: _isatty
	testl	%eax, %eax
	setne	%al
	andb	%r14b, %al
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	nopl	(%rax)
__GLOBAL__sub_I_colorprint.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark8internal17InitializeStreamsEv ## benchmark::internal::InitializeStreams()
	nop
	nop
	nop
	nop
	nop
	nop
__ZN9benchmark10ParseInt32ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcPi:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rdx, %r15
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	$0, -32(%rbp)
	leaq	-32(%rbp), %rsi
	movl	$10, %edx
	movq	%r14, %rdi
	callq	0x100029878 ## symbol stub for: _strtol
	movq	-32(%rbp), %rcx
	cmpb	$0, (%rcx)
	je	0x10001a99e
	movzbl	(%rbx), %eax
	leaq	1(%rbx), %rsi
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	16(%rbx), %rsi
	testb	%al, %al
	cmovneq	8(%rbx), %rdx
	movq	83737(%rip), %rdi ## literal pool symbol address: __ZNSt3__14cerrE
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	79684(%rip), %rsi ## literal pool for: " is expected to be a 32-bit integer, "
	movl	$37, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	79702(%rip), %rsi ## literal pool for: "but actually has value \""
	movl	$24, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movq	%rax, %rdx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	79682(%rip), %rsi ## literal pool for: "\".\n"
	movl	$3, %edx
	jmp	0x10001aa4b
	movabsq	$-9223372036854775807, %rcx
	addq	%rax, %rcx
	cmpq	$2, %rcx
	jb	0x10001a9c3
	movslq	%eax, %rcx
	cmpq	%rax, %rcx
	jne	0x10001a9c3
	movl	%eax, (%r15)
	movb	$1, %al
	jmp	0x10001aa55
	movzbl	(%rbx), %eax
	leaq	1(%rbx), %rsi
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	16(%rbx), %rsi
	testb	%al, %al
	cmovneq	8(%rbx), %rdx
	movq	83579(%rip), %rdi ## literal pool symbol address: __ZNSt3__14cerrE
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	79526(%rip), %rsi ## literal pool for: " is expected to be a 32-bit integer, "
	movl	$37, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	79544(%rip), %rsi ## literal pool for: "but actually has value \""
	movl	$24, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movq	%rax, %rdx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	79528(%rip), %rsi ## literal pool for: "\", "
	movl	$3, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	79512(%rip), %rsi ## literal pool for: "which overflows.\n"
	movl	$17, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	xorl	%eax, %eax
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
__ZN9benchmark11ParseDoubleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcPd:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rdx, %r15
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	$0, -32(%rbp)
	leaq	-32(%rbp), %rsi
	movq	%r14, %rdi
	callq	0x100029872 ## symbol stub for: _strtod
	movq	-32(%rbp), %rax
	cmpb	$0, (%rax)
	je	0x10001ab14
	movzbl	(%rbx), %eax
	leaq	1(%rbx), %rsi
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	16(%rbx), %rsi
	testb	%al, %al
	cmovneq	8(%rbx), %rdx
	movq	83370(%rip), %rdi ## literal pool symbol address: __ZNSt3__14cerrE
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	79406(%rip), %rsi ## literal pool for: " is expected to be a double, "
	movl	$29, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	79335(%rip), %rsi ## literal pool for: "but actually has value \""
	movl	$24, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movq	%rax, %rdx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	79315(%rip), %rsi ## literal pool for: "\".\n"
	movl	$3, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	xorl	%eax, %eax
	jmp	0x10001ab1b
	movsd	%xmm0, (%r15)
	movb	$1, %al
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZN9benchmark11BoolFromEnvEPKcb:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	subq	$24, %rsp
	movl	%esi, %r14d
	movq	%rdi, %rax
	leaq	-48(%rbp), %rdi
	movq	%rax, %rsi
	callq	__ZN9benchmarkL12FlagToEnvVarEPKc ## benchmark::FlagToEnvVar(char const*)
	movb	-48(%rbp), %bl
	testb	$1, %bl
	movq	-32(%rbp), %r15
	leaq	-47(%rbp), %rdi
	cmovneq	%r15, %rdi
	callq	0x1000297e8 ## symbol stub for: _getenv
	testq	%rax, %rax
	je	0x10001ab80
	leaq	79260(%rip), %rsi ## literal pool for: "0"
	movq	%rax, %rdi
	callq	0x100029854 ## symbol stub for: _strcmp
	testl	%eax, %eax
	setne	%r14b
	testb	$1, %bl
	je	0x10001ab8d
	movq	%r15, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movl	%r14d, %eax
	addq	$24, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZN9benchmarkL12FlagToEnvVarEPKc:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	movq	%rsi, %r15
	movq	%rdi, %r14
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movq	%r15, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	%rax, %r13
	cmpq	$-16, %r13
	jae	0x10001acec
	cmpq	$23, %r13
	jae	0x10001abf4
	movl	%r13d, %eax
	addb	%al, %al
	movb	%al, -64(%rbp)
	leaq	-63(%rbp), %r12
	testq	%r13, %r13
	jne	0x10001ac1a
	jmp	0x10001ac28
	movq	%r13, %rbx
	addq	$16, %rbx
	andq	$-16, %rbx
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r12
	movq	%r12, -48(%rbp)
	orq	$1, %rbx
	movq	%rbx, -64(%rbp)
	movq	%r13, -56(%rbp)
	movq	%r12, %rdi
	movq	%r15, %rsi
	movq	%r13, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	movb	$0, (%r12,%r13)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -96(%rbp)
	movq	$0, -80(%rbp)
	movzbl	-64(%rbp), %ecx
	movl	%ecx, %edx
	andb	$1, %dl
	sete	%al
	shrq	%rcx
	testb	%dl, %dl
	cmovneq	-56(%rbp), %rcx
	testq	%rcx, %rcx
	je	0x10001acac
	leaq	-63(%rbp), %r15
	xorl	%ebx, %ebx
	leaq	-96(%rbp), %r12
	nopw	%cs:(%rax,%rax)
	testb	$1, %al
	movq	-48(%rbp), %rax
	cmovneq	%r15, %rax
	movsbl	(%rax,%rbx), %edi
	callq	0x1000297a6 ## symbol stub for: ___toupper
	movsbl	%al, %esi
	movq	%r12, %rdi
	callq	0x100029602 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
	incq	%rbx
	movzbl	-64(%rbp), %ecx
	movl	%ecx, %edx
	andb	$1, %dl
	sete	%al
	shrq	%rcx
	testb	%dl, %dl
	cmovneq	-56(%rbp), %rcx
	cmpq	%rcx, %rbx
	jne	0x10001ac70
	leaq	79014(%rip), %rsi ## literal pool for: "BENCHMARK_"
	leaq	-96(%rbp), %rdx
	movq	%r14, %rdi
	callq	0x100029722 ## symbol stub for: __ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_
	testb	$1, -96(%rbp)
	je	0x10001acce
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x10001acdd
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	leaq	-64(%rbp), %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	testb	$1, -96(%rbp)
	jne	0x10001ad09
	jmp	0x10001ad12
	movq	%rax, %rbx
	testb	$1, -96(%rbp)
	je	0x10001ad12
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	jne	0x10001ad20
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark12Int32FromEnvEPKci:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$80, %rsp
	movl	%esi, %r14d
	movq	%rdi, %rax
	leaq	-88(%rbp), %rdi
	movq	%rax, %rsi
	callq	__ZN9benchmarkL12FlagToEnvVarEPKc ## benchmark::FlagToEnvVar(char const*)
	movb	-88(%rbp), %bl
	testb	$1, %bl
	leaq	-87(%rbp), %r12
	cmovneq	-72(%rbp), %r12
	movq	%r12, %rdi
	callq	0x1000297e8 ## symbol stub for: _getenv
	movq	%rax, %r15
	testq	%r15, %r15
	je	0x10001ae8f
	movzbl	%bl, %edx
	shrq	%rdx
	testb	$1, %bl
	movl	%r14d, -36(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$42, -64(%rbp)
	movabsq	$2334391151658365537, %rax
	movq	%rax, -50(%rbp)
	movabsq	$7598242681305984613, %rax
	movq	%rax, -55(%rbp)
	movabsq	$7885362534758641221, %rax
	movq	%rax, -63(%rbp)
	movb	$0, -42(%rbp)
	cmovneq	-80(%rbp), %rdx
	leaq	-64(%rbp), %rdi
	movq	%r12, %rsi
	callq	0x1000295d8 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
	movq	16(%rax), %rcx
	movq	%rcx, -96(%rbp)
	movq	(%rax), %rcx
	movq	8(%rax), %rdx
	movq	%rdx, -104(%rbp)
	movq	%rcx, -112(%rbp)
	movq	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	leaq	-112(%rbp), %rdi
	leaq	-36(%rbp), %rdx
	movq	%r15, %rsi
	callq	__ZN9benchmark10ParseInt32ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcPi ## benchmark::ParseInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*, int*)
	movl	%eax, %ebx
	testb	$1, -112(%rbp)
	jne	0x10001ae39
	testb	$1, -64(%rbp)
	jne	0x10001ae48
	testb	%bl, %bl
	je	0x10001ae55
	movl	-36(%rbp), %r14d
	jmp	0x10001ae8c
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x10001ae2f
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	%bl, %bl
	jne	0x10001ae33
	movq	82452(%rip), %rdi ## literal pool symbol address: __ZNSt3__14coutE
	leaq	78531(%rip), %rsi ## literal pool for: "The default value "
	movl	$18, %edx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rdi
	movl	%r14d, %esi
	callq	0x100029650 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
	leaq	78522(%rip), %rsi ## literal pool for: " is used.\n"
	movl	$10, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movb	-88(%rbp), %bl
	testb	$1, %bl
	je	0x10001ae9d
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movl	%r14d, %eax
	addq	$80, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	testb	$1, -112(%rbp)
	jne	0x10001aeca
	testb	$1, -64(%rbp)
	jne	0x10001aee4
	testb	$1, -88(%rbp)
	jne	0x10001aefe
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x10001aebc
	jmp	0x10001aee4
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x10001aebc
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -88(%rbp)
	je	0x10001aec2
	jmp	0x10001aefe
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	je	0x10001aec2
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nop
__ZN9benchmark13StringFromEnvEPKcS1_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	subq	$32, %rsp
	movq	%rsi, %rbx
	movq	%rdi, %rax
	leaq	-40(%rbp), %rdi
	movq	%rax, %rsi
	callq	__ZN9benchmarkL12FlagToEnvVarEPKc ## benchmark::FlagToEnvVar(char const*)
	testb	$1, -40(%rbp)
	jne	0x10001af45
	leaq	-39(%rbp), %rdi
	callq	0x1000297e8 ## symbol stub for: _getenv
	testq	%rax, %rax
	cmovneq	%rax, %rbx
	jmp	0x10001af60
	movq	-24(%rbp), %r14
	movq	%r14, %rdi
	callq	0x1000297e8 ## symbol stub for: _getenv
	testq	%rax, %rax
	cmovneq	%rax, %rbx
	movq	%r14, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rax
	addq	$32, %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	nopl	(%rax)
__ZN9benchmark14ParseFlagValueEPKcS1_b:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$88, %rsp
	movq	%rsi, %r12
	movq	%rdi, %rbx
	xorl	%r14d, %r14d
	testq	%rbx, %rbx
	je	0x10001b118
	testq	%r12, %r12
	je	0x10001b118
	movl	%edx, -68(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -96(%rbp)
	movq	$0, -80(%rbp)
	movb	$4, -96(%rbp)
	movw	$11565, -95(%rbp)
	movb	$0, -93(%rbp)
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movq	%r12, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	%rax, %r15
	cmpq	$-16, %r15
	jae	0x10001b12a
	cmpq	$23, %r15
	movq	%rbx, -128(%rbp)
	jae	0x10001affd
	movl	%r15d, %eax
	addb	%al, %al
	movb	%al, -64(%rbp)
	leaq	-63(%rbp), %r13
	testq	%r15, %r15
	movq	%r13, %r14
	jne	0x10001b027
	jmp	0x10001b035
	movq	%r15, %rbx
	addq	$16, %rbx
	andq	$-16, %rbx
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r14
	movq	%r14, -48(%rbp)
	orq	$1, %rbx
	movq	%rbx, -64(%rbp)
	movq	%r15, -56(%rbp)
	leaq	-63(%rbp), %r13
	movq	%r14, %rdi
	movq	%r12, %rsi
	movq	%r15, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	movb	$0, (%r14,%r15)
	movzbl	-64(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-56(%rbp), %rdx
	testb	%al, %al
	cmovneq	-48(%rbp), %r13
	leaq	-96(%rbp), %rdi
	movq	%r13, %rsi
	callq	0x1000295d8 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
	movq	16(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	(%rax), %rcx
	movq	8(%rax), %rdx
	movq	%rdx, -112(%rbp)
	movq	%rcx, -120(%rbp)
	movq	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	testb	$1, -64(%rbp)
	movq	-128(%rbp), %r13
	je	0x10001b09f
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -96(%rbp)
	je	0x10001b0ae
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movzbl	-120(%rbp), %r15d
	movq	%r15, %rbx
	shrq	%rbx
	movl	%r15d, %eax
	andb	$1, %al
	movq	-104(%rbp), %r12
	leaq	-119(%rbp), %rsi
	cmovneq	%r12, %rsi
	testb	%al, %al
	cmovneq	-112(%rbp), %rbx
	movq	%r13, %rdi
	movq	%rbx, %rdx
	callq	0x10002986c ## symbol stub for: _strncmp
	testl	%eax, %eax
	je	0x10001b0eb
	xorl	%r14d, %r14d
	testb	$1, %r15b
	jne	0x10001b110
	jmp	0x10001b118
	leaq	(%r13,%rbx), %r14
	movb	(%r13,%rbx), %al
	testb	%al, %al
	jne	0x10001b0ff
	cmpb	$0, -68(%rbp)
	jne	0x10001b10a
	incq	%r14
	xorl	%ecx, %ecx
	cmpb	$61, %al
	cmovneq	%rcx, %r14
	testb	$1, %r15b
	je	0x10001b118
	movq	%r12, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rax
	addq	$88, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	leaq	-64(%rbp), %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	testb	$1, -96(%rbp)
	je	0x10001b14d
	jmp	0x10001b164
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x10001b155
	testb	$1, -96(%rbp)
	jne	0x10001b164
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -96(%rbp)
	je	0x10001b14d
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark13ParseBoolFlagEPKcS1_Pb:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rdx, %r14
	movl	$1, %edx
	callq	__ZN9benchmark14ParseFlagValueEPKcS1_b ## benchmark::ParseFlagValue(char const*, char const*, bool)
	movq	%rax, %r15
	testq	%r15, %r15
	je	0x10001b1e3
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movq	%r15, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	%rax, %r13
	cmpq	$-16, %r13
	jae	0x10001b2b7
	cmpq	$23, %r13
	jae	0x10001b1ea
	movl	%r13d, %eax
	addb	%al, %al
	movb	%al, -64(%rbp)
	leaq	-63(%rbp), %r12
	testq	%r13, %r13
	jne	0x10001b210
	jmp	0x10001b21e
	xorl	%eax, %eax
	jmp	0x10001b2a8
	movq	%r13, %rbx
	addq	$16, %rbx
	andq	$-16, %rbx
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r12
	movq	%r12, -48(%rbp)
	orq	$1, %rbx
	movq	%rbx, -64(%rbp)
	movq	%r13, -56(%rbp)
	movq	%r12, %rdi
	movq	%r15, %rsi
	movq	%r13, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	movb	$0, (%r12,%r13)
	movzbl	-64(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	-56(%rbp), %rcx
	movb	$1, %r15b
	testq	%rcx, %rcx
	je	0x10001b294
	testb	$1, %al
	leaq	-63(%rbp), %rax
	cmovneq	-48(%rbp), %rax
	movsbq	(%rax), %rbx
	testq	%rbx, %rbx
	js	0x10001b266
	movq	81337(%rip), %rcx ## literal pool symbol address: __DefaultRuneLocale
	movl	$1280, %eax
	andl	60(%rcx,%rbx,4), %eax
	testl	%eax, %eax
	jne	0x10001b276
	jmp	0x10001b291
	movl	$1280, %esi
	movl	%ebx, %edi
	callq	0x10002979a ## symbol stub for: ___maskrune
	testl	%eax, %eax
	je	0x10001b291
	addb	$-48, %bl
	cmpb	$62, %bl
	ja	0x10001b294
	movzbl	%bl, %eax
	movabsq	$4629700418014806017, %rcx
	btq	%rax, %rcx
	jae	0x10001b294
	xorl	%r15d, %r15d
	movb	%r15b, (%r14)
	testb	$1, -64(%rbp)
	je	0x10001b2a6
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movb	$1, %al
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	leaq	-64(%rbp), %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x10001b2d2
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	(%rax,%rax)
__ZN9benchmark17IsTruthyFlagValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movzbl	(%rdi), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	8(%rdi), %rcx
	movb	$1, %r14b
	testq	%rcx, %rcx
	je	0x10001b356
	leaq	1(%rdi), %rcx
	testb	$1, %al
	cmovneq	16(%rdi), %rcx
	movsbq	(%rcx), %rbx
	testq	%rbx, %rbx
	js	0x10001b343
	movq	81142(%rip), %rcx ## literal pool symbol address: __DefaultRuneLocale
	movl	$1280, %eax
	andl	60(%rcx,%rbx,4), %eax
	testl	%eax, %eax
	je	0x10001b353
	addb	$-48, %bl
	cmpb	$62, %bl
	ja	0x10001b356
	movabsq	$4593671618839969790, %rax
	movl	%ebx, %ecx
	shrq	%cl, %rax
	andl	$1, %eax
	jmp	0x10001b359
	movl	$1280, %esi
	movl	%ebx, %edi
	callq	0x10002979a ## symbol stub for: ___maskrune
	testl	%eax, %eax
	jne	0x10001b327
	xorl	%r14d, %r14d
	movl	%r14d, %eax
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	nop
__ZN9benchmark14ParseInt32FlagEPKcS1_Pi:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$64, %rsp
	movq	%rdx, %r14
	movq	%rsi, %rbx
	xorl	%r15d, %r15d
	xorl	%edx, %edx
	callq	__ZN9benchmark14ParseFlagValueEPKcS1_b ## benchmark::ParseFlagValue(char const*, char const*, bool)
	movq	%rax, %r12
	testq	%r12, %r12
	je	0x10001b42f
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$40, -64(%rbp)
	movabsq	$7020098208507306085, %rax
	movq	%rax, -55(%rbp)
	movabsq	$8461244959899871316, %rax
	movq	%rax, -63(%rbp)
	movl	$757932135, -47(%rbp)
	movb	$0, -43(%rbp)
	leaq	-64(%rbp), %rdi
	movq	%rbx, %rsi
	callq	0x1000295d2 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
	movq	16(%rax), %rcx
	movq	%rcx, -72(%rbp)
	movq	(%rax), %rcx
	movq	8(%rax), %rdx
	movq	%rdx, -80(%rbp)
	movq	%rcx, -88(%rbp)
	movq	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	leaq	-88(%rbp), %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	__ZN9benchmark10ParseInt32ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcPi ## benchmark::ParseInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*, int*)
	movb	%al, %r15b
	testb	$1, -88(%rbp)
	je	0x10001b420
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x10001b42f
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movl	%r15d, %eax
	addq	$64, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x10001b456
	testb	$1, -64(%rbp)
	jne	0x10001b470
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x10001b44e
	jmp	0x10001b470
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x10001b44e
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark15ParseDoubleFlagEPKcS1_Pd:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$64, %rsp
	movq	%rdx, %r14
	movq	%rsi, %rbx
	xorl	%r15d, %r15d
	xorl	%edx, %edx
	callq	__ZN9benchmark14ParseFlagValueEPKcS1_b ## benchmark::ParseFlagValue(char const*, char const*, bool)
	movq	%rax, %r12
	testq	%r12, %r12
	je	0x10001b55f
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$40, -64(%rbp)
	movabsq	$7020098208507306085, %rax
	movq	%rax, -55(%rbp)
	movabsq	$8461244959899871316, %rax
	movq	%rax, -63(%rbp)
	movl	$757932135, -47(%rbp)
	movb	$0, -43(%rbp)
	leaq	-64(%rbp), %rdi
	movq	%rbx, %rsi
	callq	0x1000295d2 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
	movq	16(%rax), %rcx
	movq	%rcx, -72(%rbp)
	movq	(%rax), %rcx
	movq	8(%rax), %rdx
	movq	%rdx, -80(%rbp)
	movq	%rcx, -88(%rbp)
	movq	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	leaq	-88(%rbp), %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	__ZN9benchmark11ParseDoubleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcPd ## benchmark::ParseDouble(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*, double*)
	movb	%al, %r15b
	testb	$1, -88(%rbp)
	je	0x10001b550
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x10001b55f
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movl	%r15d, %eax
	addq	$64, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x10001b586
	testb	$1, -64(%rbp)
	jne	0x10001b5a0
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x10001b57e
	jmp	0x10001b5a0
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x10001b57e
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark15ParseStringFlagEPKcS1_PNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rdx, %r14
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	callq	__ZN9benchmark14ParseFlagValueEPKcS1_b ## benchmark::ParseFlagValue(char const*, char const*, bool)
	testq	%rax, %rax
	je	0x10001b5e5
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	0x1000295de ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
	movb	$1, %bl
	movl	%ebx, %eax
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	nopl	(%rax)
__ZN9benchmark6IsFlagEPKcS1_:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %edx
	callq	__ZN9benchmark14ParseFlagValueEPKcS1_b ## benchmark::ParseFlagValue(char const*, char const*, bool)
	testq	%rax, %rax
	setne	%al
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZN9benchmark12FittingCurveENS_4BigOE:
	pushq	%rbp
	movq	%rsp, %rbp
	addl	$-2, %edi
	cmpl	$4, %edi
	ja	0x10001b62c
	movslq	%edi, %rax
	leaq	82298(%rip), %rcx
	movq	(%rcx,%rax,8), %rax
	popq	%rbp
	retq
	leaq	__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_58__invokeEx(%rip), %rax ## benchmark::FittingCurve(benchmark::BigO)::$_5::__invoke(long long)
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZN9benchmark13GetBigOStringENS_4BigOE:
	pushq	%rbp
	movq	%rsp, %rbp
	decl	%esi
	cmpl	$5, %esi
	ja	0x10001b684
	leaq	294(%rip), %rax
	movslq	(%rax,%rsi,4), %rcx
	addq	%rax, %rcx
	jmpq	*%rcx
	movq	$0, (%rdi)
	movq	$0, 16(%rdi)
	movq	$0, 8(%rdi)
	movb	$6, (%rdi)
	movb	$41, 3(%rdi)
	movw	$12584, 1(%rdi)
	jmp	0x10001b73c
	movq	$0, (%rdi)
	movq	$0, 16(%rdi)
	movq	$0, 8(%rdi)
	movb	$8, (%rdi)
	movl	$692988006, 1(%rdi)
	jmp	0x10001b766
	movq	$0, (%rdi)
	movq	$0, 16(%rdi)
	movq	$0, 8(%rdi)
	movw	$19970, (%rdi)
	movq	%rdi, %rax
	addq	$2, %rax
	jmp	0x10001b76d
	movq	$0, (%rdi)
	movq	$0, 16(%rdi)
	movq	$0, 8(%rdi)
	movb	$6, (%rdi)
	movb	$50, 3(%rdi)
	jmp	0x10001b710
	movq	$0, (%rdi)
	movq	$0, 16(%rdi)
	movq	$0, 8(%rdi)
	movb	$6, (%rdi)
	movb	$51, 3(%rdi)
	movw	$24142, 1(%rdi)
	jmp	0x10001b73c
	movq	$0, (%rdi)
	movq	$0, 16(%rdi)
	movq	$0, 8(%rdi)
	movb	$6, (%rdi)
	movb	$78, 3(%rdi)
	movw	$26476, 1(%rdi)
	movq	%rdi, %rax
	addq	$4, %rax
	jmp	0x10001b76d
	movq	$0, (%rdi)
	movq	$0, 16(%rdi)
	movq	$0, 8(%rdi)
	movb	$8, (%rdi)
	movl	$1315400782, 1(%rdi)
	movq	%rdi, %rax
	addq	$5, %rax
	movb	$0, (%rax)
	movq	%rdi, %rax
	popq	%rbp
	retq
	nopl	(%rax)
	jrcxz	0x10001b778
	.byte 0xff #bad opcode
	pushq	(%rdx)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	lcalll	*-1(%rdx)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	jp	0x10001b785
	.byte 0xff #bad opcode
	jmpq	*-838860801(%rax)
	.byte 0xff #bad opcode
	.byte 0xff #bad opcode
	callq	*72(%rbp)
__ZN9benchmark14MinimalLeastSqERKNSt3__16vectorIxNS0_9allocatorIxEEEERKNS1_IdNS2_IdEEEEPFdxE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rcx, %r15
	movq	%rdx, %r12
	movq	%rsi, %r13
	movq	%rdi, %r14
	movq	(%r13), %rax
	movq	8(%r13), %rdx
	cmpq	%rax, %rdx
	jne	0x10001b7cb
	movq	%rdx, %rcx
	xorpd	%xmm3, %xmm3
	xorpd	%xmm2, %xmm2
	xorpd	%xmm4, %xmm4
	jmp	0x10001b843
	xorpd	%xmm4, %xmm4
	xorl	%ebx, %ebx
	xorpd	%xmm2, %xmm2
	xorpd	%xmm3, %xmm3
	nopl	(%rax)
	movsd	%xmm4, -48(%rbp)
	movsd	%xmm3, -64(%rbp)
	movsd	%xmm2, -56(%rbp)
	movq	(%rax,%rbx,8), %rdi
	callq	*%r15
	movsd	-48(%rbp), %xmm4
	movsd	-64(%rbp), %xmm3
	movsd	-56(%rbp), %xmm2
	movapd	%xmm0, %xmm1
	mulsd	%xmm1, %xmm1
	addsd	%xmm1, %xmm4
	movq	(%r12), %rax
	movsd	(%rax,%rbx,8), %xmm1
	addsd	%xmm1, %xmm2
	mulsd	%xmm1, %xmm0
	addsd	%xmm0, %xmm3
	incq	%rbx
	movq	(%r13), %rax
	movq	8(%r13), %rcx
	movq	%rcx, %rdx
	subq	%rax, %rdx
	sarq	$3, %rdx
	cmpq	%rdx, %rbx
	movq	%rax, %rdx
	jb	0x10001b7e0
	divsd	%xmm4, %xmm3
	movq	$0, 8(%r14)
	movl	$8, 16(%r14)
	movsd	%xmm3, (%r14)
	cmpq	%rdx, %rcx
	xorpd	%xmm0, %xmm0
	xorpd	%xmm1, %xmm1
	je	0x10001b8ee
	movsd	%xmm2, -56(%rbp)
	xorpd	%xmm1, %xmm1
	xorl	%ebx, %ebx
	movsd	%xmm3, -64(%rbp)
	nopl	(%rax)
	movsd	%xmm1, -48(%rbp)
	movq	(%rax,%rbx,8), %rdi
	callq	*%r15
	movsd	-64(%rbp), %xmm3
	mulsd	%xmm3, %xmm0
	movq	(%r12), %rax
	movsd	(%rax,%rbx,8), %xmm1
	subsd	%xmm0, %xmm1
	mulsd	%xmm1, %xmm1
	movsd	-48(%rbp), %xmm0
	addsd	%xmm1, %xmm0
	movsd	%xmm0, -48(%rbp)
	movsd	-48(%rbp), %xmm1
	incq	%rbx
	movq	(%r13), %rax
	movq	8(%r13), %rcx
	subq	%rax, %rcx
	sarq	$3, %rcx
	cmpq	%rcx, %rbx
	jb	0x10001b880
	movq	%rcx, %xmm0
	punpckldq	58643(%rip), %xmm0
	subpd	58651(%rip), %xmm0
	haddpd	%xmm0, %xmm0
	movsd	-56(%rbp), %xmm2
	divsd	%xmm0, %xmm2
	divsd	%xmm0, %xmm1
	xorps	%xmm0, %xmm0
	sqrtsd	%xmm1, %xmm0
	divsd	%xmm2, %xmm0
	movsd	%xmm0, 8(%r14)
	movq	%r14, %rax
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopl	(%rax)
__ZN9benchmark14MinimalLeastSqERKNSt3__16vectorIxNS0_9allocatorIxEEEERKNS1_IdNS2_IdEEEENS_4BigOE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	movl	%ecx, %ebx
	movq	%rdx, %r15
	movq	%rsi, %r13
	movq	%rdi, %r12
	movq	79581(%rip), %r14 ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%r14), %al
	testb	%al, %al
	jne	0x10001b974
	movq	79567(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10001b974
	movq	80047(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	79537(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	(%r14), %al
	testb	%al, %al
	jne	0x10001b9a5
	movq	79518(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10001b9a5
	movq	79998(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	79488(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	(%r14), %al
	testb	%al, %al
	jne	0x10001b9d6
	movq	79469(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10001b9d6
	movq	79949(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	79439(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movl	$0, 16(%r12)
	movq	$0, 8(%r12)
	movq	$0, (%r12)
	movq	%rbx, -64(%rbp)
	leal	-2(%rbx), %eax
	cmpl	$5, %eax
	ja	0x10001ba39
	leaq	__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_08__invokeEx(%rip), %r14 ## benchmark::FittingCurve(benchmark::BigO)::$_0::__invoke(long long)
	leaq	1318(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
	leaq	__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_18__invokeEx(%rip), %r14 ## benchmark::FittingCurve(benchmark::BigO)::$_1::__invoke(long long)
	movq	(%r13), %rax
	cmpq	%rax, 8(%r13)
	jne	0x10001ba83
	xorpd	%xmm2, %xmm2
	movsd	59824(%rip), %xmm3
	xorpd	%xmm1, %xmm1
	jmp	0x10001bb10
	leaq	__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_58__invokeEx(%rip), %r14 ## benchmark::FittingCurve(benchmark::BigO)::$_5::__invoke(long long)
	movq	(%r13), %rax
	cmpq	%rax, 8(%r13)
	je	0x10001ba24
	jmp	0x10001ba83
	leaq	__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_28__invokeEx(%rip), %r14 ## benchmark::FittingCurve(benchmark::BigO)::$_2::__invoke(long long)
	movq	(%r13), %rax
	cmpq	%rax, 8(%r13)
	je	0x10001ba24
	jmp	0x10001ba83
	leaq	__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_38__invokeEx(%rip), %r14 ## benchmark::FittingCurve(benchmark::BigO)::$_3::__invoke(long long)
	movq	(%r13), %rax
	cmpq	%rax, 8(%r13)
	je	0x10001ba24
	jmp	0x10001ba83
	leaq	__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_48__invokeEx(%rip), %r14 ## benchmark::FittingCurve(benchmark::BigO)::$_4::__invoke(long long)
	movq	(%r13), %rax
	cmpq	%rax, 8(%r13)
	je	0x10001ba24
	movq	%r12, %rbx
	xorpd	%xmm4, %xmm4
	xorl	%r12d, %r12d
	xorpd	%xmm2, %xmm2
	xorpd	%xmm3, %xmm3
	nopw	%cs:(%rax,%rax)
	movsd	%xmm4, -56(%rbp)
	movsd	%xmm3, -48(%rbp)
	movsd	%xmm2, -72(%rbp)
	movq	(%rax,%r12,8), %rdi
	callq	*%r14
	movsd	-56(%rbp), %xmm4
	movsd	-48(%rbp), %xmm3
	movsd	-72(%rbp), %xmm2
	movapd	%xmm0, %xmm1
	mulsd	%xmm1, %xmm1
	addsd	%xmm1, %xmm4
	movq	(%r15), %rax
	movsd	(%rax,%r12,8), %xmm1
	addsd	%xmm1, %xmm2
	mulsd	%xmm1, %xmm0
	addsd	%xmm0, %xmm3
	incq	%r12
	movq	(%r13), %rax
	movq	8(%r13), %rcx
	movq	%rcx, %rdx
	subq	%rax, %rdx
	sarq	$3, %rdx
	cmpq	%rdx, %r12
	jb	0x10001baa0
	divsd	%xmm4, %xmm3
	xorpd	%xmm1, %xmm1
	cmpq	%rax, %rcx
	movq	%rbx, %r12
	jne	0x10001bb1d
	xorpd	%xmm0, %xmm0
	movq	-64(%rbp), %rax
	jmp	0x10001bba1
	movsd	%xmm2, -72(%rbp)
	xorpd	%xmm1, %xmm1
	xorl	%ebx, %ebx
	movsd	%xmm3, -48(%rbp)
	nopl	(%rax)
	movsd	%xmm1, -56(%rbp)
	movq	(%rax,%rbx,8), %rdi
	callq	*%r14
	movsd	-48(%rbp), %xmm3
	mulsd	%xmm3, %xmm0
	movq	(%r15), %rax
	movsd	(%rax,%rbx,8), %xmm1
	subsd	%xmm0, %xmm1
	mulsd	%xmm1, %xmm1
	movsd	-56(%rbp), %xmm0
	addsd	%xmm1, %xmm0
	movsd	%xmm0, -56(%rbp)
	movsd	-56(%rbp), %xmm1
	incq	%rbx
	movq	(%r13), %rax
	movq	8(%r13), %rcx
	subq	%rax, %rcx
	sarq	$3, %rcx
	cmpq	%rcx, %rbx
	jb	0x10001bb30
	movq	%rcx, %xmm0
	punpckldq	57956(%rip), %xmm0
	subpd	57964(%rip), %xmm0
	haddpd	%xmm0, %xmm0
	movq	-64(%rbp), %rax
	movsd	-72(%rbp), %xmm2
	divsd	%xmm0, %xmm2
	divsd	%xmm0, %xmm1
	xorps	%xmm0, %xmm0
	sqrtsd	%xmm1, %xmm0
	divsd	%xmm2, %xmm0
	movsd	%xmm3, (%r12)
	movsd	%xmm0, 8(%r12)
	movl	%eax, 16(%r12)
	movq	%r12, %rax
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movl	$20, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r8
	movapd	59347(%rip), %xmm0
	movupd	%xmm0, (%r8)
	movl	$4, 16(%r8)
	movq	(%r13), %rcx
	movq	8(%r13), %rsi
	xorpd	%xmm0, %xmm0
	movsd	59346(%rip), %xmm5
	movq	%rsi, %rax
	subq	%rcx, %rax
	movapd	%xmm5, %xmm1
	xorpd	%xmm2, %xmm2
	xorpd	%xmm3, %xmm3
	je	0x10001bcb2
	movq	(%r15), %rdx
	sarq	$3, %rax
	xorpd	%xmm2, %xmm2
	xorl	%edi, %edi
	movsd	57741(%rip), %xmm3
	xorpd	%xmm0, %xmm0
	xorpd	%xmm1, %xmm1
	nopw	%cs:(%rax,%rax)
	addsd	%xmm3, %xmm2
	movsd	(%rdx,%rdi,8), %xmm4
	addsd	%xmm4, %xmm0
	addsd	%xmm4, %xmm1
	incq	%rdi
	cmpq	%rax, %rdi
	jb	0x10001bc50
	divsd	%xmm2, %xmm1
	xorpd	%xmm2, %xmm2
	xorl	%edi, %edi
	nopw	%cs:(%rax,%rax)
	movsd	(%rdx,%rdi,8), %xmm3
	subsd	%xmm1, %xmm3
	mulsd	%xmm3, %xmm3
	addsd	%xmm3, %xmm2
	incq	%rdi
	cmpq	%rax, %rdi
	jb	0x10001bc80
	movq	%rax, %xmm3
	punpckldq	57674(%rip), %xmm3
	subpd	57682(%rip), %xmm3
	haddpd	%xmm3, %xmm3
	movq	%r8, %r11
	addq	$20, %r11
	divsd	%xmm3, %xmm0
	divsd	%xmm3, %xmm2
	sqrtsd	%xmm2, %xmm2
	divsd	%xmm0, %xmm2
	movsd	%xmm1, (%r12)
	movsd	%xmm2, 8(%r12)
	movl	$1, 16(%r12)
	movl	$5, %edi
	leaq	__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_58__invokeEx(%rip), %r9 ## benchmark::FittingCurve(benchmark::BigO)::$_5::__invoke(long long)
	leaq	80558(%rip), %r10
	movq	%r8, %rbx
	movq	%r8, -64(%rbp)
	movq	%r11, -80(%rbp)
	jmp	0x10001bd52
	movq	%rcx, %xmm0
	punpckldq	57572(%rip), %xmm0
	subpd	57580(%rip), %xmm0
	haddpd	%xmm0, %xmm0
	movq	%rax, %rcx
	movq	-64(%rbp), %r8
	movsd	59065(%rip), %xmm5
	movq	-80(%rbp), %r11
	movsd	-96(%rbp), %xmm2
	leaq	__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_58__invokeEx(%rip), %r9 ## benchmark::FittingCurve(benchmark::BigO)::$_5::__invoke(long long)
	leaq	80482(%rip), %r10
	movq	-88(%rbp), %rbx
	movsd	-72(%rbp), %xmm3
	jmp	0x10001bd7d
	nopl	(%rax)
	movl	(%rbx), %edi
	addl	$-2, %edi
	cmpl	$4, %edi
	movq	%r9, %r14
	ja	0x10001bd64
	movslq	%edi, %rax
	movq	(%r10,%rax,8), %r14
	xorpd	%xmm3, %xmm3
	cmpq	%rcx, %rsi
	jne	0x10001bdd0
	movq	%rcx, %rsi
	movsd	%xmm5, -48(%rbp)
	xorpd	%xmm1, %xmm1
	xorpd	%xmm0, %xmm0
	divsd	%xmm0, %xmm3
	divsd	%xmm0, %xmm1
	xorps	%xmm0, %xmm0
	sqrtsd	%xmm1, %xmm0
	divsd	%xmm3, %xmm0
	ucomisd	%xmm0, %xmm2
	jbe	0x10001bdbc
	movsd	-48(%rbp), %xmm1
	movsd	%xmm1, (%r12)
	movsd	%xmm0, 8(%r12)
	movl	$8, 16(%r12)
	movl	(%rbx), %eax
	movl	%eax, 16(%r12)
	movapd	%xmm0, %xmm2
	addq	$4, %rbx
	cmpq	%r11, %rbx
	jne	0x10001bd50
	jmp	0x10001bf0d
	nopw	(%rax,%rax)
	movq	%rbx, -88(%rbp)
	movsd	%xmm2, -96(%rbp)
	movq	%r12, %rbx
	xorpd	%xmm2, %xmm2
	movq	%rcx, %rax
	xorpd	%xmm3, %xmm3
	xorl	%r12d, %r12d
	xorpd	%xmm0, %xmm0
	movsd	%xmm0, -48(%rbp)
	nopw	%cs:(%rax,%rax)
	movsd	%xmm2, -56(%rbp)
	movsd	%xmm3, -72(%rbp)
	movq	(%rax,%r12,8), %rdi
	callq	*%r14
	movapd	%xmm0, %xmm1
	mulsd	%xmm1, %xmm1
	movsd	-56(%rbp), %xmm2
	addsd	%xmm1, %xmm2
	movq	(%r15), %rax
	movsd	(%rax,%r12,8), %xmm1
	movsd	-72(%rbp), %xmm3
	addsd	%xmm1, %xmm3
	mulsd	%xmm1, %xmm0
	movsd	-48(%rbp), %xmm1
	addsd	%xmm0, %xmm1
	movsd	%xmm1, -48(%rbp)
	incq	%r12
	movq	(%r13), %rax
	movq	8(%r13), %rcx
	movq	%rcx, %rdx
	subq	%rax, %rdx
	sarq	$3, %rdx
	cmpq	%rdx, %r12
	jb	0x10001be00
	movsd	-48(%rbp), %xmm0
	divsd	%xmm2, %xmm0
	movsd	%xmm0, -48(%rbp)
	xorpd	%xmm1, %xmm1
	cmpq	%rax, %rcx
	movq	%rbx, %r12
	jne	0x10001bead
	movq	%rcx, %rsi
	xorpd	%xmm0, %xmm0
	movq	-64(%rbp), %r8
	movsd	58707(%rip), %xmm5
	movq	-80(%rbp), %r11
	movsd	-96(%rbp), %xmm2
	leaq	__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_58__invokeEx(%rip), %r9 ## benchmark::FittingCurve(benchmark::BigO)::$_5::__invoke(long long)
	leaq	80124(%rip), %r10
	movq	-88(%rbp), %rbx
	jmp	0x10001bd7d
	movsd	%xmm3, -72(%rbp)
	xorpd	%xmm1, %xmm1
	xorl	%ebx, %ebx
	nopl	(%rax,%rax)
	movsd	%xmm1, -56(%rbp)
	movq	(%rax,%rbx,8), %rdi
	callq	*%r14
	mulsd	-48(%rbp), %xmm0
	movq	(%r15), %rax
	movsd	(%rax,%rbx,8), %xmm1
	subsd	%xmm0, %xmm1
	mulsd	%xmm1, %xmm1
	movsd	-56(%rbp), %xmm0
	addsd	%xmm1, %xmm0
	movapd	%xmm0, %xmm1
	incq	%rbx
	movq	(%r13), %rax
	movq	8(%r13), %rsi
	movq	%rsi, %rcx
	subq	%rax, %rcx
	sarq	$3, %rcx
	cmpq	%rcx, %rbx
	jb	0x10001bec0
	jmp	0x10001bcff
	movq	%r8, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x10001bbc6
	jmp	0x10001bf1c
	movq	%rax, %rbx
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	.byte 0xea #bad opcode
	cli
	.byte 0xff #bad opcode
	jmpq	*%rbx
	cli
	.byte 0xff #bad opcode
	lcalll	*(%rbx,%rdi,8)
	.byte 0xff #bad opcode
	ljmpl	*(%rdi)
	sti
	.byte 0xff #bad opcode
	incl	-5(%rdx)
	.byte 0xff #bad opcode
	ljmpl	*268435452(%rax)
	.byte 0x1f #bad opcode
	testb	%al, (%rax)
	addb	%al, (%rax)
	addb	%al, (%rax)
__ZN9benchmark11ComputeBigOERKNSt3__16vectorINS_17BenchmarkReporter3RunENS0_9allocatorIS3_EEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$648, %rsp
	movq	%rsi, %r15
	movq	%rdi, %r13
	movq	$0, 16(%r13)
	movq	$0, 8(%r13)
	movq	$0, (%r13)
	movq	(%r15), %rbx
	movq	8(%r15), %r12
	movq	%r12, %rax
	subq	%rbx, %rax
	sarq	$3, %rax
	movabsq	$-8116567392432202711, %rcx
	imulq	%rax, %rcx
	cmpq	$2, %rcx
	jb	0x10001c967
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -96(%rbp)
	movq	$0, -80(%rbp)
	movapd	%xmm0, -208(%rbp)
	movq	$0, -192(%rbp)
	movapd	%xmm0, -176(%rbp)
	movq	$0, -160(%rbp)
	cmpq	%r12, %rbx
	je	0x10001c155
	movq	%r15, -112(%rbp)
	movq	%r13, -64(%rbp)
	addq	$152, %rbx
	negq	%r12
	movq	77852(%rip), %r15 ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	78341(%rip), %r14 ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	leaq	-416(%rbp), %r13
	nopw	%cs:(%rax,%rax)
	movb	(%r15), %al
	testb	%al, %al
	jne	0x10001c042
	movq	%r15, %rdi
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10001c042
	movq	$0, (%r14)
	movq	%r15, %rdi
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	(%r14), %rdi
	testq	%rdi, %rdi
	je	0x10001c05b
	movl	$38, %edx
	leaq	74014(%rip), %rsi ## literal pool for: "Did you forget to call SetComplexityN?"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	-88(%rbp), %rax
	cmpq	-80(%rbp), %rax
	je	0x10001c080
	movq	(%rbx), %rcx
	movq	%rcx, (%rax)
	addq	$8, %rax
	movq	%rax, -88(%rbp)
	jmp	0x10001c08c
	nopw	%cs:(%rax,%rax)
	leaq	-96(%rbp), %rdi
	movq	%rbx, %rsi
	callq	__ZNSt3__16vectorIxNS_9allocatorIxEEE21__push_back_slow_pathIRKxEEvOT_ ## void std::__1::vector<long long, std::__1::allocator<long long> >::__push_back_slow_path<long long const&>(long long const&)
	movsd	-56(%rbx), %xmm0
	movq	-72(%rbx), %rax
	xorps	%xmm1, %xmm1
	cvtsi2sdq	%rax, %xmm1
	divsd	%xmm1, %xmm0
	movsd	%xmm0, -416(%rbp)
	movq	-200(%rbp), %rcx
	cmpq	-192(%rbp), %rcx
	jae	0x10001c0d0
	movsd	%xmm0, (%rcx)
	addq	$8, %rcx
	movq	%rcx, -200(%rbp)
	jmp	0x10001c0e3
	nopw	(%rax,%rax)
	leaq	-208(%rbp), %rdi
	movq	%r13, %rsi
	callq	__ZNSt3__16vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_ ## void std::__1::vector<double, std::__1::allocator<double> >::__push_back_slow_path<double>(double&&)
	movq	-72(%rbx), %rax
	movsd	-48(%rbx), %xmm0
	xorps	%xmm1, %xmm1
	cvtsi2sdq	%rax, %xmm1
	divsd	%xmm1, %xmm0
	movsd	%xmm0, -416(%rbp)
	movq	-168(%rbp), %rax
	cmpq	-160(%rbp), %rax
	jae	0x10001c120
	movsd	%xmm0, (%rax)
	addq	$8, %rax
	movq	%rax, -168(%rbp)
	jmp	0x10001c12f
	nopl	(%rax)
	leaq	-176(%rbp), %rdi
	movq	%r13, %rsi
	callq	__ZNSt3__16vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_ ## void std::__1::vector<double, std::__1::allocator<double> >::__push_back_slow_path<double>(double&&)
	leaq	200(%rbx,%r12), %rax
	addq	$200, %rbx
	cmpq	$152, %rax
	jne	0x10001c020
	movq	-112(%rbp), %r15
	movq	(%r15), %rbx
	movq	-64(%rbp), %r13
	movl	136(%rbx), %ecx
	cmpl	$8, %ecx
	jne	0x10001c273
	movq	-96(%rbp), %rcx
	movq	-88(%rbp), %rax
	xorpd	%xmm2, %xmm2
	movsd	57960(%rip), %xmm0
	cmpq	%rcx, %rax
	movq	%rax, %rdx
	movsd	%xmm0, -72(%rbp)
	movsd	%xmm0, -64(%rbp)
	xorpd	%xmm3, %xmm3
	xorpd	%xmm1, %xmm1
	xorpd	%xmm4, %xmm4
	jne	0x10001c2e2
	cmpq	%rax, %rdx
	xorpd	%xmm5, %xmm5
	xorpd	%xmm0, %xmm0
	je	0x10001c4a2
	movapd	%xmm4, -656(%rbp)
	movsd	%xmm1, -120(%rbp)
	movsd	%xmm3, -112(%rbp)
	movq	(%r15), %rcx
	movq	144(%rcx), %r14
	xorpd	%xmm3, %xmm3
	xorl	%ebx, %ebx
	xorpd	%xmm2, %xmm2
	xorpd	%xmm0, %xmm0
	movsd	%xmm0, -72(%rbp)
	nopw	(%rax,%rax)
	movsd	%xmm3, -216(%rbp)
	movsd	%xmm2, -144(%rbp)
	movq	(%rax,%rbx,8), %rdi
	callq	*%r14
	movapd	%xmm0, %xmm1
	mulsd	%xmm1, %xmm1
	movsd	-216(%rbp), %xmm3
	addsd	%xmm1, %xmm3
	movq	-208(%rbp), %rax
	movsd	(%rax,%rbx,8), %xmm1
	movsd	-144(%rbp), %xmm2
	addsd	%xmm1, %xmm2
	mulsd	%xmm1, %xmm0
	movsd	-72(%rbp), %xmm1
	addsd	%xmm0, %xmm1
	movsd	%xmm1, -72(%rbp)
	incq	%rbx
	movq	-96(%rbp), %rax
	movq	-88(%rbp), %rcx
	movq	%rcx, %rdx
	subq	%rax, %rdx
	sarq	$3, %rdx
	cmpq	%rdx, %rbx
	jb	0x10001c1e0
	movsd	-72(%rbp), %xmm0
	divsd	%xmm3, %xmm0
	movsd	%xmm0, -72(%rbp)
	xorpd	%xmm5, %xmm5
	cmpq	%rax, %rcx
	jne	0x10001c416
	xorpd	%xmm0, %xmm0
	jmp	0x10001c490
	movq	%r15, %r14
	leaq	-416(%rbp), %rdi
	leaq	-96(%rbp), %rsi
	leaq	-176(%rbp), %rdx
	callq	__ZN9benchmark14MinimalLeastSqERKNSt3__16vectorIxNS0_9allocatorIxEEEERKNS1_IdNS2_IdEEEENS_4BigOE ## benchmark::MinimalLeastSq(std::__1::vector<long long, std::__1::allocator<long long> > const&, std::__1::vector<double, std::__1::allocator<double> > const&, benchmark::BigO)
	movq	-416(%rbp), %rax
	movq	%rax, -64(%rbp)
	movsd	-408(%rbp), %xmm0
	movapd	%xmm0, -112(%rbp)
	movl	-400(%rbp), %r15d
	leaq	-416(%rbp), %rdi
	leaq	-96(%rbp), %rsi
	leaq	-208(%rbp), %rdx
	movl	%r15d, %ecx
	callq	__ZN9benchmark14MinimalLeastSqERKNSt3__16vectorIxNS0_9allocatorIxEEEERKNS1_IdNS2_IdEEEENS_4BigOE ## benchmark::MinimalLeastSq(std::__1::vector<long long, std::__1::allocator<long long> > const&, std::__1::vector<double, std::__1::allocator<double> > const&, benchmark::BigO)
	movq	-416(%rbp), %r12
	movq	-408(%rbp), %xmm0
	movdqa	%xmm0, -144(%rbp)
	jmp	0x10001c4f0
	movq	144(%rbx), %r14
	xorpd	%xmm2, %xmm2
	xorl	%ebx, %ebx
	xorpd	%xmm3, %xmm3
	xorpd	%xmm0, %xmm0
	movsd	%xmm0, -64(%rbp)
	nopl	(%rax)
	movsd	%xmm2, -144(%rbp)
	movsd	%xmm3, -112(%rbp)
	movq	(%rcx,%rbx,8), %rdi
	callq	*%r14
	movapd	%xmm0, %xmm1
	mulsd	%xmm1, %xmm1
	movsd	-144(%rbp), %xmm2
	addsd	%xmm1, %xmm2
	movq	-176(%rbp), %rax
	movsd	(%rax,%rbx,8), %xmm1
	movsd	-112(%rbp), %xmm3
	addsd	%xmm1, %xmm3
	mulsd	%xmm1, %xmm0
	movsd	-64(%rbp), %xmm1
	addsd	%xmm0, %xmm1
	movsd	%xmm1, -64(%rbp)
	incq	%rbx
	movq	-96(%rbp), %rcx
	movq	-88(%rbp), %rax
	movq	%rax, %rdx
	subq	%rcx, %rdx
	sarq	$3, %rdx
	cmpq	%rdx, %rbx
	jb	0x10001c300
	movsd	-64(%rbp), %xmm0
	divsd	%xmm2, %xmm0
	movsd	%xmm0, -64(%rbp)
	xorpd	%xmm1, %xmm1
	cmpq	%rcx, %rax
	jne	0x10001c390
	movq	%rax, %rdx
	xorpd	%xmm4, %xmm4
	xorpd	%xmm2, %xmm2
	jmp	0x10001c19a
	movsd	%xmm3, -112(%rbp)
	xorpd	%xmm1, %xmm1
	xorl	%ebx, %ebx
	nopl	(%rax,%rax)
	movsd	%xmm1, -120(%rbp)
	movq	(%rcx,%rbx,8), %rdi
	callq	*%r14
	mulsd	-64(%rbp), %xmm0
	movq	-176(%rbp), %rax
	movsd	(%rax,%rbx,8), %xmm1
	subsd	%xmm0, %xmm1
	mulsd	%xmm1, %xmm1
	movsd	-120(%rbp), %xmm0
	addsd	%xmm1, %xmm0
	movapd	%xmm0, %xmm1
	incq	%rbx
	movq	-96(%rbp), %rcx
	movq	-88(%rbp), %rdx
	movq	%rdx, %rax
	subq	%rcx, %rax
	sarq	$3, %rax
	cmpq	%rax, %rbx
	jb	0x10001c3a0
	movq	%rax, %xmm4
	punpckldq	55799(%rip), %xmm4
	subpd	55807(%rip), %xmm4
	haddpd	%xmm4, %xmm4
	movq	%rcx, %rax
	xorpd	%xmm2, %xmm2
	movsd	-112(%rbp), %xmm3
	jmp	0x10001c19a
	movsd	%xmm2, -144(%rbp)
	xorpd	%xmm5, %xmm5
	xorl	%ebx, %ebx
	movsd	%xmm5, -216(%rbp)
	movq	(%rax,%rbx,8), %rdi
	callq	*%r14
	mulsd	-72(%rbp), %xmm0
	movq	-208(%rbp), %rax
	movsd	(%rax,%rbx,8), %xmm1
	subsd	%xmm0, %xmm1
	mulsd	%xmm1, %xmm1
	movsd	-216(%rbp), %xmm5
	addsd	%xmm1, %xmm5
	incq	%rbx
	movq	-96(%rbp), %rax
	movq	-88(%rbp), %rcx
	subq	%rax, %rcx
	sarq	$3, %rcx
	cmpq	%rcx, %rbx
	jb	0x10001c424
	movq	%rcx, %xmm0
	punpckldq	55668(%rip), %xmm0
	subpd	55676(%rip), %xmm0
	haddpd	%xmm0, %xmm0
	movsd	-144(%rbp), %xmm2
	movsd	-112(%rbp), %xmm3
	movsd	-120(%rbp), %xmm1
	movapd	-656(%rbp), %xmm4
	movq	%r15, %r14
	divsd	%xmm4, %xmm3
	divsd	%xmm4, %xmm1
	sqrtsd	%xmm1, %xmm1
	divsd	%xmm3, %xmm1
	movapd	%xmm1, -112(%rbp)
	movq	-64(%rbp), %xmm1
	movq	%xmm1, -64(%rbp)
	divsd	%xmm0, %xmm2
	divsd	%xmm0, %xmm5
	xorps	%xmm0, %xmm0
	sqrtsd	%xmm5, %xmm0
	divsd	%xmm2, %xmm0
	movapd	%xmm0, -144(%rbp)
	movq	-72(%rbp), %xmm0
	movq	%xmm0, %r12
	movl	$8, %r15d
	movq	(%r14), %rbx
	movl	$47, %esi
	xorl	%edx, %edx
	movq	%rbx, %rdi
	callq	0x100029590 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm
	leaq	-440(%rbp), %rdi
	xorl	%edx, %edx
	movq	%rbx, %rsi
	movq	%rax, %rcx
	movq	%rbx, %r8
	callq	0x10002960e ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_
	movq	$0, -344(%rbp)
	movq	$0, -352(%rbp)
	movq	$0, -360(%rbp)
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, -384(%rbp)
	movdqa	%xmm0, -400(%rbp)
	movdqa	%xmm0, -416(%rbp)
	movb	$0, -368(%rbp)
	movq	$1, -336(%rbp)
	movl	$0, -328(%rbp)
	movw	$0, -248(%rbp)
	leaq	-232(%rbp), %rax
	movq	$0, -224(%rbp)
	movq	$0, -232(%rbp)
	movdqa	%xmm0, -304(%rbp)
	movdqa	%xmm0, -320(%rbp)
	movl	$0, -280(%rbp)
	movq	$0, -288(%rbp)
	movdqa	%xmm0, -272(%rbp)
	movq	%rax, -240(%rbp)
	leaq	72648(%rip), %rdx ## literal pool for: "_BigO"
	leaq	-640(%rbp), %rdi
	leaq	-440(%rbp), %rsi
	callq	__ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_ ## std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*)
	testb	$1, -416(%rbp)
	jne	0x10001c5fa
	movw	$0, -416(%rbp)
	jmp	0x10001c60f
	movq	-400(%rbp), %rax
	movb	$0, (%rax)
	movq	$0, -408(%rbp)
	leaq	-416(%rbp), %rdi
	xorl	%esi, %esi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	movq	-624(%rbp), %rax
	movq	%rax, -400(%rbp)
	movq	-640(%rbp), %rax
	movq	-632(%rbp), %rcx
	movq	%rcx, -408(%rbp)
	movq	%rax, -416(%rbp)
	movq	(%r14), %rsi
	movl	88(%rsi), %edx
	xorl	%eax, %eax
	cmpl	$1, %edx
	sete	%cl
	movq	$0, -336(%rbp)
	movq	%r12, -320(%rbp)
	movq	-64(%rbp), %rdi
	movq	%rdi, -312(%rbp)
	movb	$1, -248(%rbp)
	movl	%r15d, -280(%rbp)
	cmpl	$2, %edx
	je	0x10001c695
	movb	%cl, %al
	leaq	56642(%rip), %rcx
	movsd	(%rcx,%rax,8), %xmm0
	jmp	0x10001c69d
	movsd	56651(%rip), %xmm0
	movapd	%xmm0, -64(%rbp)
	movq	$0, -568(%rbp)
	movq	$0, -576(%rbp)
	movq	$0, -584(%rbp)
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -608(%rbp)
	movapd	%xmm0, -624(%rbp)
	movapd	%xmm0, -640(%rbp)
	movb	$0, -592(%rbp)
	movq	$1, -560(%rbp)
	movl	$0, -552(%rbp)
	movw	$0, -472(%rbp)
	leaq	-456(%rbp), %rax
	movq	$0, -448(%rbp)
	movq	$0, -456(%rbp)
	movapd	%xmm0, -528(%rbp)
	movapd	%xmm0, -544(%rbp)
	movl	$0, -504(%rbp)
	movq	$0, -512(%rbp)
	movapd	%xmm0, -496(%rbp)
	movq	%rax, -464(%rbp)
	addq	$24, %rsi
	leaq	-392(%rbp), %rbx
	movq	%rbx, %rdi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	leaq	72242(%rip), %rdx ## literal pool for: "_RMS"
	leaq	-680(%rbp), %rdi
	leaq	-440(%rbp), %rsi
	callq	__ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_ ## std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*)
	testb	$1, -640(%rbp)
	jne	0x10001c796
	movw	$0, -640(%rbp)
	jmp	0x10001c7ab
	movq	-624(%rbp), %rax
	movb	$0, (%rax)
	movq	$0, -632(%rbp)
	leaq	-640(%rbp), %rdi
	xorl	%esi, %esi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	movq	-664(%rbp), %rax
	movq	%rax, -624(%rbp)
	movq	-680(%rbp), %rax
	movq	-672(%rbp), %rcx
	movq	%rcx, -632(%rbp)
	movq	%rax, -640(%rbp)
	leaq	-616(%rbp), %rdi
	movq	%rbx, %rsi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	movapd	-144(%rbp), %xmm1
	unpcklpd	-112(%rbp), %xmm1
	movq	$0, -560(%rbp)
	movddup	-64(%rbp), %xmm0
	divpd	%xmm0, %xmm1
	movapd	%xmm1, -544(%rbp)
	movb	$1, -471(%rbp)
	movl	%r15d, -504(%rbp)
	movq	(%r14), %rax
	movl	88(%rax), %eax
	movl	%eax, -552(%rbp)
	movq	8(%r13), %rdi
	cmpq	16(%r13), %rdi
	je	0x10001c874
	leaq	-416(%rbp), %rsi
	callq	__ZN9benchmark17BenchmarkReporter3RunC2ERKS1_ ## benchmark::BenchmarkReporter::Run::Run(benchmark::BenchmarkReporter::Run const&)
	movl	$200, %edi
	addq	8(%r13), %rdi
	movq	%rdi, 8(%r13)
	cmpq	16(%r13), %rdi
	je	0x10001c88d
	leaq	-640(%rbp), %rsi
	callq	__ZN9benchmark17BenchmarkReporter3RunC2ERKS1_ ## benchmark::BenchmarkReporter::Run::Run(benchmark::BenchmarkReporter::Run const&)
	addq	$200, 8(%r13)
	jmp	0x10001c89c
	leaq	-416(%rbp), %rsi
	movq	%r13, %rdi
	callq	__ZNSt3__16vectorIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ ## void std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::__push_back_slow_path<benchmark::BenchmarkReporter::Run const&>(benchmark::BenchmarkReporter::Run const&)
	movq	8(%r13), %rdi
	cmpq	16(%r13), %rdi
	jne	0x10001c85e
	leaq	-640(%rbp), %rsi
	movq	%r13, %rdi
	callq	__ZNSt3__16vectorIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ ## void std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::__push_back_slow_path<benchmark::BenchmarkReporter::Run const&>(benchmark::BenchmarkReporter::Run const&)
	leaq	-464(%rbp), %rdi
	movq	-456(%rbp), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -584(%rbp)
	jne	0x10001c97c
	testb	$1, -616(%rbp)
	jne	0x10001c995
	testb	$1, -640(%rbp)
	je	0x10001c8de
	movq	-624(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-240(%rbp), %rdi
	movq	-232(%rbp), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -360(%rbp)
	jne	0x10001c9b3
	testb	$1, -392(%rbp)
	jne	0x10001c9cc
	testb	$1, -416(%rbp)
	jne	0x10001c9e5
	testb	$1, -440(%rbp)
	jne	0x10001c9fe
	movq	-176(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10001c93d
	movq	%rdi, -168(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-208(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10001c955
	movq	%rdi, -200(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-96(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10001c967
	movq	%rdi, -88(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r13, %rax
	addq	$648, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	-568(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -616(%rbp)
	je	0x10001c8c9
	movq	-600(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -640(%rbp)
	jne	0x10001c8d2
	jmp	0x10001c8de
	movq	-344(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -392(%rbp)
	je	0x10001c90b
	movq	-376(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -416(%rbp)
	je	0x10001c918
	movq	-400(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -440(%rbp)
	je	0x10001c925
	movq	-424(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-176(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x10001c931
	jmp	0x10001c93d
	jmp	0x10001cba5
	jmp	0x10001cba5
	movq	%rax, %rdi
	callq	___clang_call_terminate
	jmp	0x10001ca45
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %r14
	jmp	0x10001ca8a
	jmp	0x10001cba5
	movq	%rax, %r14
	leaq	-464(%rbp), %rdi
	movq	-456(%rbp), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -584(%rbp)
	jne	0x10001cb68
	testb	$1, -616(%rbp)
	jne	0x10001cb81
	testb	$1, -640(%rbp)
	je	0x10001ca8a
	movq	-624(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-240(%rbp), %rdi
	movq	-232(%rbp), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -360(%rbp)
	jne	0x10001cb07
	testb	$1, -392(%rbp)
	jne	0x10001cb1c
	testb	$1, -416(%rbp)
	jne	0x10001cb31
	testb	$1, -440(%rbp)
	jne	0x10001cb4a
	movq	-176(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x10001cbd5
	movq	-208(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x10001cbf1
	movq	-96(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10001caf7
	movq	%rdi, -88(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r13, %rdi
	callq	__ZNSt3__113__vector_baseIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEED2Ev ## std::__1::__vector_base<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::~__vector_base()
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	-344(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -392(%rbp)
	je	0x10001caaf
	movq	-376(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -416(%rbp)
	je	0x10001cab8
	movq	-400(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -440(%rbp)
	je	0x10001cac5
	movq	-424(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-176(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10001cad5
	jmp	0x10001cbd5
	movq	-568(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -616(%rbp)
	je	0x10001ca75
	movq	-600(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -640(%rbp)
	jne	0x10001ca7e
	jmp	0x10001ca8a
	jmp	0x10001cba5
	jmp	0x10001cba5
	jmp	0x10001cba5
	movq	%rax, %r14
	movq	-176(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10001cad5
	jmp	0x10001cbd5
	jmp	0x10001cbbe
	jmp	0x10001cbbe
	movq	%rax, %r14
	movq	-64(%rbp), %r13
	movq	-176(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10001cad5
	movq	%rdi, -168(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-208(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10001cae5
	movq	%rdi, -200(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-96(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x10001caee
	jmp	0x10001caf7
	nop
__ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %r12
	movq	$0, 16(%r12)
	movq	$0, 8(%r12)
	movq	$0, (%r12)
	movzbl	(%r15), %ebx
	testb	$1, %bl
	jne	0x10001cc6a
	shrq	%rbx
	movq	%r14, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	incq	%r15
	leaq	(%rbx,%rax), %r13
	cmpq	$-16, %r13
	jb	0x10001cc88
	jmp	0x10001cd09
	movq	8(%r15), %rbx
	movq	%r14, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	16(%r15), %r15
	leaq	(%rbx,%rax), %r13
	cmpq	$-16, %r13
	jae	0x10001cd09
	movq	%r14, -56(%rbp)
	cmpq	$22, %r13
	movq	%rax, -48(%rbp)
	ja	0x10001ccdd
	movl	%ebx, %eax
	addb	%al, %al
	movb	%al, (%r12)
	leaq	1(%r12), %r14
	testq	%rbx, %rbx
	je	0x10001ccb6
	movq	%r14, %rdi
	movq	%r15, %rsi
	movq	%rbx, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	movb	$0, (%r14,%rbx)
	movq	%r12, %rdi
	movq	-56(%rbp), %rsi
	movq	-48(%rbp), %rdx
	callq	0x1000295d8 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
	movq	%r12, %rax
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	addq	$16, %r13
	andq	$-16, %r13
	movq	%r13, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r14
	movq	%r14, 16(%r12)
	orq	$1, %r13
	movq	%r13, (%r12)
	movq	%rbx, 8(%r12)
	testq	%rbx, %rbx
	jne	0x10001cca8
	jmp	0x10001ccb6
	movq	%r12, %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	testb	$1, (%r12)
	je	0x10001cd25
	movq	16(%r12), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax)
__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_08__invokeEx:
	pushq	%rbp
	movq	%rsp, %rbp
	cvtsi2sdq	%rdi, %xmm0
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_18__invokeEx:
	pushq	%rbp
	movq	%rsp, %rbp
	cvtsi2sdq	%rdi, %xmm0
	mulsd	%xmm0, %xmm0
	popq	%rbp
	retq
	nop
__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_28__invokeEx:
	pushq	%rbp
	movq	%rsp, %rbp
	cvtsi2sdq	%rdi, %xmm0
	movsd	54927(%rip), %xmm1
	popq	%rbp
	jmp	0x100029836 ## symbol stub for: _pow
	nopw	(%rax,%rax)
__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_38__invokeEx:
	pushq	%rbp
	movq	%rsp, %rbp
	cvtsi2sdq	%rdi, %xmm0
	callq	0x100029800 ## symbol stub for: _log
	mulsd	54898(%rip), %xmm0
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_48__invokeEx:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	cvtsi2sdq	%rdi, %xmm0
	movsd	54867(%rip), %xmm1
	mulsd	%xmm0, %xmm1
	movsd	%xmm1, -8(%rbp)
	callq	0x100029800 ## symbol stub for: _log
	mulsd	-8(%rbp), %xmm0
	addq	$16, %rsp
	popq	%rbp
	retq
	nop
__ZZN9benchmark12FittingCurveENS_4BigOEEN3$_58__invokeEx:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	53244(%rip), %xmm0
	popq	%rbp
	retq
	nop
__ZNSt3__16vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIdEEvOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rsi, %r8
	movq	%rdi, %r13
	movq	(%r13), %rsi
	movq	8(%r13), %r12
	subq	%rsi, %r12
	movq	%r12, %r15
	sarq	$3, %r15
	leaq	1(%r15), %rax
	movq	%rax, %rcx
	shrq	$61, %rcx
	jne	0x10001cf18
	movabsq	$2305843009213693951, %rcx
	movq	16(%r13), %r14
	subq	%rsi, %r14
	movq	%r14, %rdx
	sarq	$3, %rdx
	movabsq	$1152921504606846974, %rdi
	cmpq	%rdi, %rdx
	ja	0x10001ce92
	sarq	$2, %r14
	cmpq	%rax, %r14
	cmovbq	%rax, %r14
	testq	%r14, %r14
	je	0x10001cf11
	movq	%r8, -48(%rbp)
	movq	%rsi, -56(%rbp)
	cmpq	%rcx, %r14
	jbe	0x10001ce9d
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	69968(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	74627(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	74317(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	74166(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%r8, -48(%rbp)
	movq	%rsi, -56(%rbp)
	movq	%rcx, %r14
	leaq	(,%r14,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	-56(%rbp), %rsi
	movq	-48(%rbp), %r8
	leaq	(%rbx,%r14,8), %r14
	movq	(%r8), %rax
	movq	%rax, (%rbx,%r15,8)
	leaq	8(%rbx,%r15,8), %r15
	testq	%r12, %r12
	jle	0x10001cedb
	movq	%rbx, %rdi
	movq	%r12, %rdx
	movq	%rsi, %r12
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r12, %rsi
	movq	%rbx, (%r13)
	movq	%r15, 8(%r13)
	movq	%r14, 16(%r13)
	testq	%rsi, %rsi
	je	0x10001cf02
	movq	%rsi, %rdi
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
	jmp	0x10001ceb5
	movq	%r13, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__GLOBAL__sub_I_complexity.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark8internal17InitializeStreamsEv ## benchmark::internal::InitializeStreams()
	nop
	nop
	nop
	nop
	nop
	nop
__ZN9benchmark15ConsoleReporter13ReportContextERKNS_17BenchmarkReporter7ContextE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	8(%r14), %rax
	movq	%rax, 32(%rbx)
	movb	$0, 64(%rbx)
	leaq	40(%rbx), %rdi
	leaq	48(%rbx), %r15
	movq	48(%rbx), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	$0, 56(%rbx)
	movq	%r15, 40(%rbx)
	movq	$0, 48(%rbx)
	movq	16(%rbx), %rdi
	movq	%r14, %rsi
	callq	__ZN9benchmark17BenchmarkReporter17PrintBasicContextEPNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_7ContextE ## benchmark::BenchmarkReporter::PrintBasicContext(std::__1::basic_ostream<char, std::__1::char_traits<char> >*, benchmark::BenchmarkReporter::Context const&)
	movb	$1, %al
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopw	(%rax,%rax)
__ZN9benchmark15ConsoleReporter11PrintHeaderERKNS_17BenchmarkReporter3RunE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movl	32(%r14), %edx
	leaq	70139(%rip), %rax ## literal pool for: "Iterations"
	movq	%rax, (%rsp)
	leaq	70089(%rip), %rsi ## literal pool for: "%-*s %13s %13s %10s"
	leaq	70102(%rip), %rcx ## literal pool for: "Benchmark"
	leaq	70105(%rip), %r8 ## literal pool for: "Time"
	leaq	70103(%rip), %r9 ## literal pool for: "CPU"
	leaq	-88(%rbp), %rdi
	xorl	%eax, %eax
	callq	__ZN9benchmark12FormatStringEPKcz ## benchmark::FormatString(char const*, ...)
	cmpq	$0, 192(%rbx)
	je	0x10001d0fd
	testb	$2, 24(%r14)
	jne	0x10001d027
	leaq	70085(%rip), %rsi ## literal pool for: " UserCounters..."
	leaq	-88(%rbp), %rdi
	callq	0x1000295d2 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
	jmp	0x10001d0fd
	movq	176(%rbx), %r13
	addq	$184, %rbx
	cmpq	%rbx, %r13
	je	0x10001d0fd
	leaq	70035(%rip), %r15 ## literal pool for: " %10s"
	leaq	-64(%rbp), %r12
	nopl	(%rax)
	testb	$1, 32(%r13)
	jne	0x10001d060
	leaq	32(%r13), %rdx
	incq	%rdx
	jmp	0x10001d064
	movq	48(%r13), %rdx
	xorl	%eax, %eax
	movq	%r12, %rdi
	movq	%r15, %rsi
	callq	__ZN9benchmark12FormatStringEPKcz ## benchmark::FormatString(char const*, ...)
	movzbl	-64(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-48(%rbp), %rsi
	leaq	-63(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-56(%rbp), %rdx
	leaq	-88(%rbp), %rdi
	callq	0x1000295d8 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
	testb	$1, -64(%rbp)
	je	0x10001d0a8
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	8(%r13), %rcx
	testq	%rcx, %rcx
	je	0x10001d0d0
	nopw	%cs:(%rax,%rax)
	movq	%rcx, %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	jne	0x10001d0c0
	jmp	0x10001d0f1
	nopl	(%rax)
	movq	16(%r13), %rax
	cmpq	%r13, (%rax)
	je	0x10001d0f1
	addq	$16, %r13
	nopl	(%rax)
	movq	(%r13), %rcx
	movq	16(%rcx), %rax
	cmpq	%rcx, (%rax)
	leaq	16(%rcx), %r13
	jne	0x10001d0e0
	cmpq	%rbx, %rax
	movq	%rax, %r13
	jne	0x10001d050
	leaq	68060(%rip), %rsi ## literal pool for: "\n"
	leaq	-88(%rbp), %rdi
	callq	0x1000295d2 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
	movzbl	-88(%rbp), %r13d
	testb	$1, %r13b
	jne	0x10001d132
	shrq	%r13
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	cmpq	$23, %r13
	jb	0x10001d155
	jmp	0x10001d16f
	movq	-80(%rbp), %r13
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	cmpq	$-16, %r13
	jae	0x10001d278
	cmpq	$23, %r13
	jae	0x10001d16f
	movl	%r13d, %eax
	addb	%al, %al
	movb	%al, -64(%rbp)
	leaq	-63(%rbp), %r15
	testq	%r13, %r13
	je	0x10001d26d
	movq	%r15, %r12
	jmp	0x10001d196
	leaq	16(%r13), %rbx
	andq	$-16, %rbx
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r12
	movq	%r12, -48(%rbp)
	orq	$1, %rbx
	movq	%rbx, -64(%rbp)
	movq	%r13, -56(%rbp)
	leaq	-63(%rbp), %r15
	movl	$45, %esi
	movq	%r12, %rdi
	movq	%r13, %rdx
	callq	0x10002982a ## symbol stub for: _memset
	movb	$0, (%r12,%r13)
	movq	8(%r14), %rdi
	movzbl	-64(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-56(%rbp), %rdx
	testb	%al, %al
	movq	-48(%rbp), %rsi
	cmoveq	%r15, %rsi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	67850(%rip), %rsi ## literal pool for: "\n"
	movl	$1, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-88(%rbp), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	leaq	-87(%rbp), %rsi
	cmovneq	-72(%rbp), %rsi
	testb	%cl, %cl
	cmovneq	-80(%rbp), %rdx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-64(%rbp), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	cmovneq	-48(%rbp), %r15
	testb	%cl, %cl
	cmovneq	-56(%rbp), %rdx
	movq	%rax, %rdi
	movq	%r15, %rsi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	67757(%rip), %rsi ## literal pool for: "\n"
	movl	$1, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -64(%rbp)
	je	0x10001d24f
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -88(%rbp)
	je	0x10001d25e
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%r13d, %r13d
	movq	%r15, %r12
	jmp	0x10001d1a6
	leaq	-64(%rbp), %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	je	0x10001d2c5
	jmp	0x10001d2cd
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	je	0x10001d2c5
	jmp	0x10001d2cd
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x10001d2ab
	jmp	0x10001d2bf
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x10001d2bf
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -88(%rbp)
	je	0x10001d2c5
	jmp	0x10001d2cd
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x10001d2cd
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nop
__ZN9benchmark15ConsoleReporter10ReportRunsERKNSt3__16vectorINS_17BenchmarkReporter3RunENS1_9allocatorIS4_EEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %r14
	movq	(%rsi), %rbx
	movq	8(%rsi), %r12
	cmpq	%r12, %rbx
	je	0x10001d39c
	leaq	40(%r14), %r15
	leaq	-136(%r14), %rax
	movq	%rax, -48(%rbp)
	movzbl	64(%r14), %r13d
	testb	$2, 24(%r14)
	jne	0x10001d360
	xorl	%eax, %eax
	xorb	$1, %r13b
	orb	%al, %r13b
	je	0x10001d380
	movb	$1, 64(%r14)
	cmpq	%rbx, -48(%rbp)
	je	0x10001d348
	movq	176(%rbx), %rsi
	leaq	184(%rbx), %rdx
	movq	%r15, %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE14__assign_multiINS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEEEEvT_SO_ ## void std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::__assign_multi<std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long> >(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long>, std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long>)
	movq	(%r14), %rax
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	*48(%rax)
	jmp	0x10001d380
	nopw	%cs:(%rax,%rax)
	leaq	176(%rbx), %rdi
	movq	%r15, %rsi
	callq	__ZN9benchmark8internal9SameNamesERKNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_7CounterENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEESI_ ## benchmark::internal::SameNames(std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, benchmark::Counter> > > const&, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, benchmark::Counter> > > const&)
	xorb	$1, %al
	xorb	$1, %r13b
	orb	%al, %r13b
	jne	0x10001d327
	nopw	(%rax,%rax)
	movq	(%r14), %rax
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	*40(%rax)
	addq	$200, %rbx
	cmpq	%rbx, %r12
	jne	0x10001d310
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZN9benchmark15ConsoleReporter12PrintRunDataERKNS_17BenchmarkReporter3RunE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$136, %rsp
	movq	%rsi, %r15
	movq	%rdi, %r12
	movq	8(%r12), %r14
	movl	24(%r12), %eax
	testb	$1, %al
	leaq	__ZN9benchmarkL16IgnoreColorPrintERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_8LogColorEPKcz(%rip), %rbx ## benchmark::IgnoreColorPrint(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, benchmark::LogColor, char const*, ...)
	cmovneq	72779(%rip), %rbx
	movb	169(%r15), %al
	xorl	%ecx, %ecx
	orb	168(%r15), %al
	setne	%cl
	leal	2(%rcx,%rcx), %esi
	movq	32(%r12), %rcx
	leaq	1(%r15), %r8
	testb	$1, (%r15)
	cmovneq	16(%r15), %r8
	leaq	69082(%rip), %rdx ## literal pool for: "%-*s "
	xorl	%eax, %eax
	movq	%r14, %rdi
	movq	%rbx, %r13
	callq	*%rbx
	cmpb	$0, 48(%r15)
	je	0x10001d46c
	leaq	57(%r15), %rcx
	testb	$1, 56(%r15)
	cmovneq	72(%r15), %rcx
	leaq	69050(%rip), %rdx ## literal pool for: "ERROR OCCURRED: '%s'"
	movl	$1, %esi
	xorl	%eax, %eax
	movq	%r14, %rdi
	callq	*%r13
	leaq	67217(%rip), %rdx ## literal pool for: "\n"
	xorl	%esi, %esi
	xorl	%eax, %eax
	movq	%r14, %rdi
	movq	%r13, %rcx
	addq	$136, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmpq	*%rcx
	movq	%r13, -48(%rbp)
	xorpd	%xmm1, %xmm1
	movapd	%xmm1, -144(%rbp)
	movq	$0, -128(%rbp)
	movsd	112(%r15), %xmm0
	xorpd	%xmm2, %xmm2
	ucomisd	%xmm2, %xmm0
	jbe	0x10001d53e
	leaq	-80(%rbp), %rdi
	movsd	53292(%rip), %xmm1
	callq	__ZN9benchmark19HumanReadableNumberEdd ## benchmark::HumanReadableNumber(double, double)
	leaq	69592(%rip), %rsi ## literal pool for: " "
	leaq	68947(%rip), %rcx ## literal pool for: "B/s"
	leaq	-112(%rbp), %rdi
	leaq	-80(%rbp), %rdx
	callq	__ZN9benchmark6StrCatIJRA2_KcNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERA4_S1_EEESA_DpOT_ ## std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > benchmark::StrCat<char const (&) [2], std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, char const (&) [4]>(char const (&) [2], std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&, char const (&) [4])
	testb	$1, -144(%rbp)
	jne	0x10001d4d8
	movw	$0, -144(%rbp)
	jmp	0x10001d4ea
	movq	-128(%rbp), %rax
	movb	$0, (%rax)
	movq	$0, -136(%rbp)
	leaq	-144(%rbp), %rdi
	xorl	%esi, %esi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	movq	-96(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-112(%rbp), %rax
	movq	-104(%rbp), %rcx
	movq	%rcx, -136(%rbp)
	movq	%rax, -144(%rbp)
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -112(%rbp)
	movq	$0, -96(%rbp)
	testb	$1, -80(%rbp)
	je	0x10001d536
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	xorpd	%xmm1, %xmm1
	xorpd	%xmm2, %xmm2
	movapd	%xmm1, -112(%rbp)
	movq	$0, -96(%rbp)
	movsd	120(%r15), %xmm0
	ucomisd	%xmm2, %xmm0
	jbe	0x10001d5f3
	leaq	-176(%rbp), %rdi
	movsd	53094(%rip), %xmm1
	callq	__ZN9benchmark19HumanReadableNumberEdd ## benchmark::HumanReadableNumber(double, double)
	leaq	69394(%rip), %rsi ## literal pool for: " "
	leaq	68753(%rip), %rcx ## literal pool for: " items/s"
	leaq	-80(%rbp), %rdi
	leaq	-176(%rbp), %rdx
	callq	__ZN9benchmark6StrCatIJRA2_KcNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERA9_S1_EEESA_DpOT_ ## std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > benchmark::StrCat<char const (&) [2], std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, char const (&) [9]>(char const (&) [2], std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&, char const (&) [9])
	testb	$1, -112(%rbp)
	jne	0x10001d59b
	movw	$0, -112(%rbp)
	jmp	0x10001d5aa
	movq	-96(%rbp), %rax
	movb	$0, (%rax)
	movq	$0, -104(%rbp)
	leaq	-112(%rbp), %rdi
	xorl	%esi, %esi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	movq	-64(%rbp), %rax
	movq	%rax, -96(%rbp)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rcx
	movq	%rcx, -104(%rbp)
	movq	%rax, -112(%rbp)
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -80(%rbp)
	movq	$0, -64(%rbp)
	testb	$1, -176(%rbp)
	je	0x10001d5f3
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	__ZNK9benchmark17BenchmarkReporter3Run19GetAdjustedRealTimeEv ## benchmark::BenchmarkReporter::Run::GetAdjustedRealTime() const
	movsd	%xmm0, -88(%rbp)
	movq	%r15, %rdi
	callq	__ZNK9benchmark17BenchmarkReporter3Run18GetAdjustedCPUTimeEv ## benchmark::BenchmarkReporter::Run::GetAdjustedCPUTime() const
	movapd	%xmm0, %xmm2
	cmpb	$0, 168(%r15)
	je	0x10001d68b
	movsd	%xmm2, -152(%rbp)
	movl	136(%r15), %esi
	leaq	-80(%rbp), %rdi
	callq	__ZN9benchmark13GetBigOStringENS_4BigOE ## benchmark::GetBigOString(benchmark::BigO)
	testb	$1, -80(%rbp)
	leaq	-79(%rbp), %rcx
	cmovneq	-64(%rbp), %rcx
	leaq	68565(%rip), %rdx ## literal pool for: "%10.2f %s %10.2f %s "
	movl	$3, %esi
	movb	$2, %al
	movq	%r14, %rdi
	movsd	-88(%rbp), %xmm0
	movq	%rcx, %r8
	movsd	-152(%rbp), %xmm1
	callq	*-48(%rbp)
	testb	$1, -80(%rbp)
	je	0x10001d66e
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-48(%rbp), %rbx
	movb	169(%r15), %al
	orb	168(%r15), %al
	jne	0x10001d73f
	jmp	0x10001d723
	cmpb	$0, 169(%r15)
	je	0x10001d6c8
	movsd	52579(%rip), %xmm1
	movsd	-88(%rbp), %xmm0
	mulsd	%xmm1, %xmm0
	mulsd	%xmm1, %xmm2
	leaq	68475(%rip), %rdx ## literal pool for: "%10.0f %% %10.0f %% "
	movl	$3, %esi
	movb	$2, %al
	movq	%r14, %rdi
	movapd	%xmm2, %xmm1
	callq	*-48(%rbp)
	movq	-48(%rbp), %rbx
	jmp	0x10001d713
	movl	88(%r15), %eax
	cmpl	$1, %eax
	leaq	68750(%rip), %rcx ## literal pool for: "us"
	leaq	68746(%rip), %rdx ## literal pool for: "ns"
	cmoveq	%rcx, %rdx
	cmpl	$2, %eax
	leaq	68726(%rip), %rcx ## literal pool for: "ms"
	cmovneq	%rdx, %rcx
	leaq	68427(%rip), %rdx ## literal pool for: "%10.0f %s %10.0f %s "
	movl	$3, %esi
	movb	$2, %al
	movq	%r14, %rdi
	movsd	-88(%rbp), %xmm0
	movq	%rcx, %r8
	movapd	%xmm2, %xmm1
	callq	*-48(%rbp)
	movq	-48(%rbp), %rbx
	movb	169(%r15), %al
	orb	168(%r15), %al
	jne	0x10001d73f
	movq	80(%r15), %rcx
	leaq	68392(%rip), %rdx ## literal pool for: "%10lld"
	movl	$6, %esi
	xorl	%eax, %eax
	movq	%r14, %rdi
	callq	*-48(%rbp)
	movq	-48(%rbp), %rbx
	movq	%r12, -152(%rbp)
	movq	%r14, -88(%rbp)
	movq	176(%r15), %r14
	leaq	184(%r15), %r12
	cmpq	%r12, %r14
	je	0x10001d8dc
	nopw	%cs:(%rax,%rax)
	movzbl	32(%r14), %r13d
	testb	$1, %r13b
	jne	0x10001d780
	shrq	%r13
	jmp	0x10001d784
	movq	40(%r14), %r13
	cmpq	$10, %r13
	movl	$10, %eax
	cmovbeq	%rax, %r13
	movsd	56(%r14), %xmm0
	leaq	-80(%rbp), %rdi
	movsd	52293(%rip), %xmm1
	callq	__ZN9benchmark19HumanReadableNumberEdd ## benchmark::HumanReadableNumber(double, double)
	movq	-152(%rbp), %rax
	testb	$2, 24(%rax)
	movl	64(%r14), %eax
	jne	0x10001d7e0
	leaq	32(%r14), %rcx
	testb	$1, %al
	leaq	68259(%rip), %r9 ## literal pool for: "/s"
	leaq	67296(%rip), %rax ## literal pool for: ""
	cmoveq	%rax, %r9
	testb	$1, (%rcx)
	jne	0x10001d810
	incq	%rcx
	jmp	0x10001d814
	nopl	(%rax,%rax)
	testb	$1, %al
	jne	0x10001d840
	testb	$1, -80(%rbp)
	movq	-64(%rbp), %r8
	leaq	-79(%rbp), %rax
	cmoveq	%rax, %r8
	xorl	%esi, %esi
	xorl	%eax, %eax
	movq	-88(%rbp), %rdi
	leaq	68193(%rip), %rdx ## literal pool for: " %*s"
	movq	%r13, %rcx
	callq	*-48(%rbp)
	jmp	0x10001d869
	nopl	(%rax,%rax)
	movq	48(%r14), %rcx
	testb	$1, -80(%rbp)
	movq	-64(%rbp), %r8
	leaq	-79(%rbp), %rax
	cmoveq	%rax, %r8
	xorl	%esi, %esi
	xorl	%eax, %eax
	movq	-88(%rbp), %rdi
	leaq	68153(%rip), %rdx ## literal pool for: " %s=%s%s"
	callq	*-48(%rbp)
	jmp	0x10001d869
	nopl	(%rax,%rax)
	addq	$-2, %r13
	testb	$1, -80(%rbp)
	movq	-64(%rbp), %r8
	leaq	-79(%rbp), %rax
	cmoveq	%rax, %r8
	xorl	%esi, %esi
	xorl	%eax, %eax
	movq	-88(%rbp), %rdi
	leaq	68090(%rip), %rdx ## literal pool for: " %*s/s"
	movq	%r13, %rcx
	callq	*-48(%rbp)
	testb	$1, -80(%rbp)
	je	0x10001d878
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	8(%r14), %rcx
	testq	%rcx, %rcx
	je	0x10001d8a0
	movq	-48(%rbp), %rbx
	nopw	%cs:(%rax,%rax)
	movq	%rcx, %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	jne	0x10001d890
	jmp	0x10001d8d0
	nopl	(%rax)
	movq	16(%r14), %rax
	cmpq	%r14, (%rax)
	movq	-48(%rbp), %rbx
	je	0x10001d8d0
	addq	$16, %r14
	nopw	%cs:(%rax,%rax)
	movq	(%r14), %rcx
	movq	16(%rcx), %rax
	cmpq	%rcx, (%rax)
	leaq	16(%rcx), %r14
	jne	0x10001d8c0
	cmpq	%r12, %rax
	movq	%rax, %r14
	jne	0x10001d770
	movzbl	-144(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	-136(%rbp), %rcx
	testq	%rcx, %rcx
	movq	-88(%rbp), %r14
	je	0x10001d927
	testb	$1, %al
	leaq	-143(%rbp), %r8
	cmovneq	-128(%rbp), %r8
	leaq	67923(%rip), %rdx ## literal pool for: " %*s"
	movl	$0, %esi
	movl	$13, %ecx
	xorl	%eax, %eax
	movq	%r14, %rdi
	callq	*-48(%rbp)
	movq	-48(%rbp), %rbx
	movzbl	-112(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	-104(%rbp), %rcx
	testq	%rcx, %rcx
	je	0x10001d965
	testb	$1, %al
	leaq	-111(%rbp), %r8
	cmovneq	-96(%rbp), %r8
	leaq	67861(%rip), %rdx ## literal pool for: " %*s"
	movl	$0, %esi
	movl	$18, %ecx
	xorl	%eax, %eax
	movq	%r14, %rdi
	callq	*-48(%rbp)
	movq	-48(%rbp), %rbx
	movzbl	24(%r15), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	32(%r15), %rcx
	testq	%rcx, %rcx
	je	0x10001d99f
	leaq	24(%r15), %rcx
	incq	%rcx
	testb	$1, %al
	cmovneq	40(%r15), %rcx
	leaq	67812(%rip), %rdx ## literal pool for: " %s"
	xorl	%esi, %esi
	xorl	%eax, %eax
	movq	%r14, %rdi
	callq	*-48(%rbp)
	movq	-48(%rbp), %rbx
	leaq	65850(%rip), %rdx ## literal pool for: "\n"
	xorl	%esi, %esi
	xorl	%eax, %eax
	movq	%r14, %rdi
	callq	*%rbx
	testb	$1, -112(%rbp)
	je	0x10001d9be
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -144(%rbp)
	je	0x10001d9d0
	movq	-128(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$136, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	jmp	0x10001da6c
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rbx
	testb	$1, -176(%rbp)
	je	0x10001da6f
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -112(%rbp)
	jne	0x10001da75
	jmp	0x10001da7e
	jmp	0x10001da6c
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	je	0x10001da7e
	movq	-64(%rbp), %rdi
	jmp	0x10001da79
	movq	%rax, %rbx
	testb	$1, -144(%rbp)
	jne	0x10001da87
	jmp	0x10001da90
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	jne	0x10001da5b
	jmp	0x10001da6f
	jmp	0x10001da6c
	jmp	0x10001da6c
	jmp	0x10001da6c
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	jne	0x10001da5b
	jmp	0x10001da6f
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	je	0x10001da6f
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -112(%rbp)
	jne	0x10001da75
	jmp	0x10001da7e
	movq	%rax, %rbx
	testb	$1, -112(%rbp)
	je	0x10001da7e
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -144(%rbp)
	je	0x10001da90
	movq	-128(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax,%rax)
__ZN9benchmarkL16IgnoreColorPrintERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_8LogColorEPKcz:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	subq	$248, %rsp
	movq	%rdi, %rbx
	testb	%al, %al
	je	0x10001dae2
	movaps	%xmm0, -208(%rbp)
	movaps	%xmm1, -192(%rbp)
	movaps	%xmm2, -176(%rbp)
	movaps	%xmm3, -160(%rbp)
	movaps	%xmm4, -144(%rbp)
	movaps	%xmm5, -128(%rbp)
	movaps	%xmm6, -112(%rbp)
	movaps	%xmm7, -96(%rbp)
	movq	%r9, -216(%rbp)
	movq	%r8, -224(%rbp)
	movq	%rcx, -232(%rbp)
	movq	71474(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	movq	%rax, -16(%rbp)
	leaq	-256(%rbp), %rax
	movq	%rax, -32(%rbp)
	leaq	16(%rbp), %rax
	movq	%rax, -40(%rbp)
	movl	$48, -44(%rbp)
	movl	$24, -48(%rbp)
	leaq	-72(%rbp), %rdi
	leaq	-48(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdx
	callq	__ZN9benchmark12FormatStringEPKcP13__va_list_tag ## benchmark::FormatString(char const*, __va_list_tag*)
	movzbl	-72(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	leaq	-71(%rbp), %rsi
	cmovneq	-56(%rbp), %rsi
	testb	%al, %al
	cmovneq	-64(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -72(%rbp)
	je	0x10001db6c
	movq	-56(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	71357(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	cmpq	-16(%rbp), %rax
	jne	0x10001db86
	addq	$248, %rsp
	popq	%rbx
	popq	%rbp
	retq
	callq	0x1000297a0 ## symbol stub for: ___stack_chk_fail
	movq	%rax, %rbx
	testb	$1, -72(%rbp)
	je	0x10001db9d
	movq	-56(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark6StrCatIJRA2_KcNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERA4_S1_EEESA_DpOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$312, %rsp
	movq	%rcx, -72(%rbp)
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	%rdi, -80(%rbp)
	leaq	-232(%rbp), %rdi
	leaq	-336(%rbp), %r13
	movq	70873(%rip), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, -344(%rbp)
	addq	$64, %rax
	movq	%rax, -232(%rbp)
	movq	%r13, %rsi
	callq	0x100029710 ## symbol stub for: __ZNSt3__18ios_base4initEPv
	movq	$0, -96(%rbp)
	movl	$4294967295, -88(%rbp)
	movq	71061(%rip), %r15
	leaq	24(%r15), %r12
	movq	%r12, -344(%rbp)
	addq	$64, %r15
	movq	%r15, -232(%rbp)
	movq	%r13, %rdi
	callq	0x10002967a ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
	movq	%r13, %rdi
	movq	70957(%rip), %r13
	addq	$16, %r13
	movq	%r13, -336(%rbp)
	movq	$0, -248(%rbp)
	movq	$0, -256(%rbp)
	movq	$0, -264(%rbp)
	movq	$0, -272(%rbp)
	movl	$16, -240(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	leaq	-64(%rbp), %rsi
	callq	__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	testb	$1, -64(%rbp)
	je	0x10001dcab
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	leaq	-344(%rbp), %rdi
	movq	%r14, %rsi
	movq	%rax, %rdx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	-80(%rbp), %r14
	movzbl	(%rbx), %eax
	leaq	1(%rbx), %rsi
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	16(%rbx), %rsi
	testb	%al, %al
	cmovneq	8(%rbx), %rdx
	leaq	-344(%rbp), %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	-72(%rbp), %rbx
	movq	%rbx, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	leaq	-344(%rbp), %rdi
	movq	%rbx, %rsi
	movq	%rax, %rdx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%r14, %rdi
	leaq	-336(%rbp), %rsi
	callq	__ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str() const
	movq	%r12, -344(%rbp)
	movq	%r15, -232(%rbp)
	movq	%r13, -336(%rbp)
	testb	$1, -272(%rbp)
	je	0x10001dd47
	movq	-256(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-336(%rbp), %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	70566(%rip), %rsi
	addq	$8, %rsi
	leaq	-344(%rbp), %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	leaq	-232(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rax
	addq	$312, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x10001ddca
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -272(%rbp)
	jne	0x10001ddd3
	jmp	0x10001dddf
	movq	%rax, %rbx
	jmp	0x10001ddeb
	movq	%rax, %rbx
	jmp	0x10001de02
	movq	%rax, %rbx
	movq	%r12, -344(%rbp)
	movq	%r15, -232(%rbp)
	movq	%r13, -336(%rbp)
	testb	$1, -272(%rbp)
	je	0x10001dddf
	movq	-256(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-336(%rbp), %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	70414(%rip), %rsi
	addq	$8, %rsi
	leaq	-344(%rbp), %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	leaq	-232(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark6StrCatIJRA2_KcNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERA9_S1_EEESA_DpOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$312, %rsp
	movq	%rcx, -72(%rbp)
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	%rdi, -80(%rbp)
	leaq	-232(%rbp), %rdi
	leaq	-336(%rbp), %r13
	movq	70249(%rip), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, -344(%rbp)
	addq	$64, %rax
	movq	%rax, -232(%rbp)
	movq	%r13, %rsi
	callq	0x100029710 ## symbol stub for: __ZNSt3__18ios_base4initEPv
	movq	$0, -96(%rbp)
	movl	$4294967295, -88(%rbp)
	movq	70437(%rip), %r15
	leaq	24(%r15), %r12
	movq	%r12, -344(%rbp)
	addq	$64, %r15
	movq	%r15, -232(%rbp)
	movq	%r13, %rdi
	callq	0x10002967a ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
	movq	%r13, %rdi
	movq	70333(%rip), %r13
	addq	$16, %r13
	movq	%r13, -336(%rbp)
	movq	$0, -248(%rbp)
	movq	$0, -256(%rbp)
	movq	$0, -264(%rbp)
	movq	$0, -272(%rbp)
	movl	$16, -240(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	leaq	-64(%rbp), %rsi
	callq	__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	testb	$1, -64(%rbp)
	je	0x10001df1b
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	leaq	-344(%rbp), %rdi
	movq	%r14, %rsi
	movq	%rax, %rdx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	-80(%rbp), %r14
	movzbl	(%rbx), %eax
	leaq	1(%rbx), %rsi
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	16(%rbx), %rsi
	testb	%al, %al
	cmovneq	8(%rbx), %rdx
	leaq	-344(%rbp), %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	-72(%rbp), %rbx
	movq	%rbx, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	leaq	-344(%rbp), %rdi
	movq	%rbx, %rsi
	movq	%rax, %rdx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%r14, %rdi
	leaq	-336(%rbp), %rsi
	callq	__ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str() const
	movq	%r12, -344(%rbp)
	movq	%r15, -232(%rbp)
	movq	%r13, -336(%rbp)
	testb	$1, -272(%rbp)
	je	0x10001dfb7
	movq	-256(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-336(%rbp), %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	69942(%rip), %rsi
	addq	$8, %rsi
	leaq	-344(%rbp), %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	leaq	-232(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rax
	addq	$312, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x10001e03a
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -272(%rbp)
	jne	0x10001e043
	jmp	0x10001e04f
	movq	%rax, %rbx
	jmp	0x10001e05b
	movq	%rax, %rbx
	jmp	0x10001e072
	movq	%rax, %rbx
	movq	%r12, -344(%rbp)
	movq	%r15, -232(%rbp)
	movq	%r13, -336(%rbp)
	testb	$1, -272(%rbp)
	je	0x10001e04f
	movq	-256(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-336(%rbp), %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	69790(%rip), %rsi
	addq	$8, %rsi
	leaq	-344(%rbp), %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	leaq	-232(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark15ConsoleReporterD1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	leaq	71488(%rip), %rax
	movq	%rax, (%rbx)
	leaq	40(%rbx), %rdi
	movq	48(%rbx), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	__ZN9benchmark17BenchmarkReporterD2Ev ## benchmark::BenchmarkReporter::~BenchmarkReporter()
	nop
__ZN9benchmark15ConsoleReporterD0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	leaq	71440(%rip), %rax
	movq	%rax, (%rbx)
	leaq	40(%rbx), %rdi
	movq	48(%rbx), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	%rbx, %rdi
	callq	__ZN9benchmark17BenchmarkReporterD2Ev ## benchmark::BenchmarkReporter::~BenchmarkReporter()
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopw	%cs:(%rax,%rax)
__GLOBAL__sub_I_console_reporter.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark8internal17InitializeStreamsEv ## benchmark::internal::InitializeStreams()
	nop
	nop
	nop
	nop
	nop
	nop
__ZN9benchmark8internal6FinishERKNS_7CounterExdd:
	pushq	%rbp
	movq	%rsp, %rbp
	movapd	%xmm0, %xmm2
	movsd	(%rdi), %xmm0
	movl	8(%rdi), %eax
	testb	$1, %al
	jne	0x10001e139
	testb	$2, %al
	jne	0x10001e141
	testb	$4, %al
	xorps	%xmm1, %xmm1
	cvtsi2sdq	%rsi, %xmm1
	jne	0x10001e151
	testb	$8, %al
	jne	0x10001e159
	popq	%rbp
	retq
	divsd	%xmm2, %xmm0
	testb	$2, %al
	je	0x10001e127
	divsd	%xmm1, %xmm0
	testb	$4, %al
	xorps	%xmm1, %xmm1
	cvtsi2sdq	%rsi, %xmm1
	je	0x10001e133
	mulsd	%xmm1, %xmm0
	testb	$8, %al
	je	0x10001e137
	divsd	%xmm1, %xmm0
	popq	%rbp
	retq
	nop
__ZN9benchmark8internal6FinishEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_7CounterENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEExdd:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	(%rdi), %rax
	addq	$8, %rdi
	cmpq	%rdi, %rax
	je	0x10001e20c
	cvtsi2sdq	%rsi, %xmm2
	nopl	(%rax)
	movsd	56(%rax), %xmm3
	movl	64(%rax), %ecx
	testb	$1, %cl
	jne	0x10001e1c0
	testb	$2, %cl
	jne	0x10001e1c9
	testb	$4, %cl
	jne	0x10001e1d2
	testb	$8, %cl
	je	0x10001e1a0
	divsd	%xmm2, %xmm3
	movsd	%xmm3, 56(%rax)
	movq	8(%rax), %rdx
	testq	%rdx, %rdx
	je	0x10001e1e0
	nop
	movq	%rdx, %rcx
	movq	(%rcx), %rdx
	testq	%rdx, %rdx
	jne	0x10001e1b0
	jmp	0x10001e200
	nopl	(%rax)
	divsd	%xmm0, %xmm3
	testb	$2, %cl
	je	0x10001e192
	divsd	%xmm1, %xmm3
	testb	$4, %cl
	je	0x10001e197
	mulsd	%xmm2, %xmm3
	testb	$8, %cl
	jne	0x10001e19c
	jmp	0x10001e1a0
	nopl	(%rax)
	movq	16(%rax), %rcx
	cmpq	%rax, (%rcx)
	je	0x10001e200
	addq	$16, %rax
	nopl	(%rax)
	movq	(%rax), %rax
	movq	16(%rax), %rcx
	cmpq	%rax, (%rcx)
	leaq	16(%rax), %rax
	jne	0x10001e1f0
	cmpq	%rdi, %rcx
	movq	%rcx, %rax
	jne	0x10001e180
	popq	%rbp
	retq
	nop
__ZN9benchmark8internal9IncrementEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_7CounterENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEERKSG_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rsi, %r13
	movq	%rdi, %r14
	movq	(%r14), %rbx
	leaq	8(%r14), %r15
	leaq	8(%r13), %r12
	cmpq	%r15, %rbx
	je	0x10001e2a8
	nopw	(%rax,%rax)
	leaq	32(%rbx), %rsi
	movq	%r13, %rdi
	callq	__ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_ ## std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
	cmpq	%r12, %rax
	je	0x10001e260
	movsd	56(%rbx), %xmm0
	addsd	56(%rax), %xmm0
	movsd	%xmm0, 56(%rbx)
	movq	8(%rbx), %rcx
	testq	%rcx, %rcx
	je	0x10001e280
	nopl	(%rax)
	movq	%rcx, %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	jne	0x10001e270
	jmp	0x10001e2a0
	nopl	(%rax)
	movq	16(%rbx), %rax
	cmpq	%rbx, (%rax)
	je	0x10001e2a0
	addq	$16, %rbx
	nopl	(%rax)
	movq	(%rbx), %rcx
	movq	16(%rcx), %rax
	cmpq	%rcx, (%rax)
	leaq	16(%rcx), %rbx
	jne	0x10001e290
	cmpq	%r15, %rax
	movq	%rax, %rbx
	jne	0x10001e240
	movq	(%r13), %r13
	cmpq	%r12, %r13
	je	0x10001e367
	nopw	%cs:(%rax,%rax)
	leaq	32(%r13), %rbx
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	__ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_ ## std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
	cmpq	%r15, %rax
	je	0x10001e310
	movq	8(%r13), %rcx
	testq	%rcx, %rcx
	jne	0x10001e350
	movq	16(%r13), %rax
	cmpq	%r13, (%rax)
	je	0x10001e35b
	addq	$16, %r13
	nopw	(%rax,%rax)
	movq	(%r13), %rcx
	movq	16(%rcx), %rax
	cmpq	%rcx, (%rax)
	leaq	16(%rcx), %r13
	jne	0x10001e2f0
	jmp	0x10001e35b
	nopw	%cs:(%rax,%rax)
	movq	%rbx, -56(%rbp)
	movq	%r14, %rdi
	movq	%rbx, %rsi
	leaq	__ZNSt3__1L19piecewise_constructE(%rip), %rdx ## std::__1::piecewise_construct
	leaq	-56(%rbp), %rcx
	leaq	-48(%rbp), %r8
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_ ## std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::__emplace_unique_key_args<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>, std::__1::tuple<> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>&&, std::__1::tuple<>&&)
	movl	64(%r13), %ecx
	movl	%ecx, 64(%rax)
	movq	56(%r13), %rcx
	movq	%rcx, 56(%rax)
	movq	8(%r13), %rcx
	testq	%rcx, %rcx
	je	0x10001e2dd
	nopw	%cs:(%rax,%rax)
	movq	%rcx, %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	jne	0x10001e350
	cmpq	%r12, %rax
	movq	%rax, %r13
	jne	0x10001e2c0
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZN9benchmark8internal9SameNamesERKNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_7CounterENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEESI_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r15
	movq	%rdi, %r13
	movb	$1, %r14b
	cmpq	%r15, %r13
	je	0x10001e41d
	movq	16(%r13), %rax
	cmpq	16(%r15), %rax
	jne	0x10001e41a
	movq	(%r13), %rbx
	addq	$8, %r13
	cmpq	%r13, %rbx
	je	0x10001e41d
	leaq	8(%r15), %r12
	nopl	(%rax,%rax)
	leaq	32(%rbx), %rsi
	movq	%r15, %rdi
	callq	__ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_ ## std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
	cmpq	%r12, %rax
	je	0x10001e41a
	movq	8(%rbx), %rcx
	testq	%rcx, %rcx
	je	0x10001e3f0
	nopw	(%rax,%rax)
	movq	%rcx, %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	jne	0x10001e3e0
	jmp	0x10001e410
	nopl	(%rax)
	movq	16(%rbx), %rax
	cmpq	%rbx, (%rax)
	je	0x10001e410
	addq	$16, %rbx
	nopl	(%rax)
	movq	(%rbx), %rcx
	movq	16(%rcx), %rax
	cmpq	%rcx, (%rax)
	leaq	16(%rcx), %rbx
	jne	0x10001e400
	cmpq	%r13, %rax
	movq	%rax, %rbx
	jne	0x10001e3c0
	jmp	0x10001e41d
	xorl	%r14d, %r14d
	movl	%r14d, %eax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nop
__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_:
__ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %r14
	movq	8(%r14), %rbx
	addq	$8, %r14
	testq	%rbx, %rbx
	je	0x10001e531
	movzbl	(%rsi), %eax
	movq	%rax, %r12
	shrq	%r12
	leaq	1(%rsi), %r15
	andb	$1, %al
	cmovneq	16(%rsi), %r15
	testb	%al, %al
	cmovneq	8(%rsi), %r12
	movq	%r14, -48(%rbp)
	movq	%r14, %r13
	nopw	%cs:(%rax,%rax)
	movzbl	32(%rbx), %eax
	movq	%rax, %r14
	shrq	%r14
	testb	$1, %al
	cmovneq	40(%rbx), %r14
	cmpq	%r12, %r14
	movq	%r12, %rdx
	ja	0x10001e49c
	movq	%r14, %rdx
	testq	%rdx, %rdx
	je	0x10001e4bb
	leaq	32(%rbx), %rdi
	incq	%rdi
	testb	$1, %al
	cmovneq	48(%rbx), %rdi
	movq	%r15, %rsi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	jne	0x10001e4ce
	xorl	%ecx, %ecx
	cmpq	%r12, %r14
	seta	%dl
	movl	$4294967295, %eax
	jb	0x10001e4ce
	movb	%dl, %cl
	movl	%ecx, %eax
	leaq	8(%rbx), %rcx
	testl	%eax, %eax
	cmovnsq	%rbx, %rcx
	cmovnsq	%rbx, %r13
	movq	(%rcx), %rbx
	testq	%rbx, %rbx
	jne	0x10001e480
	movq	-48(%rbp), %r14
	cmpq	%r14, %r13
	je	0x10001e531
	movzbl	32(%r13), %eax
	movq	%rax, %rbx
	shrq	%rbx
	testb	$1, %al
	cmovneq	40(%r13), %rbx
	cmpq	%rbx, %r12
	movq	%r12, %rdx
	cmovaq	%rbx, %rdx
	testq	%rdx, %rdx
	je	0x10001e52c
	leaq	32(%r13), %rsi
	incq	%rsi
	testb	$1, %al
	cmovneq	48(%r13), %rsi
	movq	%r15, %rdi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x10001e52c
	js	0x10001e531
	jmp	0x10001e534
	cmpq	%rbx, %r12
	jae	0x10001e534
	movq	%r14, %r13
	movq	%r13, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__GLOBAL__sub_I_counter.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark8internal17InitializeStreamsEv ## benchmark::internal::InitializeStreams()
	nop
	nop
	nop
	nop
	nop
	nop
__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %r14
	movq	(%r14), %r15
	testq	%r15, %r15
	je	0x10001e5a0
	movq	8(%r14), %rax
	cmpq	%r15, %rax
	je	0x10001e5ab
	nop
	leaq	-24(%rax), %rbx
	testb	$1, -24(%rax)
	je	0x10001e593
	movq	-8(%rax), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r15
	movq	%rbx, %rax
	jne	0x10001e580
	movq	(%r14), %rdi
	jmp	0x10001e5ae
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r15, %rdi
	movq	%r15, 8(%r14)
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopw	%cs:(%rax,%rax)
__ZN9benchmark11CSVReporter13ReportContextERKNS_17BenchmarkReporter7ContextE:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	16(%rdi), %rdi
	callq	__ZN9benchmark17BenchmarkReporter17PrintBasicContextEPNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_7ContextE ## benchmark::BenchmarkReporter::PrintBasicContext(std::__1::basic_ostream<char, std::__1::char_traits<char> >*, benchmark::BenchmarkReporter::Context const&)
	movb	$1, %al
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZN9benchmark11CSVReporter10ReportRunsERKNSt3__16vectorINS_17BenchmarkReporter3RunENS1_9allocatorIS4_EEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	cmpb	$0, 24(%rdi)
	movq	(%rsi), %r15
	movq	8(%rsi), %rax
	movq	%rax, -56(%rbp)
	movq	%rdi, -48(%rbp)
	movq	%rsi, -64(%rbp)
	je	0x10001e763
	cmpq	%rax, %r15
	je	0x10001e94d
	movq	68082(%rip), %rbx ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	68571(%rip), %r14 ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	nopw	%cs:(%rax,%rax)
	movq	176(%r15), %r12
	leaq	184(%r15), %r13
	cmpq	%r13, %r12
	je	0x10001e74d
	nopw	(%rax,%rax)
	movb	(%rbx), %al
	testb	%al, %al
	jne	0x10001e681
	movq	%rbx, %rdi
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10001e681
	movq	$0, (%r14)
	movq	%rbx, %rdi
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	(%r14), %rdi
	testq	%rdi, %rdi
	je	0x10001e700
	movl	$42, %edx
	leaq	64591(%rip), %rsi ## literal pool for: "All counters must be present in each run. "
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%r14), %rdi
	testq	%rdi, %rdi
	je	0x10001e700
	movl	$15, %edx
	leaq	64609(%rip), %rsi ## literal pool for: "Counter named \""
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%r14), %rdi
	testq	%rdi, %rdi
	je	0x10001e700
	leaq	32(%r12), %rsi
	movzbl	32(%r12), %eax
	incq	%rsi
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	40(%r12), %rdx
	testb	%al, %al
	cmovneq	48(%r12), %rsi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%r14), %rdi
	testq	%rdi, %rdi
	je	0x10001e700
	movl	$50, %edx
	leaq	64551(%rip), %rsi ## literal pool for: "\" was not in a run after being added to the header"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	nopl	(%rax)
	movq	8(%r12), %rcx
	testq	%rcx, %rcx
	je	0x10001e720
	nopw	(%rax,%rax)
	movq	%rcx, %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	jne	0x10001e710
	jmp	0x10001e741
	nopl	(%rax)
	movq	16(%r12), %rax
	cmpq	%r12, (%rax)
	je	0x10001e741
	addq	$16, %r12
	nop
	movq	(%r12), %rcx
	movq	16(%rcx), %rax
	cmpq	%rcx, (%rax)
	leaq	16(%rcx), %r12
	jne	0x10001e730
	cmpq	%r13, %rax
	movq	%rax, %r12
	jne	0x10001e660
	addq	$200, %r15
	cmpq	-56(%rbp), %r15
	jne	0x10001e640
	jmp	0x10001e94d
	movq	8(%rdi), %r13
	cmpq	%rax, %r15
	je	0x10001e809
	movq	-48(%rbp), %rax
	leaq	32(%rax), %r14
	nopl	(%rax,%rax)
	movq	176(%r15), %rbx
	leaq	184(%r15), %r12
	cmpq	%r12, %rbx
	je	0x10001e7f8
	nopw	%cs:(%rax,%rax)
	leaq	32(%rbx), %rsi
	movq	%r14, %rdi
	movq	%rsi, %rdx
	callq	__ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ ## std::__1::pair<std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long>, bool> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_unique_key_args<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	movq	8(%rbx), %rcx
	testq	%rcx, %rcx
	je	0x10001e7d0
	nopl	(%rax,%rax)
	movq	%rcx, %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	jne	0x10001e7c0
	jmp	0x10001e7f0
	nopl	(%rax)
	movq	16(%rbx), %rax
	cmpq	%rbx, (%rax)
	je	0x10001e7f0
	addq	$16, %rbx
	nopl	(%rax)
	movq	(%rbx), %rcx
	movq	16(%rcx), %rax
	cmpq	%rcx, (%rax)
	leaq	16(%rcx), %rbx
	jne	0x10001e7e0
	cmpq	%r12, %rax
	movq	%rax, %rbx
	jne	0x10001e7a0
	addq	$200, %r15
	cmpq	-56(%rbp), %r15
	jne	0x10001e780
	movq	__ZN9benchmark12_GLOBAL__N_18elementsE(%rip), %rbx ## benchmark::(anonymous namespace)::elements
	cmpq	73617(%rip), %rbx
	movq	-48(%rbp), %r15
	je	0x10001e888
	addq	$24, %rbx
	leaq	64181(%rip), %r14 ## literal pool for: ","
	nopl	(%rax,%rax)
	movzbl	-24(%rbx), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-16(%rbx), %rdx
	testb	%al, %al
	je	0x10001e850
	movq	-8(%rbx), %rsi
	jmp	0x10001e854
	nopl	(%rax,%rax)
	leaq	-23(%rbx), %rsi
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	cmpq	73541(%rip), %rbx
	movq	%rbx, %rax
	je	0x10001e87f
	movl	$1, %edx
	movq	%r13, %rdi
	movq	%r14, %rsi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	73513(%rip), %rax
	cmpq	%rax, %rbx
	leaq	24(%rbx), %rbx
	jne	0x10001e830
	movq	32(%r15), %rbx
	leaq	40(%r15), %r15
	cmpq	%r15, %rbx
	je	0x10001e931
	leaq	64066(%rip), %r12 ## literal pool for: "\""
	movl	$2, %edx
	movq	%r13, %rdi
	leaq	64048(%rip), %rsi ## literal pool for: ",\""
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	8(%rbx), %rcx
	testq	%rcx, %rcx
	je	0x10001e8d0
	nopl	(%rax)
	movq	%rcx, %r14
	movq	(%r14), %rcx
	testq	%rcx, %rcx
	jne	0x10001e8c0
	jmp	0x10001e8f0
	nopl	(%rax)
	movq	16(%rbx), %r14
	cmpq	%rbx, (%r14)
	je	0x10001e8f0
	leaq	16(%rbx), %rcx
	nopl	(%rax)
	movq	(%rcx), %rcx
	movq	16(%rcx), %r14
	cmpq	%rcx, (%r14)
	leaq	16(%rcx), %rcx
	jne	0x10001e8e0
	movzbl	32(%rbx), %ecx
	leaq	33(%rbx), %rsi
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	cmovneq	40(%rbx), %rdx
	testb	%cl, %cl
	cmovneq	48(%rbx), %rsi
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movl	$1, %edx
	movq	%rax, %rdi
	movq	%r12, %rsi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	cmpq	%r15, %r14
	movq	%r14, %rbx
	jne	0x10001e8a0
	leaq	61864(%rip), %rsi ## literal pool for: "\n"
	movl	$1, %edx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	-48(%rbp), %rax
	movb	$1, 24(%rax)
	movq	-64(%rbp), %rax
	movq	(%rax), %rbx
	movq	8(%rax), %r14
	cmpq	%r14, %rbx
	movq	-48(%rbp), %r15
	je	0x10001e987
	nopw	%cs:(%rax,%rax)
	movq	%r15, %rdi
	movq	%rbx, %rsi
	callq	__ZN9benchmark11CSVReporter12PrintRunDataERKNS_17BenchmarkReporter3RunE ## benchmark::CSVReporter::PrintRunData(benchmark::BenchmarkReporter::Run const&)
	addq	$200, %rbx
	cmpq	%rbx, %r14
	jne	0x10001e970
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZN9benchmark11CSVReporter12PrintRunDataERKNS_17BenchmarkReporter3RunE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$120, %rsp
	movq	%rsi, %r12
	movq	%rdi, %r14
	movq	8(%rdi), %r13
	leaq	-160(%rbp), %rbx
	movq	%rbx, %rdi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movw	$8706, -64(%rbp)
	movb	$0, -62(%rbp)
	movaps	%xmm0, -96(%rbp)
	movq	$0, -80(%rbp)
	movb	$4, -96(%rbp)
	movw	$8738, -95(%rbp)
	movb	$0, -93(%rbp)
	leaq	-64(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZN9benchmark10ReplaceAllEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKS6_S9_ ## benchmark::ReplaceAll(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	testb	$1, -96(%rbp)
	je	0x10001ea1c
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x10001ea2b
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movb	$34, -64(%rbp)
	leaq	-64(%rbp), %rsi
	movl	$1, %edx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-160(%rbp), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	leaq	-159(%rbp), %rsi
	cmovneq	-144(%rbp), %rsi
	testb	%cl, %cl
	cmovneq	-152(%rbp), %rdx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	63706(%rip), %rsi ## literal pool for: "\","
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	cmpb	$0, 48(%r12)
	je	0x10001eaf8
	movq	72980(%rip), %rax
	subq	__ZN9benchmark12_GLOBAL__N_18elementsE(%rip), %rax ## benchmark::(anonymous namespace)::elements
	sarq	$3, %rax
	movabsq	$-6148914691236517205, %rbx
	imulq	%rax, %rbx
	leaq	-3(%rbx), %r14
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	cmpq	$-16, %r14
	jae	0x10001eff9
	movq	%r13, -136(%rbp)
	cmpq	$23, %r14
	jae	0x10001ebd3
	movl	%r14d, %eax
	addb	%al, %al
	movb	%al, -64(%rbp)
	leaq	-63(%rbp), %r15
	testq	%r14, %r14
	movq	%r15, %r13
	jne	0x10001ebfa
	jmp	0x10001ec0a
	cmpb	$0, 168(%r12)
	jne	0x10001eb1b
	cmpb	$0, 169(%r12)
	jne	0x10001eb1b
	movq	80(%r12), %rsi
	movq	%r13, %rdi
	callq	0x10002965c ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEx
	leaq	63419(%rip), %rsi ## literal pool for: ","
	movl	$1, %edx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%r12, %rdi
	callq	__ZNK9benchmark17BenchmarkReporter3Run19GetAdjustedRealTimeEv ## benchmark::BenchmarkReporter::Run::GetAdjustedRealTime() const
	movq	%r13, %rdi
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	leaq	63383(%rip), %rsi ## literal pool for: ","
	movl	$1, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%r12, %rdi
	callq	__ZNK9benchmark17BenchmarkReporter3Run18GetAdjustedCPUTimeEv ## benchmark::BenchmarkReporter::Run::GetAdjustedCPUTime() const
	movq	%r13, %rdi
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	leaq	63347(%rip), %rsi ## literal pool for: ","
	movl	$1, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	cmpb	$0, 168(%r12)
	je	0x10001ed42
	movl	136(%r12), %esi
	leaq	-64(%rbp), %rdi
	callq	__ZN9benchmark13GetBigOStringENS_4BigOE ## benchmark::GetBigOString(benchmark::BigO)
	movzbl	-64(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	leaq	-63(%rbp), %rsi
	cmovneq	-48(%rbp), %rsi
	testb	%al, %al
	cmovneq	-56(%rbp), %rdx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -64(%rbp)
	je	0x10001ed82
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x10001ed82
	addq	$13, %rbx
	andq	$-16, %rbx
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r13
	movq	%r13, -48(%rbp)
	orq	$1, %rbx
	movq	%rbx, -64(%rbp)
	movq	%r14, -56(%rbp)
	leaq	-63(%rbp), %r15
	movl	$44, %esi
	movq	%r13, %rdi
	movq	%r14, %rdx
	callq	0x10002982a ## symbol stub for: _memset
	movb	$0, (%r13,%r14)
	movzbl	-64(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-56(%rbp), %rdx
	testb	%al, %al
	cmovneq	-48(%rbp), %r15
	movq	-136(%rbp), %rbx
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -64(%rbp)
	je	0x10001ec49
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	63237(%rip), %rsi ## literal pool for: "true,"
	movl	$5, %edx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	addq	$56, %r12
	leaq	-64(%rbp), %rdi
	movq	%r12, %rsi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -96(%rbp)
	movq	$0, -80(%rbp)
	movw	$8706, -96(%rbp)
	movb	$0, -94(%rbp)
	movaps	%xmm0, -128(%rbp)
	movq	$0, -112(%rbp)
	movb	$4, -128(%rbp)
	movw	$8738, -127(%rbp)
	movb	$0, -125(%rbp)
	leaq	-64(%rbp), %rdi
	leaq	-96(%rbp), %rsi
	leaq	-128(%rbp), %rdx
	callq	__ZN9benchmark10ReplaceAllEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKS6_S9_ ## benchmark::ReplaceAll(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	testb	$1, -128(%rbp)
	je	0x10001ecc0
	movq	-112(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -96(%rbp)
	je	0x10001eccf
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movb	$34, -96(%rbp)
	leaq	-96(%rbp), %rsi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-64(%rbp), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	leaq	-63(%rbp), %rsi
	cmovneq	-48(%rbp), %rsi
	testb	%cl, %cl
	cmovneq	-56(%rbp), %rdx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	63051(%rip), %rsi ## literal pool for: "\"\n"
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -64(%rbp)
	je	0x10001efd5
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -160(%rbp)
	jne	0x10001efde
	jmp	0x10001efea
	cmpb	$0, 169(%r12)
	jne	0x10001ed82
	movl	88(%r12), %eax
	cmpl	$1, %eax
	leaq	62984(%rip), %rcx ## literal pool for: "us"
	leaq	62980(%rip), %rdx ## literal pool for: "ns"
	cmoveq	%rcx, %rdx
	cmpl	$2, %eax
	leaq	62960(%rip), %rsi ## literal pool for: "ms"
	cmovneq	%rdx, %rsi
	movl	$2, %edx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	62804(%rip), %rsi ## literal pool for: ","
	movl	$1, %edx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movsd	112(%r12), %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jbe	0x10001edae
	movq	%r13, %rdi
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	leaq	62760(%rip), %rsi ## literal pool for: ","
	movl	$1, %edx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movsd	120(%r12), %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jbe	0x10001edda
	movq	%r13, %rdi
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	leaq	62716(%rip), %rsi ## literal pool for: ","
	movl	$1, %edx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	24(%r12), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	32(%r12), %rcx
	testq	%rcx, %rcx
	je	0x10001eed7
	leaq	24(%r12), %rsi
	leaq	-64(%rbp), %rdi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -96(%rbp)
	movq	$0, -80(%rbp)
	movw	$8706, -96(%rbp)
	movb	$0, -94(%rbp)
	movaps	%xmm0, -128(%rbp)
	movq	$0, -112(%rbp)
	movb	$4, -128(%rbp)
	movw	$8738, -127(%rbp)
	movb	$0, -125(%rbp)
	leaq	-64(%rbp), %rdi
	leaq	-96(%rbp), %rsi
	leaq	-128(%rbp), %rdx
	callq	__ZN9benchmark10ReplaceAllEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKS6_S9_ ## benchmark::ReplaceAll(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	testb	$1, -128(%rbp)
	je	0x10001ee6c
	movq	-112(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -96(%rbp)
	je	0x10001ee7b
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	62560(%rip), %rsi ## literal pool for: "\""
	movl	$1, %edx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-64(%rbp), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	leaq	-63(%rbp), %rsi
	cmovneq	-48(%rbp), %rsi
	testb	%cl, %cl
	cmovneq	-56(%rbp), %rdx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	62503(%rip), %rsi ## literal pool for: "\""
	movl	$1, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -64(%rbp)
	je	0x10001eed7
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	62592(%rip), %rsi ## literal pool for: ",,"
	movl	$2, %edx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	32(%r14), %r15
	addq	$40, %r14
	movq	%r14, -136(%rbp)
	cmpq	%r14, %r15
	je	0x10001efc0
	leaq	176(%r12), %r14
	addq	$184, %r12
	nopw	%cs:(%rax,%rax)
	leaq	32(%r15), %rsi
	movq	%r14, %rdi
	callq	__ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_ ## std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
	movq	%rax, %rbx
	cmpq	%r12, %rbx
	je	0x10001ef70
	movl	$1, %edx
	movq	%r13, %rdi
	leaq	62362(%rip), %rsi ## literal pool for: ","
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movsd	56(%rbx), %xmm0
	movq	%rax, %rdi
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	movq	8(%r15), %rcx
	testq	%rcx, %rcx
	je	0x10001ef90
	nop
	movq	%rcx, %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	jne	0x10001ef60
	jmp	0x10001efb0
	nopl	(%rax)
	movl	$1, %edx
	movq	%r13, %rdi
	leaq	62302(%rip), %rsi ## literal pool for: ","
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	jmp	0x10001ef55
	nopw	%cs:(%rax,%rax)
	movq	16(%r15), %rax
	cmpq	%r15, (%rax)
	je	0x10001efb0
	addq	$16, %r15
	nopl	(%rax)
	movq	(%r15), %rcx
	movq	16(%rcx), %rax
	cmpq	%rcx, (%rax)
	leaq	16(%rcx), %r15
	jne	0x10001efa0
	cmpq	-136(%rbp), %rax
	movq	%rax, %r15
	jne	0x10001ef20
	movb	$10, -64(%rbp)
	leaq	-64(%rbp), %rsi
	movl	$1, %edx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -160(%rbp)
	je	0x10001efea
	movq	-144(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$120, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	leaq	-64(%rbp), %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	testb	$1, -128(%rbp)
	jne	0x10001f05e
	jmp	0x10001f096
	movq	%rax, %rbx
	testb	$1, -160(%rbp)
	je	0x10001f0ab
	jmp	0x10001f0fb
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x10001f0a2
	jmp	0x10001f0cd
	movq	%rax, %rbx
	testb	$1, -160(%rbp)
	je	0x10001f0ab
	jmp	0x10001f0fb
	movq	%rax, %rbx
	testb	$1, -160(%rbp)
	je	0x10001f0ab
	jmp	0x10001f0fb
	movq	%rax, %rbx
	testb	$1, -128(%rbp)
	je	0x10001f096
	movq	-112(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -96(%rbp)
	je	0x10001f09c
	jmp	0x10001f0b3
	movq	%rax, %rbx
	testb	$1, -160(%rbp)
	je	0x10001f0ab
	jmp	0x10001f0fb
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x10001f0a2
	jmp	0x10001f0cd
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x10001f0a2
	jmp	0x10001f0cd
	movq	%rax, %rbx
	testb	$1, -96(%rbp)
	jne	0x10001f0b3
	testb	$1, -64(%rbp)
	jne	0x10001f0cd
	testb	$1, -160(%rbp)
	jne	0x10001f0fb
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x10001f0a2
	jmp	0x10001f0cd
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x10001f0a2
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -160(%rbp)
	je	0x10001f0ab
	jmp	0x10001f0fb
	movq	%rax, %rbx
	testb	$1, -160(%rbp)
	je	0x10001f0ab
	jmp	0x10001f0fb
	movq	%rax, %rbx
	testb	$1, -160(%rbp)
	je	0x10001f0ab
	movq	-144(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nop
__ZN9benchmark11CSVReporterD1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	leaq	67376(%rip), %rax
	movq	%rax, (%rbx)
	leaq	32(%rbx), %rdi
	movq	40(%rbx), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	__ZN9benchmark17BenchmarkReporterD2Ev ## benchmark::BenchmarkReporter::~BenchmarkReporter()
	nop
__ZN9benchmark11CSVReporterD0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	leaq	67328(%rip), %rax
	movq	%rax, (%rbx)
	leaq	32(%rbx), %rdi
	movq	40(%rbx), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	movq	%rbx, %rdi
	callq	__ZN9benchmark17BenchmarkReporterD2Ev ## benchmark::BenchmarkReporter::~BenchmarkReporter()
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopw	%cs:(%rax,%rax)
__ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$16, %rsp
	movq	%rdx, %r12
	movq	%rsi, %rax
	movq	%rdi, %r14
	leaq	-40(%rbp), %rsi
	movq	%rax, %rdx
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_ ## std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	movq	%rax, %r15
	movq	(%r15), %rbx
	testq	%rbx, %rbx
	je	0x10001f1b3
	xorl	%edx, %edx
	jmp	0x10001f20b
	movl	$56, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	leaq	32(%rbx), %rdi
	movq	%r12, %rsi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	movq	-40(%rbp), %rax
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	movq	%rax, 16(%rbx)
	movq	%rbx, (%r15)
	movq	(%r14), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	0x10001f1f9
	movq	%rax, (%r14)
	movq	(%r15), %rsi
	jmp	0x10001f1fc
	movq	%rbx, %rsi
	movq	8(%r14), %rdi
	callq	__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ ## void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
	incq	16(%r14)
	movb	$1, %dl
	movq	%rbx, %rax
	addq	$16, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nop
__GLOBAL__sub_I_csv_reporter.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	subq	$248, %rsp
	movq	65513(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	movq	%rax, -32(%rbp)
	callq	__ZN9benchmark8internal17InitializeStreamsEv ## benchmark::internal::InitializeStreams()
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -272(%rbp)
	movaps	%xmm0, -256(%rbp)
	movb	$8, -272(%rbp)
	movl	$1701667182, -271(%rbp)
	movb	$0, -267(%rbp)
	movq	$0, -240(%rbp)
	movq	$0, -232(%rbp)
	movb	$20, -248(%rbp)
	movabsq	$8028075772644521065, %rax
	movq	%rax, -247(%rbp)
	movw	$29550, -239(%rbp)
	movb	$0, -237(%rbp)
	movaps	%xmm0, -224(%rbp)
	movq	$0, -208(%rbp)
	movb	$18, -224(%rbp)
	movabsq	$7883960575877801330, %rax
	movq	%rax, -223(%rbp)
	movb	$101, -215(%rbp)
	movb	$0, -214(%rbp)
	movq	$0, -184(%rbp)
	movq	$0, -192(%rbp)
	movq	$0, -200(%rbp)
	movb	$16, -200(%rbp)
	movabsq	$7308613718830837859, %rax
	movq	%rax, -199(%rbp)
	movb	$0, -191(%rbp)
	movaps	%xmm0, -176(%rbp)
	movq	$0, -160(%rbp)
	movb	$18, -176(%rbp)
	movabsq	$7597138674004617588, %rax
	movq	%rax, -175(%rbp)
	movb	$116, -167(%rbp)
	movb	$0, -166(%rbp)
	movq	$0, -136(%rbp)
	movq	$0, -144(%rbp)
	movq	$0, -152(%rbp)
	movb	$32, -152(%rbp)
	movabsq	$7236844123925471090, %rax
	movq	%rax, -143(%rbp)
	movabsq	$7309447144450324834, %rcx
	movq	%rcx, -151(%rbp)
	movb	$0, -135(%rbp)
	movaps	%xmm0, -128(%rbp)
	movq	$0, -112(%rbp)
	movb	$32, -128(%rbp)
	movq	%rax, -119(%rbp)
	movabsq	$7309447144583558249, %rax
	movq	%rax, -127(%rbp)
	movb	$0, -111(%rbp)
	movq	$0, -88(%rbp)
	movq	$0, -96(%rbp)
	movq	$0, -104(%rbp)
	movb	$10, -104(%rbp)
	movb	$108, -99(%rbp)
	movl	$1700946284, -103(%rbp)
	movb	$0, -98(%rbp)
	movq	$0, -64(%rbp)
	movb	$28, -80(%rbp)
	movabsq	$7234314212361855855, %rax
	movq	%rax, -73(%rbp)
	movabsq	$7165050477270430309, %rax
	movq	%rax, -79(%rbp)
	movb	$0, -65(%rbp)
	movq	$0, -40(%rbp)
	movq	$0, -48(%rbp)
	movq	$0, -56(%rbp)
	movb	$26, -56(%rbp)
	movabsq	$7306916068917079391, %rax
	movq	%rax, -50(%rbp)
	movabsq	$7308602715392864869, %rax
	movq	%rax, -55(%rbp)
	movb	$0, -42(%rbp)
	movq	$0, 70449(%rip)
	movq	$0, 70430(%rip)
	movq	$0, 70411(%rip)
	movl	$240, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, 70402(%rip)
	movq	%rax, __ZN9benchmark12_GLOBAL__N_18elementsE(%rip) ## benchmark::(anonymous namespace)::elements
	movq	%rax, %rcx
	addq	$240, %rcx
	movq	%rcx, 70386(%rip)
	leaq	-272(%rbp), %rsi
	movq	%rax, %rdi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	leaq	-248(%rbp), %rsi
	movq	70349(%rip), %rdi
	addq	$24, %rdi
	movq	%rdi, 70338(%rip)
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	leaq	-224(%rbp), %rsi
	movq	70319(%rip), %rdi
	addq	$24, %rdi
	movq	%rdi, 70308(%rip)
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	leaq	-200(%rbp), %rsi
	movq	70289(%rip), %rdi
	addq	$24, %rdi
	movq	%rdi, 70278(%rip)
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	leaq	-176(%rbp), %rsi
	movq	70259(%rip), %rdi
	addq	$24, %rdi
	movq	%rdi, 70248(%rip)
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	leaq	-152(%rbp), %rsi
	movq	70229(%rip), %rdi
	addq	$24, %rdi
	movq	%rdi, 70218(%rip)
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	leaq	-128(%rbp), %rsi
	movq	70202(%rip), %rdi
	addq	$24, %rdi
	movq	%rdi, 70191(%rip)
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	leaq	-104(%rbp), %rsi
	movq	70175(%rip), %rdi
	addq	$24, %rdi
	movq	%rdi, 70164(%rip)
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	leaq	-80(%rbp), %rsi
	movq	70148(%rip), %rdi
	addq	$24, %rdi
	movq	%rdi, 70137(%rip)
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	leaq	-56(%rbp), %rsi
	movq	70121(%rip), %rdi
	addq	$24, %rdi
	movq	%rdi, 70110(%rip)
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	addq	$24, 70097(%rip)
	testb	$1, -56(%rbp)
	jne	0x10001f691
	testb	$1, -80(%rbp)
	jne	0x10001f6a4
	testb	$1, -104(%rbp)
	jne	0x10001f6b7
	testb	$1, -128(%rbp)
	jne	0x10001f6ca
	testb	$1, -152(%rbp)
	jne	0x10001f6e0
	testb	$1, -176(%rbp)
	jne	0x10001f6f9
	testb	$1, -200(%rbp)
	jne	0x10001f712
	testb	$1, -224(%rbp)
	jne	0x10001f72b
	testb	$1, -248(%rbp)
	jne	0x10001f744
	testb	$1, -272(%rbp)
	je	0x10001f655
	movq	-256(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	64036(%rip), %rdi
	leaq	__ZN9benchmark12_GLOBAL__N_18elementsE(%rip), %rsi ## benchmark::(anonymous namespace)::elements
	leaq	__mh_execute_header(%rip), %rdx
	callq	0x100029758 ## symbol stub for: ___cxa_atexit
	movq	64442(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	cmpq	-32(%rbp), %rax
	jne	0x10001f762
	addq	$248, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	-40(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -80(%rbp)
	je	0x10001f5eb
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -104(%rbp)
	je	0x10001f5f5
	movq	-88(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -128(%rbp)
	je	0x10001f5ff
	movq	-112(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -152(%rbp)
	je	0x10001f60c
	movq	-136(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -176(%rbp)
	je	0x10001f619
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -200(%rbp)
	je	0x10001f626
	movq	-184(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -224(%rbp)
	je	0x10001f633
	movq	-208(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -248(%rbp)
	je	0x10001f640
	movq	-232(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -272(%rbp)
	jne	0x10001f649
	jmp	0x10001f655
	callq	0x1000297a0 ## symbol stub for: ___stack_chk_fail
	movq	%rax, %r14
	testb	$1, -56(%rbp)
	je	0x10001f7d4
	jmp	0x10001f840
	movq	%rax, %r14
	movq	__ZN9benchmark12_GLOBAL__N_18elementsE(%rip), %r15 ## benchmark::(anonymous namespace)::elements
	testq	%r15, %r15
	je	0x10001f7ce
	movq	69661(%rip), %rax
	cmpq	%r15, %rax
	je	0x10001f918
	nopw	%cs:(%rax,%rax)
	leaq	-24(%rax), %rbx
	testb	$1, -24(%rax)
	je	0x10001f7b3
	movq	-8(%rax), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r15
	movq	%rbx, %rax
	jne	0x10001f7a0
	movq	__ZN9benchmark12_GLOBAL__N_18elementsE(%rip), %rdi ## benchmark::(anonymous namespace)::elements
	movq	%r15, 69599(%rip)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -56(%rbp)
	jne	0x10001f840
	testb	$1, -80(%rbp)
	jne	0x10001f84f
	testb	$1, -104(%rbp)
	jne	0x10001f85e
	testb	$1, -128(%rbp)
	jne	0x10001f871
	testb	$1, -152(%rbp)
	jne	0x10001f887
	testb	$1, -176(%rbp)
	jne	0x10001f8a0
	testb	$1, -200(%rbp)
	jne	0x10001f8b9
	testb	$1, -224(%rbp)
	jne	0x10001f8d2
	testb	$1, -248(%rbp)
	jne	0x10001f8eb
	testb	$1, -272(%rbp)
	jne	0x10001f904
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	-40(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -80(%rbp)
	je	0x10001f7da
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -104(%rbp)
	je	0x10001f7e0
	movq	-88(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -128(%rbp)
	je	0x10001f7ea
	movq	-112(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -152(%rbp)
	je	0x10001f7f7
	movq	-136(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -176(%rbp)
	je	0x10001f804
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -200(%rbp)
	je	0x10001f811
	movq	-184(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -224(%rbp)
	je	0x10001f81e
	movq	-208(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -248(%rbp)
	je	0x10001f82b
	movq	-232(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -272(%rbp)
	je	0x10001f838
	movq	-256(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%r15, %rdi
	jmp	0x10001f7c2
__ZN9benchmark12JSONReporter13ReportContextERKNS_17BenchmarkReporter7ContextE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$216, %rsp
	movq	%rsi, %r14
	movq	63730(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	movq	%rax, -48(%rbp)
	movq	8(%rdi), %r13
	leaq	59930(%rip), %rsi ## literal pool for: "{\n"
	movl	$2, %edx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -208(%rbp)
	movq	$0, -192(%rbp)
	movb	$4, -208(%rbp)
	leaq	-207(%rbp), %rsi
	movw	$8224, -207(%rbp)
	movb	$0, -205(%rbp)
	movl	$2, %edx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	59847(%rip), %rsi ## literal pool for: "\"context\": {\n"
	movl	$13, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -144(%rbp)
	movq	$0, -128(%rbp)
	movb	$8, -144(%rbp)
	movl	$538976288, -143(%rbp)
	movb	$0, -139(%rbp)
	leaq	-248(%rbp), %rdi
	callq	__ZN9benchmark19LocalDateTimeStringEv ## benchmark::LocalDateTimeString()
	leaq	-143(%rbp), %r12
	movzbl	-144(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-128(%rbp), %rsi
	cmoveq	%r12, %rsi
	testb	%al, %al
	cmovneq	-136(%rbp), %rdx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -80(%rbp)
	movq	$0, -64(%rbp)
	movb	$8, -80(%rbp)
	leaq	-79(%rbp), %rdx
	movl	$1702125924, -79(%rbp)
	movb	$0, -75(%rbp)
	testb	$1, -248(%rbp)
	leaq	-247(%rbp), %rcx
	cmovneq	-232(%rbp), %rcx
	leaq	59850(%rip), %rsi ## literal pool for: "\"%s\": \"%s\""
	leaq	-112(%rbp), %rdi
	xorl	%eax, %eax
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	leaq	-111(%rbp), %rcx
	movq	-96(%rbp), %rsi
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-104(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	59619(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -112(%rbp)
	jne	0x10001fac3
	testb	$1, -80(%rbp)
	jne	0x10001fad2
	leaq	__ZN9benchmark17BenchmarkReporter7Context15executable_nameE(%rip), %rbx ## benchmark::BenchmarkReporter::Context::executable_name
	cmpq	$0, (%rbx)
	jne	0x10001faec
	jmp	0x10001fbb7
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -80(%rbp)
	je	0x10001fab1
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	__ZN9benchmark17BenchmarkReporter7Context15executable_nameE(%rip), %rbx ## benchmark::BenchmarkReporter::Context::executable_name
	cmpq	$0, (%rbx)
	je	0x10001fbb7
	movzbl	-144(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-128(%rbp), %rsi
	cmoveq	%r12, %rsi
	testb	%al, %al
	cmovneq	-136(%rbp), %rdx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %r15
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -80(%rbp)
	movq	$0, -64(%rbp)
	movb	$20, -80(%rbp)
	leaq	-79(%rbp), %rdx
	movabsq	$7089075335985461349, %rax
	movq	%rax, -79(%rbp)
	movw	$25964, -71(%rbp)
	movb	$0, -69(%rbp)
	movq	(%rbx), %rcx
	leaq	59606(%rip), %rsi ## literal pool for: "\"%s\": \"%s\""
	leaq	-112(%rbp), %rdi
	xorl	%eax, %eax
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-104(%rbp), %rdx
	movq	%r15, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	59375(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -112(%rbp)
	je	0x10001fba8
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -80(%rbp)
	je	0x10001fbb7
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	(%r14), %r14
	movzbl	-144(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-128(%rbp), %rsi
	cmoveq	%r12, %rsi
	testb	%al, %al
	cmovneq	-136(%rbp), %rdx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -80(%rbp)
	movq	$0, -64(%rbp)
	movb	$16, -80(%rbp)
	movabsq	$8319679458741941614, %rax
	movq	%rax, -79(%rbp)
	movb	$0, -71(%rbp)
	movslq	(%r14), %rdx
	leaq	-112(%rbp), %rdi
	leaq	-80(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEx ## benchmark::(anonymous namespace)::FormatKV(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, long long)
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-104(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	59184(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -112(%rbp)
	je	0x10001fc67
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -80(%rbp)
	je	0x10001fc76
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movzbl	-144(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-136(%rbp), %rdx
	testb	%al, %al
	movq	-128(%rbp), %rsi
	cmoveq	%r12, %rsi
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -80(%rbp)
	movq	$0, -64(%rbp)
	movb	$22, -80(%rbp)
	movabsq	$6877671114260768877, %rax
	movq	%rax, -79(%rbp)
	movl	$7696483, -71(%rbp)
	movsd	8(%r14), %xmm0
	divsd	42934(%rip), %xmm0
	addsd	41206(%rip), %xmm0
	cvttsd2si	%xmm0, %rdx
	leaq	-112(%rbp), %rdi
	leaq	-80(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEx ## benchmark::(anonymous namespace)::FormatKV(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, long long)
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-104(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	58969(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -112(%rbp)
	je	0x10001fd3e
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -80(%rbp)
	je	0x10001fd4d
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movzbl	-144(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-136(%rbp), %rdx
	testb	%al, %al
	movq	-128(%rbp), %rsi
	cmoveq	%r12, %rsi
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -80(%rbp)
	movq	$0, -64(%rbp)
	movb	$38, -80(%rbp)
	movabsq	$7089068670129237609, %rax
	movq	%rax, -71(%rbp)
	movabsq	$7809632576011071587, %rax
	movq	%rax, -79(%rbp)
	movl	$6579564, -63(%rbp)
	cmpb	$0, 40(%r14)
	leaq	-79(%rbp), %rdx
	leaq	59013(%rip), %rax ## literal pool for: "false"
	leaq	59001(%rip), %rcx ## literal pool for: "true"
	cmoveq	%rax, %rcx
	leaq	58981(%rip), %rsi ## literal pool for: "\"%s\": %s"
	leaq	-112(%rbp), %rdi
	xorl	%eax, %eax
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-104(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	58735(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -112(%rbp)
	je	0x10001fe28
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -80(%rbp)
	je	0x10001fe37
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movzbl	-144(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-136(%rbp), %rdx
	testb	%al, %al
	movq	-128(%rbp), %rsi
	cmoveq	%r12, %rsi
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	58690(%rip), %rsi ## literal pool for: "\"caches\": [\n"
	movl	$12, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movw	$8224, -108(%rbp)
	movl	$538976288, -112(%rbp)
	testb	$1, -144(%rbp)
	jne	0x10001fe95
	movw	$0, -144(%rbp)
	jmp	0x10001fea7
	movq	-128(%rbp), %rax
	movb	$0, (%rax)
	movq	$0, -136(%rbp)
	leaq	-144(%rbp), %rdi
	xorl	%esi, %esi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	leaq	-136(%rbp), %rax
	movb	$12, -144(%rbp)
	movl	-112(%rbp), %ecx
	movl	%ecx, -143(%rbp)
	movzwl	-108(%rbp), %ecx
	movw	%cx, -139(%rbp)
	movb	$0, -137(%rbp)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -112(%rbp)
	movq	$0, -96(%rbp)
	movb	$16, -112(%rbp)
	movabsq	$2314885530818453536, %rax
	movq	%rax, -111(%rbp)
	movb	$0, -103(%rbp)
	movq	16(%r14), %r12
	movb	$12, %cl
	cmpq	%r12, 24(%r14)
	jne	0x10001ff45
	movw	$0, -72(%rbp)
	movq	$0, -80(%rbp)
	testb	$1, %cl
	jne	0x10002040b
	movw	$0, -144(%rbp)
	jmp	0x10002041d
	movq	%r14, -224(%rbp)
	movb	$12, %cl
	movl	$32, %r15d
	xorl	%eax, %eax
	xorl	%esi, %esi
	xorl	%edx, %edx
	movq	%rdx, -216(%rbp)
	jmp	0x10001ff7f
	nopw	%cs:(%rax,%rax)
	movq	-136(%rbp), %rax
	movq	-128(%rbp), %rsi
	addq	$40, %r15
	movzbl	%cl, %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	leaq	-143(%rbp), %rdi
	cmoveq	%rdi, %rsi
	testb	%cl, %cl
	cmovneq	%rax, %rdx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movl	$2, %edx
	movq	%rax, %rdi
	leaq	58295(%rip), %rsi ## literal pool for: "{\n"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-104(%rbp), %rdx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %r14
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -176(%rbp)
	movq	$0, -160(%rbp)
	movb	$8, -176(%rbp)
	movl	$1701869940, -175(%rbp)
	movb	$0, -171(%rbp)
	testb	$1, -32(%r12,%r15)
	leaq	-31(%r12,%r15), %rcx
	cmovneq	-16(%r12,%r15), %rcx
	xorl	%eax, %eax
	leaq	-80(%rbp), %rdi
	leaq	58362(%rip), %rsi ## literal pool for: "\"%s\": \"%s\""
	leaq	-175(%rbp), %rdx
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-80(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-64(%rbp), %rsi
	leaq	-79(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-72(%rbp), %rdx
	movq	%r14, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movl	$2, %edx
	movq	%rax, %rdi
	leaq	58122(%rip), %rsi ## literal pool for: ",\n"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -80(%rbp)
	je	0x100020085
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -176(%rbp)
	je	0x10002009a
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-104(%rbp), %rdx
	testb	%al, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rax
	cmoveq	%rax, %rsi
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -176(%rbp)
	movq	$0, -160(%rbp)
	movb	$10, -176(%rbp)
	leaq	-175(%rbp), %rax
	movb	$108, 4(%rax)
	movl	$1702258028, (%rax)
	movb	$0, -170(%rbp)
	movslq	-8(%r12,%r15), %rdx
	leaq	-80(%rbp), %rdi
	leaq	-176(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEx ## benchmark::(anonymous namespace)::FormatKV(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, long long)
	movzbl	-80(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-64(%rbp), %rsi
	leaq	-79(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-72(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movl	$2, %edx
	movq	%rax, %rdi
	leaq	57910(%rip), %rsi ## literal pool for: ",\n"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -80(%rbp)
	je	0x100020159
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -176(%rbp)
	je	0x10002016e
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-104(%rbp), %rdx
	testb	%al, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rax
	cmoveq	%rax, %rsi
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -176(%rbp)
	movq	$0, -160(%rbp)
	movb	$8, -176(%rbp)
	movl	$1702521203, -175(%rbp)
	movb	$0, -171(%rbp)
	movslq	-4(%r12,%r15), %rax
	imulq	$1000, %rax, %rdx
	leaq	-80(%rbp), %rdi
	leaq	-176(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEx ## benchmark::(anonymous namespace)::FormatKV(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, long long)
	movzbl	-80(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-64(%rbp), %rsi
	leaq	-79(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-72(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movl	$2, %edx
	movq	%rax, %rdi
	leaq	57698(%rip), %rsi ## literal pool for: ",\n"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -80(%rbp)
	je	0x10002022d
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -176(%rbp)
	je	0x100020242
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-104(%rbp), %rdx
	testb	%al, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rax
	cmoveq	%rax, %rsi
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -176(%rbp)
	movq	$0, -160(%rbp)
	movb	$22, -176(%rbp)
	leaq	-175(%rbp), %rax
	movabsq	$8241983637796255086, %rcx
	movq	%rcx, (%rax)
	movb	$103, 10(%rax)
	movw	$28265, 8(%rax)
	movb	$0, -164(%rbp)
	movslq	(%r12,%r15), %rdx
	leaq	-80(%rbp), %rdi
	leaq	-176(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEx ## benchmark::(anonymous namespace)::FormatKV(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, long long)
	movzbl	-80(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-64(%rbp), %rsi
	leaq	-79(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-72(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movl	$1, %edx
	movq	%rax, %rdi
	leaq	55271(%rip), %rsi ## literal pool for: "\n"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -80(%rbp)
	je	0x10002030d
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -176(%rbp)
	leaq	-143(%rbp), %rbx
	je	0x100020329
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movzbl	-144(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-136(%rbp), %rdx
	testb	%al, %al
	movq	-128(%rbp), %rsi
	cmoveq	%rbx, %rsi
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movl	$1, %edx
	movq	%rax, %rdi
	leaq	57447(%rip), %rsi ## literal pool for: "}"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	-224(%rbp), %rcx
	movq	24(%rcx), %rax
	subq	16(%rcx), %rax
	sarq	$3, %rax
	movabsq	$-3689348814741910323, %rcx
	imulq	%rcx, %rax
	decq	%rax
	cmpq	%rax, -216(%rbp)
	je	0x1000203a7
	movl	$1, %edx
	movq	%r13, %rdi
	leaq	57147(%rip), %rsi ## literal pool for: ","
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movl	$1, %edx
	movq	%r13, %rdi
	leaq	55082(%rip), %rsi ## literal pool for: "\n"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	-216(%rbp), %rax
	movq	%rax, %rdx
	incq	%rdx
	movq	-224(%rbp), %rax
	movq	16(%rax), %r12
	movq	24(%rax), %rax
	subq	%r12, %rax
	sarq	$3, %rax
	movabsq	$-3689348814741910323, %rcx
	imulq	%rcx, %rax
	movq	%rdx, %rcx
	movq	%rcx, -216(%rbp)
	cmpq	%rax, %rdx
	movzbl	-144(%rbp), %ecx
	jb	0x10001ff70
	jmp	0x10001ff20
	movq	-128(%rbp), %rax
	movb	$0, (%rax)
	movq	$0, -136(%rbp)
	leaq	-207(%rbp), %r14
	leaq	-143(%rbp), %rbx
	leaq	-144(%rbp), %rdi
	xorl	%esi, %esi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	movb	$8, -144(%rbp)
	movl	$538976288, -143(%rbp)
	movb	$0, -139(%rbp)
	movq	-80(%rbp), %rax
	movq	%rax, -138(%rbp)
	movzwl	-72(%rbp), %eax
	movw	%ax, -130(%rbp)
	movq	$0, -128(%rbp)
	movl	$4, %edx
	movq	%r13, %rdi
	movq	%rbx, %rsi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	57156(%rip), %rsi ## literal pool for: "],\n"
	movl	$3, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-144(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-128(%rbp), %rbx
	testb	%al, %al
	cmovneq	-136(%rbp), %rdx
	movq	%r13, %rdi
	movq	%rbx, %rsi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -176(%rbp)
	movq	$0, -160(%rbp)
	movb	$36, -176(%rbp)
	leaq	-175(%rbp), %rdx
	movabsq	$8751724860807935330, %rax
	movq	%rax, -167(%rbp)
	movabsq	$6879655668641589612, %rax
	movq	%rax, -175(%rbp)
	movw	$25968, -159(%rbp)
	movb	$0, -157(%rbp)
	leaq	57100(%rip), %rsi ## literal pool for: "\"%s\": \"%s\""
	leaq	__ZZN9benchmark12JSONReporter13ReportContextERKNS_17BenchmarkReporter7ContextEE10build_type(%rip), %rcx ## benchmark::JSONReporter::ReportContext(benchmark::BenchmarkReporter::Context const&)::build_type
	leaq	-80(%rbp), %rdi
	xorl	%eax, %eax
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-80(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	leaq	-79(%rbp), %rsi
	cmovneq	-64(%rbp), %rsi
	testb	%al, %al
	cmovneq	-72(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	54662(%rip), %rsi ## literal pool for: "\n"
	movl	$1, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -80(%rbp)
	je	0x100020576
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -176(%rbp)
	je	0x10002058b
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movzbl	-208(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-200(%rbp), %rdx
	testb	%al, %al
	movq	-192(%rbp), %rsi
	cmoveq	%r14, %rsi
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	56867(%rip), %rsi ## literal pool for: "},\n"
	movl	$3, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-208(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-192(%rbp), %r14
	testb	%al, %al
	cmovneq	-200(%rbp), %rdx
	movq	%r13, %rdi
	movq	%r14, %rsi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	56807(%rip), %rsi ## literal pool for: "\"benchmarks\": [\n"
	movl	$16, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -112(%rbp)
	jne	0x10002065c
	testb	$1, -248(%rbp)
	jne	0x10002066e
	testb	$1, -144(%rbp)
	jne	0x100020683
	testb	$1, -208(%rbp)
	je	0x100020638
	movq	-192(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	60401(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	cmpq	-48(%rbp), %rax
	jne	0x100020697
	movb	$1, %al
	addq	$216, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -248(%rbp)
	je	0x10002061a
	movq	-232(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -144(%rbp)
	je	0x100020623
	movq	-128(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -208(%rbp)
	jne	0x10002062c
	jmp	0x100020638
	callq	0x1000297a0 ## symbol stub for: ___stack_chk_fail
	movq	%rax, %rbx
	testb	$1, -176(%rbp)
	je	0x100020870
	jmp	0x100020899
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	jne	0x10002079f
	jmp	0x100020876
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	jne	0x10002079f
	jmp	0x100020876
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	jne	0x10002079f
	jmp	0x100020876
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	jne	0x10002079f
	jmp	0x100020876
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	jne	0x10002079f
	jmp	0x100020876
	movq	%rax, %rbx
	testb	$1, -144(%rbp)
	je	0x100020888
	jmp	0x1000208dd
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	jne	0x10002085e
	jmp	0x100020867
	movq	%rax, %rbx
	testb	$1, -112(%rbp)
	jne	0x10002078c
	jmp	0x100020795
	movq	%rax, %rbx
	testb	$1, -248(%rbp)
	je	0x10002087f
	jmp	0x1000208c8
	movq	%rax, %rbx
	testb	$1, -112(%rbp)
	jne	0x10002078c
	jmp	0x100020795
	movq	%rax, %rbx
	testb	$1, -112(%rbp)
	jne	0x10002078c
	jmp	0x100020795
	movq	%rax, %rbx
	testb	$1, -112(%rbp)
	jne	0x10002078c
	jmp	0x100020795
	movq	%rax, %rbx
	testb	$1, -112(%rbp)
	je	0x100020795
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -80(%rbp)
	je	0x100020876
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -248(%rbp)
	je	0x10002087f
	jmp	0x1000208c8
	movq	%rax, %rbx
	testb	$1, -208(%rbp)
	je	0x100020891
	jmp	0x1000208ef
	movq	%rax, %rbx
	testb	$1, -112(%rbp)
	je	0x100020876
	jmp	0x1000208b6
	movq	%rax, %rbx
	testb	$1, -248(%rbp)
	je	0x10002087f
	jmp	0x1000208c8
	movq	%rax, %rbx
	testb	$1, -176(%rbp)
	je	0x100020870
	jmp	0x100020899
	movq	%rax, %rbx
	testb	$1, -176(%rbp)
	je	0x100020870
	jmp	0x100020899
	movq	%rax, %rbx
	testb	$1, -176(%rbp)
	je	0x100020870
	jmp	0x100020899
	movq	%rax, %rbx
	testb	$1, -176(%rbp)
	je	0x100020870
	jmp	0x100020899
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	jne	0x10002085e
	jmp	0x100020867
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	jne	0x10002085e
	jmp	0x100020867
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	jne	0x10002085e
	jmp	0x100020867
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	je	0x100020867
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -176(%rbp)
	jne	0x100020899
	testb	$1, -112(%rbp)
	jne	0x1000208b6
	testb	$1, -248(%rbp)
	jne	0x1000208c8
	testb	$1, -144(%rbp)
	jne	0x1000208dd
	testb	$1, -208(%rbp)
	jne	0x1000208ef
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -112(%rbp)
	je	0x100020876
	jmp	0x1000208b6
	movq	%rax, %rbx
	testb	$1, -112(%rbp)
	je	0x100020876
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -248(%rbp)
	je	0x10002087f
	movq	-232(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -144(%rbp)
	je	0x100020888
	movq	-128(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -208(%rbp)
	je	0x100020891
	movq	-192(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEx:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$328, %rsp
	movq	%rdx, -80(%rbp)
	movq	%rsi, %rbx
	movq	%rdi, -72(%rbp)
	leaq	-240(%rbp), %rdi
	movq	59499(%rip), %r15
	leaq	64(%r15), %r14
	movq	%r14, -352(%rbp)
	leaq	-344(%rbp), %r13
	movq	59234(%rip), %rax
	leaq	64(%rax), %rcx
	movq	%rcx, -240(%rbp)
	addq	$24, %rax
	movq	%rax, %xmm0
	movdqa	%xmm0, -368(%rbp)
	movq	%r13, %rsi
	callq	0x100029710 ## symbol stub for: __ZNSt3__18ios_base4initEPv
	movq	$0, -104(%rbp)
	movl	$4294967295, -96(%rbp)
	leaq	24(%r15), %r12
	movq	%r12, -368(%rbp)
	addq	$104, %r15
	movq	%r15, -240(%rbp)
	movq	%r14, -352(%rbp)
	movq	%r13, %rdi
	callq	0x10002967a ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
	movq	%r13, %rdi
	movq	59320(%rip), %r13
	addq	$16, %r13
	movq	%r13, -344(%rbp)
	movq	$0, -256(%rbp)
	movq	$0, -264(%rbp)
	movq	$0, -272(%rbp)
	movq	$0, -280(%rbp)
	movl	$24, -248(%rbp)
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	leaq	-64(%rbp), %rsi
	callq	__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	testb	$1, -64(%rbp)
	je	0x100020a22
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-352(%rbp), %rdi
	movb	$34, -64(%rbp)
	leaq	-64(%rbp), %rsi
	movl	$1, %edx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	(%rbx), %ecx
	leaq	1(%rbx), %rsi
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	cmovneq	16(%rbx), %rsi
	testb	%cl, %cl
	cmovneq	8(%rbx), %rdx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	55758(%rip), %rsi ## literal pool for: "\": "
	movl	$3, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rdi
	movq	-80(%rbp), %rsi
	callq	0x10002965c ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEx
	movq	-72(%rbp), %rdi
	leaq	-344(%rbp), %rsi
	callq	__ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str() const
	movq	%r12, -368(%rbp)
	movq	%r15, -240(%rbp)
	movq	%r14, -352(%rbp)
	movq	%r13, -344(%rbp)
	testb	$1, -280(%rbp)
	je	0x100020ac0
	movq	-264(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-344(%rbp), %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	58917(%rip), %rsi
	addq	$8, %rsi
	leaq	-368(%rbp), %rdi
	callq	0x100029662 ## symbol stub for: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
	leaq	-240(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	addq	$328, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x100020b47
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -280(%rbp)
	jne	0x100020b50
	jmp	0x100020b5c
	movq	%rax, %rbx
	jmp	0x100020b68
	movq	%rax, %rbx
	jmp	0x100020b7f
	movq	%rax, %rbx
	movq	%r12, -368(%rbp)
	movq	%r15, -240(%rbp)
	movq	%r14, -352(%rbp)
	movq	%r13, -344(%rbp)
	testb	$1, -280(%rbp)
	je	0x100020b5c
	movq	-264(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-344(%rbp), %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	58761(%rip), %rsi
	addq	$8, %rsi
	leaq	-368(%rbp), %rdi
	callq	0x100029662 ## symbol stub for: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
	leaq	-240(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark12JSONReporter10ReportRunsERKNSt3__16vectorINS_17BenchmarkReporter3RunENS1_9allocatorIS4_EEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	movq	%rsi, %r12
	movq	%rdi, %r14
	movq	(%r12), %rbx
	movq	8(%r12), %rdx
	cmpq	%rdx, %rbx
	je	0x100020ce5
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -80(%rbp)
	movq	$0, -64(%rbp)
	movb	$8, -80(%rbp)
	movl	$538976288, -79(%rbp)
	movb	$0, -75(%rbp)
	movq	8(%r14), %r15
	movb	$8, %al
	cmpb	$0, 24(%r14)
	jne	0x100020c14
	leaq	55168(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%r15, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%r12), %rbx
	movq	8(%r12), %rdx
	movb	-80(%rbp), %al
	movb	$0, 24(%r14)
	testb	$1, %al
	sete	%cl
	cmpq	%rbx, %rdx
	je	0x100020cd8
	leaq	-79(%rbp), %r13
	movzbl	%al, %edx
	shrq	%rdx
	andb	$1, %cl
	movq	-64(%rbp), %rsi
	cmovneq	%r13, %rsi
	testb	%cl, %cl
	cmoveq	-72(%rbp), %rdx
	movq	%r15, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movl	$2, %edx
	movq	%rax, %rdi
	leaq	55056(%rip), %rsi ## literal pool for: "{\n"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	__ZN9benchmark12JSONReporter12PrintRunDataERKNS_17BenchmarkReporter3RunE ## benchmark::JSONReporter::PrintRunData(benchmark::BenchmarkReporter::Run const&)
	movzbl	-80(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-64(%rbp), %rsi
	cmoveq	%r13, %rsi
	testb	%al, %al
	cmovneq	-72(%rbp), %rdx
	movq	%r15, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movb	$125, -41(%rbp)
	movl	$1, %edx
	movq	%rax, %rdi
	leaq	-41(%rbp), %rsi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	addq	$200, %rbx
	cmpq	8(%r12), %rbx
	je	0x100020cf4
	movl	$2, %edx
	movq	%r15, %rdi
	leaq	54972(%rip), %rsi ## literal pool for: ",\n"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-80(%rbp), %eax
	testb	$1, %al
	sete	%cl
	cmpq	8(%r12), %rbx
	jne	0x100020c2b
	testb	%cl, %cl
	jne	0x100020ce5
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	testb	$1, -80(%rbp)
	jne	0x100020cdc
	jmp	0x100020ce5
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	jne	0x100020d1b
	jmp	0x100020d24
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	jne	0x100020d1b
	jmp	0x100020d24
	movq	%rax, %rbx
	testb	$1, -80(%rbp)
	je	0x100020d24
	movq	-64(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax)
__ZN9benchmark12JSONReporter12PrintRunDataERKNS_17BenchmarkReporter3RunE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$104, %rsp
	movq	%rsi, %r13
	movq	$0, -96(%rbp)
	movq	$0, -104(%rbp)
	movb	$12, -112(%rbp)
	leaq	-111(%rbp), %rsi
	movw	$8224, -107(%rbp)
	movl	$538976288, -111(%rbp)
	movb	$0, -105(%rbp)
	movq	8(%rdi), %r12
	movl	$6, %edx
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$8, -64(%rbp)
	leaq	-63(%rbp), %r14
	movl	$1701667182, -63(%rbp)
	movb	$0, -59(%rbp)
	leaq	1(%r13), %rcx
	testb	$1, (%r13)
	cmovneq	16(%r13), %rcx
	leaq	54897(%rip), %rsi ## literal pool for: "\"%s\": \"%s\""
	leaq	-88(%rbp), %rdi
	xorl	%eax, %eax
	movq	%r14, %rdx
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	leaq	-87(%rbp), %rcx
	movq	-72(%rbp), %rsi
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	54663(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -88(%rbp)
	jne	0x100020e19
	testb	$1, -64(%rbp)
	jne	0x100020e28
	cmpb	$0, 48(%r13)
	jne	0x100020e3c
	jmp	0x100020ff2
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x100020e0d
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpb	$0, 48(%r13)
	je	0x100020ff2
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-104(%rbp), %rdx
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	movq	$0, -48(%rbp)
	movb	$28, -64(%rbp)
	movabsq	$7234314212361855855, %rax
	movq	%rax, -57(%rbp)
	movabsq	$7165050477270430309, %rax
	movq	%rax, -63(%rbp)
	movb	$0, -49(%rbp)
	cmpb	$0, 48(%r13)
	leaq	-63(%rbp), %rdx
	leaq	54692(%rip), %rax ## literal pool for: "false"
	leaq	54680(%rip), %rcx ## literal pool for: "true"
	cmoveq	%rax, %rcx
	leaq	54660(%rip), %rsi ## literal pool for: "\"%s\": %s"
	leaq	-88(%rbp), %rdi
	xorl	%eax, %eax
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-72(%rbp), %rsi
	leaq	-87(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	54414(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -88(%rbp)
	je	0x100020f09
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x100020f18
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-104(%rbp), %rdx
	testb	%al, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rax
	cmoveq	%rax, %rsi
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$26, -64(%rbp)
	leaq	-63(%rbp), %rdx
	movabsq	$7306916068917079391, %rax
	movq	%rax, -58(%rbp)
	movabsq	$7308602715392864869, %rax
	movq	%rax, -63(%rbp)
	movb	$0, -50(%rbp)
	leaq	57(%r13), %rcx
	testb	$1, 56(%r13)
	cmovneq	72(%r13), %rcx
	leaq	54427(%rip), %rsi ## literal pool for: "\"%s\": \"%s\""
	leaq	-88(%rbp), %rdi
	xorl	%eax, %eax
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-72(%rbp), %rsi
	leaq	-87(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	54196(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -88(%rbp)
	je	0x100020fe3
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x100020ff2
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpb	$0, 168(%r13)
	je	0x100021335
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-104(%rbp), %rdx
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$30, -64(%rbp)
	movabsq	$8389754659151636070, %r15
	movq	%r15, -56(%rbp)
	movabsq	$7378426037110403171, %rax
	movq	%rax, -63(%rbp)
	movb	$0, -48(%rbp)
	movq	%r13, %rdi
	callq	__ZNK9benchmark17BenchmarkReporter3Run18GetAdjustedCPUTimeEv ## benchmark::BenchmarkReporter::Run::GetAdjustedCPUTime() const
	leaq	-88(%rbp), %rdi
	leaq	-64(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEd ## benchmark::(anonymous namespace)::FormatKV(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, double)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-72(%rbp), %rsi
	leaq	-87(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	53979(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -88(%rbp)
	je	0x1000210bc
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x1000210cb
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-104(%rbp), %rdx
	testb	%al, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rax
	cmoveq	%rax, %rsi
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$32, -64(%rbp)
	movq	%r15, -55(%rbp)
	movabsq	$7309169981736969586, %rax
	movq	%rax, -63(%rbp)
	movb	$0, -47(%rbp)
	movq	%r13, %rdi
	callq	__ZNK9benchmark17BenchmarkReporter3Run19GetAdjustedRealTimeEv ## benchmark::BenchmarkReporter::Run::GetAdjustedRealTime() const
	leaq	-88(%rbp), %rdi
	leaq	-64(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEd ## benchmark::(anonymous namespace)::FormatKV(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, double)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-72(%rbp), %rsi
	leaq	-87(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	53786(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -88(%rbp)
	je	0x10002117d
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x10002118c
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-104(%rbp), %rdx
	testb	%al, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rax
	cmoveq	%rax, %rsi
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$10, -64(%rbp)
	movl	$1600612706, -63(%rbp)
	movw	$111, -59(%rbp)
	movl	136(%r13), %esi
	leaq	-136(%rbp), %rdi
	callq	__ZN9benchmark13GetBigOStringENS_4BigOE ## benchmark::GetBigOString(benchmark::BigO)
	testb	$1, -64(%rbp)
	cmovneq	-48(%rbp), %r14
	testb	$1, -136(%rbp)
	leaq	-135(%rbp), %rcx
	cmovneq	-120(%rbp), %rcx
	leaq	53789(%rip), %rsi ## literal pool for: "\"%s\": \"%s\""
	leaq	-88(%rbp), %rdi
	xorl	%eax, %eax
	movq	%r14, %rdx
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-72(%rbp), %rsi
	leaq	-87(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	53555(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -88(%rbp)
	jne	0x1000213c8
	testb	$1, -136(%rbp)
	jne	0x1000213de
	testb	$1, -64(%rbp)
	je	0x10002127b
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-104(%rbp), %rdx
	testb	%al, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rax
	cmoveq	%rax, %rsi
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$18, -64(%rbp)
	leaq	-63(%rbp), %rdx
	movabsq	$7597138674004617588, %rax
	movq	%rax, -63(%rbp)
	movw	$116, -55(%rbp)
	movl	88(%r13), %eax
	cmpl	$1, %eax
	leaq	53382(%rip), %rcx ## literal pool for: "us"
	leaq	53378(%rip), %rsi ## literal pool for: "ns"
	cmoveq	%rcx, %rsi
	cmpl	$2, %eax
	leaq	53358(%rip), %rcx ## literal pool for: "ms"
	cmovneq	%rsi, %rcx
	leaq	53547(%rip), %rsi ## literal pool for: "\"%s\": \"%s\""
	leaq	-88(%rbp), %rdi
	xorl	%eax, %eax
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-72(%rbp), %rsi
	leaq	-87(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	jmp	0x1000216c8
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-104(%rbp), %rdx
	cmpb	$0, 169(%r13)
	je	0x1000213f6
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$6, -64(%rbp)
	movl	$7564658, -63(%rbp)
	movq	%r13, %rdi
	callq	__ZNK9benchmark17BenchmarkReporter3Run18GetAdjustedCPUTimeEv ## benchmark::BenchmarkReporter::Run::GetAdjustedCPUTime() const
	leaq	-88(%rbp), %rdi
	leaq	-64(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEd ## benchmark::(anonymous namespace)::FormatKV(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, double)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-72(%rbp), %rsi
	leaq	-87(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	jmp	0x1000216c8
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -136(%rbp)
	je	0x10002126c
	movq	-120(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	jne	0x100021272
	jmp	0x10002127b
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$20, -64(%rbp)
	movabsq	$8028075772644521065, %rax
	movq	%rax, -63(%rbp)
	movw	$29550, -55(%rbp)
	movb	$0, -53(%rbp)
	movq	80(%r13), %rdx
	leaq	-88(%rbp), %rdi
	leaq	-64(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEx ## benchmark::(anonymous namespace)::FormatKV(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, long long)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-72(%rbp), %rsi
	leaq	-87(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	53008(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -88(%rbp)
	je	0x100021487
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x100021496
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-104(%rbp), %rdx
	testb	%al, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rax
	cmoveq	%rax, %rsi
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$18, -64(%rbp)
	movabsq	$7883960575877801330, %rax
	movq	%rax, -63(%rbp)
	movw	$101, -55(%rbp)
	movq	%r13, %rdi
	callq	__ZNK9benchmark17BenchmarkReporter3Run19GetAdjustedRealTimeEv ## benchmark::BenchmarkReporter::Run::GetAdjustedRealTime() const
	leaq	-88(%rbp), %rdi
	leaq	-64(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEd ## benchmark::(anonymous namespace)::FormatKV(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, double)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-72(%rbp), %rsi
	leaq	-87(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	52817(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -88(%rbp)
	je	0x100021546
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x100021555
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movzbl	-112(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-104(%rbp), %rdx
	testb	%al, %al
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rax
	cmoveq	%rax, %rsi
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$16, -64(%rbp)
	movabsq	$7308613718830837859, %rax
	movq	%rax, -63(%rbp)
	movb	$0, -55(%rbp)
	movq	%r13, %rdi
	callq	__ZNK9benchmark17BenchmarkReporter3Run18GetAdjustedCPUTimeEv ## benchmark::BenchmarkReporter::Run::GetAdjustedCPUTime() const
	leaq	-88(%rbp), %rdi
	leaq	-64(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEd ## benchmark::(anonymous namespace)::FormatKV(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, double)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-72(%rbp), %rsi
	leaq	-87(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -88(%rbp)
	je	0x1000215ef
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x1000215fe
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	52598(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-112(%rbp), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rdi
	cmoveq	%rdi, %rsi
	testb	%cl, %cl
	cmovneq	-104(%rbp), %rdx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$18, -64(%rbp)
	leaq	-63(%rbp), %rdx
	movabsq	$7597138674004617588, %rax
	movq	%rax, -63(%rbp)
	movw	$116, -55(%rbp)
	movl	88(%r13), %eax
	cmpl	$1, %eax
	leaq	52462(%rip), %rcx ## literal pool for: "us"
	leaq	52458(%rip), %rsi ## literal pool for: "ns"
	cmoveq	%rcx, %rsi
	cmpl	$2, %eax
	leaq	52438(%rip), %rcx ## literal pool for: "ms"
	cmovneq	%rsi, %rcx
	leaq	52627(%rip), %rsi ## literal pool for: "\"%s\": \"%s\""
	leaq	-88(%rbp), %rdi
	xorl	%eax, %eax
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-72(%rbp), %rsi
	leaq	-87(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -88(%rbp)
	je	0x1000216d7
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x1000216e6
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movsd	112(%r13), %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jbe	0x1000217c6
	leaq	52347(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-112(%rbp), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rdi
	cmoveq	%rdi, %rsi
	testb	%cl, %cl
	cmovneq	-104(%rbp), %rdx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$32, -64(%rbp)
	movabsq	$7236844123925471090, %rax
	movq	%rax, -55(%rbp)
	movabsq	$7309447144450324834, %rax
	movq	%rax, -63(%rbp)
	movb	$0, -47(%rbp)
	movsd	112(%r13), %xmm0
	leaq	-88(%rbp), %rdi
	leaq	-64(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEd ## benchmark::(anonymous namespace)::FormatKV(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, double)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-72(%rbp), %rsi
	leaq	-87(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -88(%rbp)
	je	0x1000217b4
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x1000217c3
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	xorps	%xmm1, %xmm1
	movsd	120(%r13), %xmm0
	ucomisd	%xmm1, %xmm0
	jbe	0x1000218a0
	leaq	52126(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-112(%rbp), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rdi
	cmoveq	%rdi, %rsi
	testb	%cl, %cl
	cmovneq	-104(%rbp), %rdx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$32, -64(%rbp)
	movabsq	$7236844123925471090, %rax
	movq	%rax, -55(%rbp)
	movabsq	$7309447144583558249, %rax
	movq	%rax, -63(%rbp)
	movb	$0, -47(%rbp)
	movsd	120(%r13), %xmm0
	leaq	-88(%rbp), %rdi
	leaq	-64(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEd ## benchmark::(anonymous namespace)::FormatKV(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, double)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-72(%rbp), %rsi
	leaq	-87(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -88(%rbp)
	je	0x100021891
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x1000218a0
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r13, %rax
	movq	176(%rax), %r13
	movq	%rax, -144(%rbp)
	leaq	184(%rax), %r15
	cmpq	%r15, %r13
	je	0x1000219ad
	leaq	51891(%rip), %rbx ## literal pool for: ",\n"
	nopl	(%rax,%rax)
	movl	$2, %edx
	movq	%r12, %r14
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-112(%rbp), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	movq	-96(%rbp), %rsi
	leaq	-111(%rbp), %rdi
	cmoveq	%rdi, %rsi
	testb	%cl, %cl
	cmovneq	-104(%rbp), %rdx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %r12
	leaq	32(%r13), %rsi
	movsd	56(%r13), %xmm0
	leaq	-88(%rbp), %rdi
	callq	__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEd ## benchmark::(anonymous namespace)::FormatKV(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, double)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	movq	-72(%rbp), %rsi
	leaq	-87(%rbp), %rcx
	cmoveq	%rcx, %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -88(%rbp)
	je	0x100021957
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	8(%r13), %rcx
	testq	%rcx, %rcx
	movq	%r14, %r12
	je	0x100021980
	nopw	%cs:(%rax,%rax)
	movq	%rcx, %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	jne	0x100021970
	jmp	0x1000219a1
	nopl	(%rax)
	movq	16(%r13), %rax
	cmpq	%r13, (%rax)
	je	0x1000219a1
	addq	$16, %r13
	nopl	(%rax)
	movq	(%r13), %rcx
	movq	16(%rcx), %rax
	cmpq	%rcx, (%rax)
	leaq	16(%rcx), %r13
	jne	0x100021990
	cmpq	%r15, %rax
	movq	%rax, %r13
	jne	0x1000218d0
	movq	-144(%rbp), %rbx
	movzbl	24(%rbx), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	32(%rbx), %rcx
	testq	%rcx, %rcx
	je	0x100021a92
	leaq	51622(%rip), %rsi ## literal pool for: ",\n"
	movl	$2, %edx
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	-112(%rbp), %ecx
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	leaq	-111(%rbp), %rsi
	cmovneq	-96(%rbp), %rsi
	testb	%cl, %cl
	cmovneq	-104(%rbp), %rdx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %r14
	leaq	24(%rbx), %rcx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	movb	$10, -64(%rbp)
	leaq	-63(%rbp), %rdx
	movl	$1700946284, -63(%rbp)
	movw	$108, -59(%rbp)
	incq	%rcx
	testb	$1, 24(%rbx)
	cmovneq	40(%rbx), %rcx
	leaq	51684(%rip), %rsi ## literal pool for: "\"%s\": \"%s\""
	leaq	-88(%rbp), %rdi
	xorl	%eax, %eax
	callq	__ZN9benchmark9StrFormatEPKcz ## benchmark::StrFormat(char const*, ...)
	movzbl	-88(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	leaq	-87(%rbp), %rsi
	cmovneq	-72(%rbp), %rsi
	testb	%al, %al
	cmovneq	-80(%rbp), %rdx
	movq	%r14, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -88(%rbp)
	je	0x100021a83
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x100021a92
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movb	$10, -88(%rbp)
	leaq	-88(%rbp), %rsi
	movl	$1, %edx
	movq	%r12, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -112(%rbp)
	je	0x100021ab6
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$104, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x100021cce
	jmp	0x100021cd7
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100021cdd
	jmp	0x100021d0f
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x100021cce
	jmp	0x100021cd7
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100021cdd
	jmp	0x100021d0f
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x100021cce
	jmp	0x100021cd7
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100021cdd
	jmp	0x100021d0f
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x100021cce
	jmp	0x100021cd7
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100021cdd
	jmp	0x100021d0f
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x100021cce
	jmp	0x100021cd7
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x100021cce
	jmp	0x100021cd7
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100021cdd
	jmp	0x100021d0f
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100021cdd
	jmp	0x100021d0f
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x100021cce
	jmp	0x100021cd7
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100021cdd
	jmp	0x100021d0f
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x100021cce
	jmp	0x100021cd7
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100021cdd
	jmp	0x100021d0f
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x100021cce
	jmp	0x100021cd7
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100021cdd
	jmp	0x100021d0f
	movq	%rax, %rbx
	testb	$1, -136(%rbp)
	jne	0x100021c7d
	jmp	0x100021cd7
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100021cdd
	jmp	0x100021d0f
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100021cdd
	jmp	0x100021d0f
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100021cdd
	jmp	0x100021d0f
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100021cdd
	jmp	0x100021d0f
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	je	0x100021c74
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -136(%rbp)
	je	0x100021cd7
	movq	-120(%rbp), %rdi
	jmp	0x100021cd2
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x100021cce
	jmp	0x100021cd7
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100021cdd
	jmp	0x100021d0f
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x100021cce
	jmp	0x100021cd7
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100021cdd
	jmp	0x100021d0f
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x100021cce
	jmp	0x100021cd7
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	jne	0x100021cce
	jmp	0x100021cd7
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	je	0x100021cd7
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x100021d0f
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -112(%rbp)
	jne	0x100021d15
	jmp	0x100021d1e
	jmp	0x100021d0c
	movq	%rax, %rbx
	testb	$1, -88(%rbp)
	je	0x100021d0f
	movq	-72(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -112(%rbp)
	jne	0x100021d15
	jmp	0x100021d1e
	jmp	0x100021d0c
	movq	%rax, %rbx
	testb	$1, -112(%rbp)
	je	0x100021d1e
	movq	-96(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark12JSONReporter8FinalizeEv:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	8(%rdi), %rdi
	leaq	50871(%rip), %rsi ## literal pool for: "\n  ]\n}\n"
	movl	$7, %edx
	popq	%rbp
	jmp	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	nopw	(%rax,%rax)
__ZN9benchmark12_GLOBAL__N_18FormatKVERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEd:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$328, %rsp
	movsd	%xmm0, -80(%rbp)
	movq	%rsi, %rbx
	movq	%rdi, -72(%rbp)
	leaq	-240(%rbp), %rdi
	movq	54314(%rip), %r15
	leaq	64(%r15), %r14
	movq	%r14, -352(%rbp)
	leaq	-344(%rbp), %r13
	movq	54049(%rip), %rax
	leaq	64(%rax), %rcx
	movq	%rcx, -240(%rbp)
	addq	$24, %rax
	movq	%rax, %xmm0
	movdqa	%xmm0, -368(%rbp)
	movq	%r13, %rsi
	callq	0x100029710 ## symbol stub for: __ZNSt3__18ios_base4initEPv
	movq	$0, -104(%rbp)
	movl	$4294967295, -96(%rbp)
	leaq	24(%r15), %r12
	movq	%r12, -368(%rbp)
	addq	$104, %r15
	movq	%r15, -240(%rbp)
	movq	%r14, -352(%rbp)
	movq	%r13, %rdi
	callq	0x10002967a ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
	movq	%r13, %rdi
	movq	54135(%rip), %r13
	addq	$16, %r13
	movq	%r13, -344(%rbp)
	movq	$0, -256(%rbp)
	movq	$0, -264(%rbp)
	movq	$0, -272(%rbp)
	movq	$0, -280(%rbp)
	movl	$24, -248(%rbp)
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	leaq	-64(%rbp), %rsi
	callq	__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	testb	$1, -64(%rbp)
	je	0x100021e63
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-352(%rbp), %rdi
	movb	$34, -64(%rbp)
	leaq	-64(%rbp), %rsi
	movl	$1, %edx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	(%rbx), %ecx
	leaq	1(%rbx), %rsi
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	cmovneq	16(%rbx), %rsi
	testb	%cl, %cl
	cmovneq	8(%rbx), %rdx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	50573(%rip), %rsi ## literal pool for: "\": "
	movl	$3, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	-352(%rbp), %rax
	movq	-24(%rax), %rcx
	movl	$4294967035, %edx
	andl	-344(%rbp,%rcx), %edx
	orl	$256, %edx
	movl	%edx, -344(%rbp,%rcx)
	movq	-24(%rax), %rax
	movq	$16, -336(%rbp,%rax)
	leaq	-352(%rbp), %rdi
	movq	-80(%rbp), %xmm0
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	movq	-72(%rbp), %rdi
	leaq	-344(%rbp), %rsi
	callq	__ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str() const
	movq	%r12, -368(%rbp)
	movq	%r15, -240(%rbp)
	movq	%r14, -352(%rbp)
	movq	%r13, -344(%rbp)
	testb	$1, -280(%rbp)
	je	0x100021f3a
	movq	-264(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-344(%rbp), %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	53675(%rip), %rsi
	addq	$8, %rsi
	leaq	-368(%rbp), %rdi
	callq	0x100029662 ## symbol stub for: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
	leaq	-240(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	addq	$328, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	jmp	0x100021fa6
	jmp	0x100021fa6
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x100021fc5
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -280(%rbp)
	jne	0x100021fce
	jmp	0x100021fda
	movq	%rax, %rbx
	jmp	0x100021fe6
	movq	%rax, %rbx
	jmp	0x100021ffd
	movq	%rax, %rbx
	movq	%r12, -368(%rbp)
	movq	%r15, -240(%rbp)
	movq	%r14, -352(%rbp)
	movq	%r13, -344(%rbp)
	testb	$1, -280(%rbp)
	je	0x100021fda
	movq	-264(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-344(%rbp), %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	53515(%rip), %rsi
	addq	$8, %rsi
	leaq	-368(%rbp), %rdi
	callq	0x100029662 ## symbol stub for: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
	leaq	-240(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark12JSONReporterD1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark17BenchmarkReporterD2Ev ## benchmark::BenchmarkReporter::~BenchmarkReporter()
	nopw	(%rax,%rax)
__ZN9benchmark12JSONReporterD0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	callq	__ZN9benchmark17BenchmarkReporterD2Ev ## benchmark::BenchmarkReporter::~BenchmarkReporter()
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopl	(%rax)
__GLOBAL__sub_I_json_reporter.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark8internal17InitializeStreamsEv ## benchmark::internal::InitializeStreams()
	nop
	nop
	nop
	nop
	nop
	nop
__ZN9benchmark17BenchmarkReporterC2Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	leaq	55453(%rip), %rax
	movq	%rax, (%rdi)
	movq	53226(%rip), %xmm0 ## literal pool symbol address: __ZNSt3__14cerrE
	movq	53234(%rip), %xmm1 ## literal pool symbol address: __ZNSt3__14coutE
	punpcklqdq	%xmm0, %xmm1
	movdqu	%xmm1, 8(%rdi)
	popq	%rbp
	retq
	nopl	(%rax)
__ZN9benchmark17BenchmarkReporterD2Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZN9benchmark17BenchmarkReporterD1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	ud2
	nopw	%cs:(%rax,%rax)
__ZN9benchmark17BenchmarkReporterD0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	ud2
	nopw	%cs:(%rax,%rax)
__ZN9benchmark17BenchmarkReporter17PrintBasicContextEPNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_7ContextE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	53058(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x10002210e
	movq	53045(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10002210e
	movq	53525(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	53015(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	53499(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	0x10002212e
	leaq	49960(%rip), %rsi ## literal pool for: "cannot be null"
	movl	$14, %edx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	-64(%rbp), %rdi
	callq	__ZN9benchmark19LocalDateTimeStringEv ## benchmark::LocalDateTimeString()
	movzbl	-64(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	leaq	-63(%rbp), %rsi
	cmovneq	-48(%rbp), %rsi
	testb	%al, %al
	cmovneq	-56(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	47486(%rip), %rsi ## literal pool for: "\n"
	movl	$1, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -64(%rbp)
	je	0x10002217e
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	$0, 61610(%rip)
	je	0x1000221d0
	leaq	48282(%rip), %rsi ## literal pool for: "Running "
	movl	$8, %edx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %r15
	movq	__ZN9benchmark17BenchmarkReporter7Context15executable_nameE(%rip), %r12 ## benchmark::BenchmarkReporter::Context::executable_name
	movq	%r12, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%rax, %rdx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	47389(%rip), %rsi ## literal pool for: "\n"
	movl	$1, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	(%r14), %r14
	leaq	49793(%rip), %rsi ## literal pool for: "Run on ("
	movl	$8, %edx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movl	(%r14), %esi
	movq	%rax, %rdi
	callq	0x100029650 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
	leaq	49771(%rip), %rsi ## literal pool for: " X "
	movl	$3, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movsd	8(%r14), %xmm0
	divsd	33404(%rip), %xmm0
	movq	%rax, %rdi
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	leaq	49733(%rip), %rsi ## literal pool for: " MHz CPU "
	movl	$9, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	xorl	%edx, %edx
	cmpl	$1, (%r14)
	setg	%dl
	leaq	49714(%rip), %rcx ## literal pool for: "s"
	leaq	48230(%rip), %rsi ## literal pool for: ""
	cmovgq	%rcx, %rsi
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	leaq	49690(%rip), %rsi ## literal pool for: ")\n"
	movl	$2, %edx
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	24(%r14), %rax
	cmpq	16(%r14), %rax
	je	0x1000223b6
	leaq	49659(%rip), %rsi ## literal pool for: "CPU Caches:\n"
	movl	$12, %edx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	16(%r14), %r12
	movq	24(%r14), %r13
	cmpq	%r13, %r12
	je	0x1000223b6
	leaq	49639(%rip), %r15 ## literal pool for: " "
	nopw	%cs:(%rax,%rax)
	movl	$3, %edx
	movq	%rbx, %rdi
	leaq	49605(%rip), %rsi ## literal pool for: "  L"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movl	24(%r12), %esi
	movq	%rax, %rdi
	callq	0x100029650 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
	movl	$1, %edx
	movq	%rax, %rdi
	movq	%r15, %rsi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movzbl	(%r12), %ecx
	leaq	1(%r12), %rsi
	movq	%rcx, %rdx
	shrq	%rdx
	andb	$1, %cl
	cmovneq	8(%r12), %rdx
	testb	%cl, %cl
	cmovneq	16(%r12), %rsi
	movq	%rax, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movl	$1, %edx
	movq	%rax, %rdi
	movq	%r15, %rsi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movslq	28(%r12), %rcx
	imulq	$274877907, %rcx, %rsi
	movq	%rsi, %rcx
	shrq	$63, %rcx
	sarq	$38, %rsi
	addl	%ecx, %esi
	movq	%rax, %rdi
	callq	0x100029650 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
	movl	$1, %edx
	movq	%rax, %rdi
	leaq	49472(%rip), %rsi ## literal pool for: "K"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	cmpl	$0, 32(%r12)
	je	0x100022395
	movl	$3, %edx
	movq	%rbx, %rdi
	leaq	49446(%rip), %rsi ## literal pool for: " (x"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rcx
	movl	(%r14), %eax
	cltd
	idivl	32(%r12)
	movq	%rcx, %rdi
	movl	%eax, %esi
	callq	0x100029650 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
	movl	$1, %edx
	movq	%rax, %rdi
	leaq	49408(%rip), %rsi ## literal pool for: ")"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movl	$1, %edx
	movq	%rbx, %rdi
	leaq	46908(%rip), %rsi ## literal pool for: "\n"
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	addq	$40, %r12
	cmpq	%r12, %r13
	jne	0x1000222b0
	cmpb	$0, 40(%r14)
	je	0x1000223d1
	leaq	49358(%rip), %rsi ## literal pool for: "***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n"
	movl	$119, %edx
	movq	%rbx, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x1000223f2
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	(%rax,%rax)
__ZN9benchmark17BenchmarkReporter7ContextC2Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	callq	__ZN9benchmark7CPUInfo3GetEv ## benchmark::CPUInfo::Get()
	movq	%rax, (%rbx)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZN9benchmark17BenchmarkReporter7ContextC1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	callq	__ZN9benchmark7CPUInfo3GetEv ## benchmark::CPUInfo::Get()
	movq	%rax, (%rbx)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZNK9benchmark17BenchmarkReporter3Run19GetAdjustedRealTimeEv:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	88(%rdi), %edx
	xorl	%eax, %eax
	cmpl	$1, %edx
	sete	%cl
	cmpl	$2, %edx
	je	0x100022464
	movb	%cl, %al
	leaq	32627(%rip), %rcx
	movsd	(%rcx,%rax,8), %xmm0
	jmp	0x10002246c
	movsd	32636(%rip), %xmm0
	mulsd	96(%rdi), %xmm0
	movq	80(%rdi), %rax
	testq	%rax, %rax
	je	0x100022483
	cvtsi2sdq	%rax, %xmm1
	divsd	%xmm1, %xmm0
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNK9benchmark17BenchmarkReporter3Run18GetAdjustedCPUTimeEv:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	88(%rdi), %edx
	xorl	%eax, %eax
	cmpl	$1, %edx
	sete	%cl
	cmpl	$2, %edx
	je	0x1000224b4
	movb	%cl, %al
	leaq	32547(%rip), %rcx
	movsd	(%rcx,%rax,8), %xmm0
	jmp	0x1000224bc
	movsd	32556(%rip), %xmm0
	mulsd	104(%rdi), %xmm0
	movq	80(%rdi), %rax
	testq	%rax, %rax
	je	0x1000224d3
	cvtsi2sdq	%rax, %xmm1
	divsd	%xmm1, %xmm0
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__GLOBAL__sub_I_reporter.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark8internal17InitializeStreamsEv ## benchmark::internal::InitializeStreams()
	nop
	nop
	nop
	nop
	nop
	nop
__ZN9benchmark20SleepForMicrosecondsEi:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	subq	$24, %rsp
	movslq	%edi, %rax
	imulq	$1125899907, %rax, %rcx
	movq	%rcx, %rdx
	shrq	$63, %rdx
	sarq	$50, %rcx
	addl	%edx, %ecx
	movslq	%ecx, %rcx
	movq	%rcx, -24(%rbp)
	imull	$1000000, %ecx, %ecx
	subl	%ecx, %eax
	imull	$1000, %eax, %eax
	cltq
	movq	%rax, -16(%rbp)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rsi
	callq	0x100029830 ## symbol stub for: _nanosleep
	testl	%eax, %eax
	je	0x100022559
	leaq	-24(%rbp), %rbx
	nop
	callq	0x10002978e ## symbol stub for: ___error
	cmpl	$4, (%rax)
	jne	0x100022559
	movq	%rbx, %rdi
	movq	%rbx, %rsi
	callq	0x100029830 ## symbol stub for: _nanosleep
	testl	%eax, %eax
	jne	0x100022540
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	retq
__ZN9benchmark20SleepForMillisecondsEi:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	subq	$24, %rsp
	imull	$1000, %edi, %eax
	movslq	%edi, %rcx
	imulq	$274877907, %rcx, %rcx
	movq	%rcx, %rdx
	shrq	$63, %rdx
	sarq	$38, %rcx
	addl	%edx, %ecx
	movslq	%ecx, %rcx
	movq	%rcx, -24(%rbp)
	cltq
	imulq	$1125899907, %rax, %rcx
	movq	%rcx, %rdx
	shrq	$63, %rdx
	sarq	$50, %rcx
	addl	%edx, %ecx
	imull	$1000000, %ecx, %ecx
	subl	%ecx, %eax
	imull	$1000, %eax, %eax
	cltq
	movq	%rax, -16(%rbp)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rsi
	callq	0x100029830 ## symbol stub for: _nanosleep
	testl	%eax, %eax
	je	0x1000225e9
	leaq	-24(%rbp), %rbx
	nopl	(%rax,%rax)
	callq	0x10002978e ## symbol stub for: ___error
	cmpl	$4, (%rax)
	jne	0x1000225e9
	movq	%rbx, %rdi
	movq	%rbx, %rsi
	callq	0x100029830 ## symbol stub for: _nanosleep
	testl	%eax, %eax
	jne	0x1000225d0
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	retq
__ZN9benchmark15SleepForSecondsEd:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	subq	$24, %rsp
	mulsd	32399(%rip), %xmm0
	cvttsd2si	%xmm0, %eax
	cltq
	imulq	$1125899907, %rax, %rcx
	movq	%rcx, %rdx
	shrq	$63, %rdx
	sarq	$50, %rcx
	addl	%edx, %ecx
	movslq	%ecx, %rcx
	movq	%rcx, -24(%rbp)
	imull	$1000000, %ecx, %ecx
	subl	%ecx, %eax
	imull	$1000, %eax, %eax
	cltq
	movq	%rax, -16(%rbp)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rsi
	callq	0x100029830 ## symbol stub for: _nanosleep
	testl	%eax, %eax
	je	0x100022669
	leaq	-24(%rbp), %rbx
	nopw	(%rax,%rax)
	callq	0x10002978e ## symbol stub for: ___error
	cmpl	$4, (%rax)
	jne	0x100022669
	movq	%rbx, %rdi
	movq	%rbx, %rsi
	callq	0x100029830 ## symbol stub for: _nanosleep
	testl	%eax, %eax
	jne	0x100022650
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	retq
__GLOBAL__sub_I_sleep.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark8internal17InitializeStreamsEv ## benchmark::internal::InitializeStreams()
	nop
	nop
	nop
	nop
	nop
	nop
__ZN9benchmark14StatisticsMeanERKNSt3__16vectorIdNS0_9allocatorIdEEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	(%rdi), %rcx
	movq	8(%rdi), %rax
	cmpq	%rax, %rcx
	je	0x100022742
	leaq	-8(%rax), %rsi
	subq	%rcx, %rsi
	movl	%esi, %edi
	shrl	$3, %edi
	incl	%edi
	andq	$7, %rdi
	je	0x100022747
	negq	%rdi
	xorpd	%xmm1, %xmm1
	movq	%rcx, %rdx
	nopw	%cs:(%rax,%rax)
	addsd	(%rdx), %xmm1
	addq	$8, %rdx
	incq	%rdi
	jne	0x1000226c0
	cmpq	$56, %rsi
	jb	0x100022710
	nopw	%cs:(%rax,%rax)
	addsd	(%rdx), %xmm1
	addsd	8(%rdx), %xmm1
	addsd	16(%rdx), %xmm1
	addsd	24(%rdx), %xmm1
	addsd	32(%rdx), %xmm1
	addsd	40(%rdx), %xmm1
	addsd	48(%rdx), %xmm1
	addsd	56(%rdx), %xmm1
	addq	$64, %rdx
	cmpq	%rax, %rdx
	jne	0x1000226e0
	subq	%rcx, %rax
	sarq	$3, %rax
	movq	%rax, %xmm2
	punpckldq	30412(%rip), %xmm2
	subpd	30420(%rip), %xmm2
	haddpd	%xmm2, %xmm2
	movsd	30352(%rip), %xmm0
	divsd	%xmm2, %xmm0
	mulsd	%xmm1, %xmm0
	popq	%rbp
	retq
	xorps	%xmm0, %xmm0
	popq	%rbp
	retq
	xorpd	%xmm1, %xmm1
	movq	%rcx, %rdx
	cmpq	$56, %rsi
	jae	0x1000226e0
	jmp	0x100022710
	nopw	%cs:(%rax,%rax)
__ZN9benchmark16StatisticsMedianERKNSt3__16vectorIdNS0_9allocatorIdEEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	movq	%rdi, %r15
	movq	(%r15), %rbx
	movq	8(%r15), %rax
	movq	%rax, %r14
	subq	%rbx, %r14
	movq	%r14, %r13
	sarq	$3, %r13
	cmpq	$2, %r13
	ja	0x10002283e
	cmpq	%rax, %rbx
	je	0x100022891
	addq	$-8, %r14
	movl	%r14d, %ecx
	shrl	$3, %ecx
	incl	%ecx
	andq	$7, %rcx
	je	0x100022940
	negq	%rcx
	xorpd	%xmm2, %xmm2
	nopl	(%rax,%rax)
	addsd	(%rbx), %xmm2
	addq	$8, %rbx
	incq	%rcx
	jne	0x1000227c0
	cmpq	$56, %r14
	jb	0x100022810
	nopw	%cs:(%rax,%rax)
	addsd	(%rbx), %xmm2
	addsd	8(%rbx), %xmm2
	addsd	16(%rbx), %xmm2
	addsd	24(%rbx), %xmm2
	addsd	32(%rbx), %xmm2
	addsd	40(%rbx), %xmm2
	addsd	48(%rbx), %xmm2
	addsd	56(%rbx), %xmm2
	addq	$64, %rbx
	cmpq	%rax, %rbx
	jne	0x1000227e0
	movq	%r13, %xmm1
	punpckldq	30163(%rip), %xmm1
	subpd	30171(%rip), %xmm1
	haddpd	%xmm1, %xmm1
	movsd	30103(%rip), %xmm0
	divsd	%xmm1, %xmm0
	mulsd	%xmm2, %xmm0
	jmp	0x100022931
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -80(%rbp)
	movq	$0, -64(%rbp)
	movq	%r13, %rax
	shrq	$61, %rax
	jne	0x100022953
	movq	%r14, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r12
	movq	%r12, -72(%rbp)
	movq	%r12, -80(%rbp)
	leaq	(%r12,%r13,8), %rax
	movq	%rax, -64(%rbp)
	testq	%r14, %r14
	jle	0x10002289a
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	addq	%r12, %r14
	movq	%r14, -72(%rbp)
	jmp	0x10002289d
	xorpd	%xmm0, %xmm0
	jmp	0x100022931
	movq	%r12, %r14
	movabsq	$4611686018427387902, %rax
	andq	%rax, %r13
	leaq	(%r12,%r13,4), %rbx
	leaq	-48(%rbp), %rcx
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	__ZNSt3__113__nth_elementIRNS_6__lessIddEENS_11__wrap_iterIPdEEEEvT0_S7_S7_T_ ## void std::__1::__nth_element<std::__1::__less<double, double>&, std::__1::__wrap_iter<double*> >(std::__1::__wrap_iter<double*>, std::__1::__wrap_iter<double*>, std::__1::__wrap_iter<double*>, std::__1::__less<double, double>&)
	movq	8(%r15), %rax
	subq	(%r15), %rax
	sarq	$3, %rax
	testb	$1, %al
	jne	0x100022911
	movabsq	$4611686018427387902, %rcx
	andq	%rcx, %rax
	movq	-80(%rbp), %rdi
	movq	-72(%rbp), %rdx
	leaq	-8(%rdi,%rax,4), %r14
	leaq	-48(%rbp), %rcx
	movq	%r14, %rsi
	callq	__ZNSt3__113__nth_elementIRNS_6__lessIddEENS_11__wrap_iterIPdEEEEvT0_S7_S7_T_ ## void std::__1::__nth_element<std::__1::__less<double, double>&, std::__1::__wrap_iter<double*> >(std::__1::__wrap_iter<double*>, std::__1::__wrap_iter<double*>, std::__1::__wrap_iter<double*>, std::__1::__less<double, double>&)
	movsd	(%rbx), %xmm0
	addsd	(%r14), %xmm0
	mulsd	29906(%rip), %xmm0
	movq	-80(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x10002291e
	jmp	0x100022931
	movsd	(%rbx), %xmm0
	movq	-80(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100022931
	movq	%rdi, -72(%rbp)
	movsd	%xmm0, -88(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movsd	-88(%rbp), %xmm0
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorpd	%xmm2, %xmm2
	cmpq	$56, %r14
	jae	0x1000227e0
	jmp	0x100022810
	leaq	-80(%rbp), %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	jmp	0x100022960
	jmp	0x100022960
	movq	%rax, %rbx
	movq	-80(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100022975
	movq	%rdi, -72(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax)
__ZN9benchmark16StatisticsStdDevERKNSt3__16vectorIdNS0_9allocatorIdEEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	(%rdi), %rax
	movq	8(%rdi), %rcx
	cmpq	%rcx, %rax
	je	0x100022b2a
	leaq	-8(%rcx), %rdx
	subq	%rax, %rdx
	movl	%edx, %edi
	shrl	$3, %edi
	incl	%edi
	andq	$7, %rdi
	je	0x100022b30
	negq	%rdi
	xorpd	%xmm0, %xmm0
	movq	%rax, %rsi
	nopw	%cs:(%rax,%rax)
	addsd	(%rsi), %xmm0
	addq	$8, %rsi
	incq	%rdi
	jne	0x1000229c0
	cmpq	$56, %rdx
	jb	0x100022a10
	nopw	%cs:(%rax,%rax)
	addsd	(%rsi), %xmm0
	addsd	8(%rsi), %xmm0
	addsd	16(%rsi), %xmm0
	addsd	24(%rsi), %xmm0
	addsd	32(%rsi), %xmm0
	addsd	40(%rsi), %xmm0
	addsd	48(%rsi), %xmm0
	addsd	56(%rsi), %xmm0
	addq	$64, %rsi
	cmpq	%rcx, %rsi
	jne	0x1000229e0
	movq	%rcx, %rsi
	subq	%rax, %rsi
	sarq	$3, %rsi
	cmpq	$1, %rsi
	je	0x100022b2a
	movq	%rsi, %xmm1
	punpckldq	29631(%rip), %xmm1
	subpd	29639(%rip), %xmm1
	haddpd	%xmm1, %xmm1
	movsd	29571(%rip), %xmm2
	divsd	%xmm1, %xmm2
	movl	%edx, %esi
	shrl	$3, %esi
	incl	%esi
	andq	$7, %rsi
	je	0x100022b4f
	negq	%rsi
	xorpd	%xmm3, %xmm3
	nopw	%cs:(%rax,%rax)
	movsd	(%rax), %xmm4
	mulsd	%xmm4, %xmm4
	addsd	%xmm4, %xmm3
	addq	$8, %rax
	incq	%rsi
	jne	0x100022a70
	mulsd	%xmm2, %xmm0
	cmpq	$56, %rdx
	jb	0x100022b00
	nop
	movsd	(%rax), %xmm4
	movsd	8(%rax), %xmm5
	mulsd	%xmm4, %xmm4
	addsd	%xmm3, %xmm4
	mulsd	%xmm5, %xmm5
	addsd	%xmm4, %xmm5
	movsd	16(%rax), %xmm3
	mulsd	%xmm3, %xmm3
	addsd	%xmm5, %xmm3
	movsd	24(%rax), %xmm4
	mulsd	%xmm4, %xmm4
	addsd	%xmm3, %xmm4
	movsd	32(%rax), %xmm3
	mulsd	%xmm3, %xmm3
	addsd	%xmm4, %xmm3
	movsd	40(%rax), %xmm4
	mulsd	%xmm4, %xmm4
	addsd	%xmm3, %xmm4
	movsd	48(%rax), %xmm5
	mulsd	%xmm5, %xmm5
	addsd	%xmm4, %xmm5
	movsd	56(%rax), %xmm3
	mulsd	%xmm3, %xmm3
	addsd	%xmm5, %xmm3
	addq	$64, %rax
	cmpq	%rcx, %rax
	jne	0x100022a90
	mulsd	%xmm3, %xmm2
	movsd	31156(%rip), %xmm3
	addsd	%xmm1, %xmm3
	divsd	%xmm3, %xmm1
	mulsd	%xmm0, %xmm0
	subsd	%xmm0, %xmm2
	mulsd	%xmm1, %xmm2
	xorpd	%xmm0, %xmm0
	ucomisd	%xmm2, %xmm0
	jbe	0x100022b46
	xorpd	%xmm0, %xmm0
	popq	%rbp
	retq
	xorpd	%xmm0, %xmm0
	movq	%rax, %rsi
	cmpq	$56, %rdx
	jae	0x1000229e0
	jmp	0x100022a10
	xorps	%xmm0, %xmm0
	sqrtsd	%xmm2, %xmm0
	popq	%rbp
	retq
	xorpd	%xmm3, %xmm3
	mulsd	%xmm2, %xmm0
	cmpq	$56, %rdx
	jae	0x100022a90
	jmp	0x100022b00
	nopw	%cs:(%rax,%rax)
__ZN9benchmark12ComputeStatsERKNSt3__16vectorINS_17BenchmarkReporter3RunENS0_9allocatorIS3_EEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$488, %rsp
	movq	%rsi, %r13
	movq	50850(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	movq	%rax, -48(%rbp)
	movq	$0, 16(%rdi)
	movq	$0, 8(%rdi)
	movq	$0, (%rdi)
	movq	(%r13), %rcx
	movq	8(%r13), %rsi
	xorl	%eax, %eax
	cmpq	%rsi, %rcx
	je	0x100022bd4
	movq	%rcx, %rdx
	nop
	cmpb	$1, 48(%rdx)
	sbbq	$-1, %rax
	addq	$200, %rdx
	cmpq	%rdx, %rsi
	jne	0x100022bc0
	subq	%rcx, %rsi
	sarq	$3, %rsi
	movabsq	$-8116567392432202711, %rbx
	imulq	%rbx, %rsi
	movq	%rsi, %rcx
	subq	%rax, %rcx
	cmpq	$2, %rcx
	jae	0x100022c1e
	movq	50740(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	cmpq	-48(%rbp), %rax
	jne	0x100023bbe
	movq	%rdi, %rax
	addq	$488, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rdi, -152(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -304(%rbp)
	movq	$0, -288(%rbp)
	movaps	%xmm0, -272(%rbp)
	movq	$0, -256(%rbp)
	movaps	%xmm0, -240(%rbp)
	movq	$0, -224(%rbp)
	movaps	%xmm0, -208(%rbp)
	movq	$0, -192(%rbp)
	leaq	-304(%rbp), %rdi
	callq	__ZNSt3__16vectorIdNS_9allocatorIdEEE7reserveEm ## std::__1::vector<double, std::__1::allocator<double> >::reserve(unsigned long)
	movq	8(%r13), %rsi
	subq	(%r13), %rsi
	sarq	$3, %rsi
	imulq	%rbx, %rsi
	leaq	-272(%rbp), %rdi
	callq	__ZNSt3__16vectorIdNS_9allocatorIdEEE7reserveEm ## std::__1::vector<double, std::__1::allocator<double> >::reserve(unsigned long)
	movq	8(%r13), %rsi
	subq	(%r13), %rsi
	sarq	$3, %rsi
	imulq	%rbx, %rsi
	leaq	-240(%rbp), %rdi
	callq	__ZNSt3__16vectorIdNS_9allocatorIdEEE7reserveEm ## std::__1::vector<double, std::__1::allocator<double> >::reserve(unsigned long)
	movq	8(%r13), %rsi
	subq	(%r13), %rsi
	sarq	$3, %rsi
	imulq	%rbx, %rsi
	leaq	-208(%rbp), %rdi
	callq	__ZNSt3__16vectorIdNS_9allocatorIdEEE7reserveEm ## std::__1::vector<double, std::__1::allocator<double> >::reserve(unsigned long)
	movq	(%r13), %rsi
	movq	80(%rsi), %rax
	movq	%rax, -520(%rbp)
	leaq	-120(%rbp), %rax
	movq	$0, -112(%rbp)
	movq	$0, -120(%rbp)
	movq	%rax, -128(%rbp)
	movq	8(%r13), %rax
	movq	%rax, -528(%rbp)
	cmpq	%rax, %rsi
	movq	%r13, -136(%rbp)
	je	0x100023586
	movq	176(%rsi), %rdx
	movq	%rsi, -312(%rbp)
	leaq	184(%rsi), %rax
	movq	%rax, -104(%rbp)
	cmpq	%rax, %rdx
	je	0x1000231d8
	nopw	%cs:(%rax,%rax)
	leaq	32(%rdx), %rax
	movq	%rax, -144(%rbp)
	movq	-120(%rbp), %r12
	testq	%r12, %r12
	movq	%rdx, -96(%rbp)
	je	0x100022f00
	movzbl	32(%rdx), %eax
	movq	%rax, %rbx
	shrq	%rbx
	andb	$1, %al
	cmovneq	40(%rdx), %rbx
	movq	-144(%rbp), %rcx
	leaq	1(%rcx), %r14
	testb	%al, %al
	cmovneq	48(%rdx), %r14
	leaq	-120(%rbp), %r15
	nopw	%cs:(%rax,%rax)
	movzbl	32(%r12), %eax
	movq	%rax, %r13
	shrq	%r13
	testb	$1, %al
	cmovneq	40(%r12), %r13
	cmpq	%rbx, %r13
	movq	%rbx, %rdx
	ja	0x100022daf
	movq	%r13, %rdx
	testq	%rdx, %rdx
	je	0x100022dd0
	leaq	32(%r12), %rdi
	incq	%rdi
	testb	$1, %al
	cmovneq	48(%r12), %rdi
	movq	%r14, %rsi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	jne	0x100022de3
	xorl	%ecx, %ecx
	cmpq	%rbx, %r13
	seta	%dl
	movl	$4294967295, %eax
	jb	0x100022de3
	movb	%dl, %cl
	movl	%ecx, %eax
	leaq	8(%r12), %rcx
	testl	%eax, %eax
	cmovnsq	%r12, %rcx
	cmovnsq	%r12, %r15
	movq	(%rcx), %r12
	testq	%r12, %r12
	jne	0x100022d90
	leaq	-120(%rbp), %rax
	cmpq	%rax, %r15
	movq	-136(%rbp), %r13
	movq	-96(%rbp), %rdx
	je	0x100022f00
	movzbl	32(%r15), %eax
	movq	%rax, %r12
	shrq	%r12
	testb	$1, %al
	cmovneq	40(%r15), %r12
	cmpq	%r12, %rbx
	movq	%rbx, %rdx
	cmovaq	%r12, %rdx
	testq	%rdx, %rdx
	je	0x100022ef0
	leaq	32(%r15), %rsi
	incq	%rsi
	testb	$1, %al
	cmovneq	48(%r15), %rsi
	movq	%r14, %rdi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x100022ef0
	movq	-96(%rbp), %rdx
	js	0x100022f00
	movq	49594(%rip), %rbx ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rbx), %al
	testb	%al, %al
	jne	0x1000231a5
	movq	%rbx, %rdi
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	movq	-96(%rbp), %rdx
	testl	%eax, %eax
	je	0x1000231a5
	movq	50053(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	%rbx, %rdi
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	-96(%rbp), %rdx
	movq	8(%rdx), %rcx
	testq	%rcx, %rcx
	jne	0x1000231c0
	nopl	(%rax,%rax)
	movq	16(%rdx), %rax
	cmpq	%rdx, (%rax)
	je	0x1000231cb
	addq	$16, %rdx
	nopw	%cs:(%rax,%rax)
	movq	(%rdx), %rcx
	movq	16(%rcx), %rax
	cmpq	%rcx, (%rax)
	leaq	16(%rcx), %rdx
	jne	0x100022ed0
	jmp	0x1000231cb
	nopw	%cs:(%rax,%rax)
	cmpq	%r12, %rbx
	movq	-96(%rbp), %rdx
	jae	0x100022e5f
	nopl	(%rax)
	movq	56(%rdx), %rax
	movq	64(%rdx), %rcx
	movq	%rcx, -64(%rbp)
	movq	%rax, -72(%rbp)
	leaq	-512(%rbp), %r15
	movq	%r15, %rdi
	movq	-144(%rbp), %rsi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	movq	-72(%rbp), %rax
	movq	-64(%rbp), %rcx
	leaq	-488(%rbp), %rdx
	movq	%rcx, 8(%rdx)
	movq	%rax, (%rdx)
	movq	$0, 32(%rdx)
	movq	$0, 24(%rdx)
	movq	$0, 16(%rdx)
	leaq	-128(%rbp), %rdi
	leaq	-176(%rbp), %rsi
	movq	%r15, %rdx
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEZN9benchmark12ComputeStatsERKNS_6vectorINS8_17BenchmarkReporter3RunENS5_ISB_EEEEE11CounterStatEENS_19__map_value_compareIS7_SH_NS_4lessIS7_EELb1EEENS5_ISH_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISS_EERKT_ ## std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat> > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	movq	%rax, %r14
	cmpq	$0, (%r14)
	je	0x1000230b0
	movq	-472(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100022f8c
	movq	%rdi, -464(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -512(%rbp)
	je	0x100022fa1
	movq	-496(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-120(%rbp), %r12
	testq	%r12, %r12
	je	0x100023170
	movq	-96(%rbp), %rcx
	movzbl	32(%rcx), %eax
	movq	%rax, %r15
	shrq	%r15
	andb	$1, %al
	cmovneq	40(%rcx), %r15
	movq	-144(%rbp), %r13
	incq	%r13
	testb	%al, %al
	cmovneq	48(%rcx), %r13
	leaq	-120(%rbp), %r14
	nopl	(%rax,%rax)
	movzbl	32(%r12), %eax
	movq	%rax, %rbx
	shrq	%rbx
	testb	$1, %al
	cmovneq	40(%r12), %rbx
	cmpq	%r15, %rbx
	movq	%r15, %rdx
	ja	0x100022fff
	movq	%rbx, %rdx
	testq	%rdx, %rdx
	je	0x100023020
	leaq	32(%r12), %rdi
	incq	%rdi
	testb	$1, %al
	cmovneq	48(%r12), %rdi
	movq	%r13, %rsi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	jne	0x100023033
	xorl	%ecx, %ecx
	cmpq	%r15, %rbx
	seta	%dl
	movl	$4294967295, %eax
	jb	0x100023033
	movb	%dl, %cl
	movl	%ecx, %eax
	leaq	8(%r12), %rcx
	testl	%eax, %eax
	cmovnsq	%r12, %rcx
	cmovnsq	%r12, %r14
	movq	(%rcx), %r12
	testq	%r12, %r12
	jne	0x100022fe0
	leaq	-120(%rbp), %rax
	cmpq	%rax, %r14
	je	0x100023170
	movzbl	32(%r14), %eax
	movq	%rax, %rbx
	shrq	%rbx
	testb	$1, %al
	cmovneq	40(%r14), %rbx
	cmpq	%rbx, %r15
	movq	%r15, %rdx
	cmovaq	%rbx, %rdx
	testq	%rdx, %rdx
	je	0x100023168
	leaq	32(%r14), %rsi
	incq	%rsi
	testb	$1, %al
	cmovneq	48(%r14), %rsi
	movq	%r13, %rdi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x100023168
	js	0x100023170
	jmp	0x100023174
	nopw	%cs:(%rax,%rax)
	movl	$96, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	%rbx, %rdi
	addq	$32, %rdi
	movq	%r15, %rsi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	leaq	-488(%rbp), %rax
	movq	%rax, %rdx
	movq	(%rdx), %rax
	movq	8(%rdx), %rcx
	movq	%rcx, 64(%rbx)
	movq	%rax, 56(%rbx)
	movups	-472(%rbp), %xmm0
	movups	%xmm0, 72(%rbx)
	movq	-456(%rbp), %rax
	movq	%rax, 88(%rbx)
	movq	$0, 32(%rdx)
	movq	$0, 24(%rdx)
	movq	$0, 16(%rdx)
	movq	-176(%rbp), %rax
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	movq	%rax, 16(%rbx)
	movq	%rbx, (%r14)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	0x100023143
	movq	%rax, -128(%rbp)
	movq	(%r14), %rbx
	movq	-120(%rbp), %rdi
	movq	%rbx, %rsi
	callq	__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ ## void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
	incq	-112(%rbp)
	movq	-472(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x100022f80
	jmp	0x100022f8c
	cmpq	%rbx, %r15
	jae	0x100023174
	nopl	(%rax)
	leaq	-120(%rbp), %r14
	addq	$72, %r14
	movq	-136(%rbp), %r13
	movq	8(%r13), %rsi
	subq	(%r13), %rsi
	sarq	$3, %rsi
	movabsq	$-8116567392432202711, %rax
	imulq	%rax, %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__16vectorIdNS_9allocatorIdEEE7reserveEm ## std::__1::vector<double, std::__1::allocator<double> >::reserve(unsigned long)
	movq	-96(%rbp), %rdx
	movq	8(%rdx), %rcx
	testq	%rcx, %rcx
	je	0x100022eb0
	nopw	%cs:(%rax,%rax)
	movq	%rcx, %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	jne	0x1000231c0
	cmpq	-104(%rbp), %rax
	movq	%rax, %rdx
	jne	0x100022d40
	movq	-312(%rbp), %rsi
	addq	$200, %rsi
	cmpq	-528(%rbp), %rsi
	jne	0x100022d12
	movq	(%r13), %rax
	movq	8(%r13), %rsi
	movq	%rax, -104(%rbp)
	movabsq	$-8116567392432202711, %rbx
	cmpq	%rsi, %rax
	je	0x100023586
	movq	%rsi, -312(%rbp)
	jmp	0x1000234fd
	movq	-104(%rbp), %rax
	leaq	96(%rax), %rsi
	movq	-296(%rbp), %rax
	cmpq	-288(%rbp), %rax
	jae	0x100023249
	movq	(%rsi), %rcx
	movq	%rcx, (%rax)
	addq	$8, %rax
	movq	%rax, -296(%rbp)
	jmp	0x100023255
	leaq	-304(%rbp), %rdi
	callq	__ZNSt3__16vectorIdNS_9allocatorIdEEE24__emplace_back_slow_pathIJRKdEEEvDpOT_ ## void std::__1::vector<double, std::__1::allocator<double> >::__emplace_back_slow_path<double const&>(double const&)
	movq	-104(%rbp), %rax
	leaq	104(%rax), %rsi
	movq	-264(%rbp), %rax
	cmpq	-256(%rbp), %rax
	jae	0x100023280
	movq	(%rsi), %rcx
	movq	%rcx, (%rax)
	addq	$8, %rax
	movq	%rax, -264(%rbp)
	jmp	0x10002328c
	leaq	-272(%rbp), %rdi
	callq	__ZNSt3__16vectorIdNS_9allocatorIdEEE24__emplace_back_slow_pathIJRKdEEEvDpOT_ ## void std::__1::vector<double, std::__1::allocator<double> >::__emplace_back_slow_path<double const&>(double const&)
	movq	-104(%rbp), %rax
	leaq	120(%rax), %rsi
	movq	-200(%rbp), %rax
	cmpq	-192(%rbp), %rax
	jae	0x1000232b7
	movq	(%rsi), %rcx
	movq	%rcx, (%rax)
	addq	$8, %rax
	movq	%rax, -200(%rbp)
	jmp	0x1000232c3
	leaq	-208(%rbp), %rdi
	callq	__ZNSt3__16vectorIdNS_9allocatorIdEEE24__emplace_back_slow_pathIJRKdEEEvDpOT_ ## void std::__1::vector<double, std::__1::allocator<double> >::__emplace_back_slow_path<double const&>(double const&)
	movq	-104(%rbp), %rax
	leaq	112(%rax), %rsi
	movq	-232(%rbp), %rax
	cmpq	-224(%rbp), %rax
	jae	0x1000232ee
	movq	(%rsi), %rcx
	movq	%rcx, (%rax)
	addq	$8, %rax
	movq	%rax, -232(%rbp)
	jmp	0x1000232fa
	leaq	-240(%rbp), %rdi
	callq	__ZNSt3__16vectorIdNS_9allocatorIdEEE24__emplace_back_slow_pathIJRKdEEEvDpOT_ ## void std::__1::vector<double, std::__1::allocator<double> >::__emplace_back_slow_path<double const&>(double const&)
	movq	-104(%rbp), %rax
	movq	176(%rax), %r14
	leaq	184(%rax), %rax
	movq	%rax, -144(%rbp)
	cmpq	%rax, %r14
	je	0x100023564
	nopl	(%rax)
	movq	-120(%rbp), %rbx
	testq	%rbx, %rbx
	je	0x100023420
	leaq	32(%r14), %rcx
	movzbl	32(%r14), %eax
	movq	%rax, %r15
	shrq	%r15
	andb	$1, %al
	cmovneq	40(%r14), %r15
	incq	%rcx
	testb	%al, %al
	cmovneq	48(%r14), %rcx
	movq	%rcx, -96(%rbp)
	leaq	-120(%rbp), %r12
	nopw	%cs:(%rax,%rax)
	movzbl	32(%rbx), %eax
	movq	%rax, %r13
	shrq	%r13
	testb	$1, %al
	cmovneq	40(%rbx), %r13
	cmpq	%r15, %r13
	movq	%r15, %rdx
	ja	0x10002337c
	movq	%r13, %rdx
	testq	%rdx, %rdx
	je	0x10002339c
	leaq	32(%rbx), %rdi
	incq	%rdi
	testb	$1, %al
	cmovneq	48(%rbx), %rdi
	movq	-96(%rbp), %rsi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	jne	0x1000233af
	xorl	%ecx, %ecx
	cmpq	%r15, %r13
	seta	%dl
	movl	$4294967295, %eax
	jb	0x1000233af
	movb	%dl, %cl
	movl	%ecx, %eax
	leaq	8(%rbx), %rcx
	testl	%eax, %eax
	cmovnsq	%rbx, %rcx
	cmovnsq	%rbx, %r12
	movq	(%rcx), %rbx
	testq	%rbx, %rbx
	jne	0x100023360
	leaq	-120(%rbp), %rax
	cmpq	%rax, %r12
	movq	-136(%rbp), %r13
	je	0x100023420
	movzbl	32(%r12), %eax
	movq	%rax, %rbx
	shrq	%rbx
	testb	$1, %al
	cmovneq	40(%r12), %rbx
	cmpq	%rbx, %r15
	movq	%r15, %rdx
	cmovaq	%rbx, %rdx
	testq	%rdx, %rdx
	je	0x100023419
	leaq	32(%r12), %rsi
	incq	%rsi
	testb	$1, %al
	cmovneq	48(%r12), %rsi
	movq	-96(%rbp), %rdi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x100023419
	js	0x100023420
	jmp	0x100023424
	cmpq	%rbx, %r15
	jae	0x100023424
	nop
	leaq	-120(%rbp), %r12
	movq	48117(%rip), %rbx ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rbx), %al
	testb	%al, %al
	jne	0x100023453
	movq	%rbx, %rdi
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100023453
	movq	48588(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	%rbx, %rdi
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	leaq	56(%r14), %rsi
	movq	80(%r12), %rax
	cmpq	88(%r12), %rax
	jae	0x1000234b2
	movq	(%rsi), %rcx
	movq	%rcx, (%rax)
	addq	$8, %rax
	movq	%rax, 80(%r12)
	movq	8(%r14), %rcx
	testq	%rcx, %rcx
	jne	0x1000234c7
	movq	16(%r14), %rax
	cmpq	%r14, (%rax)
	movabsq	$-8116567392432202711, %rbx
	je	0x1000234eb
	addq	$16, %r14
	nopw	%cs:(%rax,%rax)
	movq	(%r14), %rcx
	movq	16(%rcx), %rax
	cmpq	%rcx, (%rax)
	leaq	16(%rcx), %r14
	jne	0x1000234a0
	jmp	0x1000234eb
	addq	$72, %r12
	movq	%r12, %rdi
	callq	__ZNSt3__16vectorIdNS_9allocatorIdEEE24__emplace_back_slow_pathIJRKN9benchmark7CounterEEEEvDpOT_ ## void std::__1::vector<double, std::__1::allocator<double> >::__emplace_back_slow_path<benchmark::Counter const&>(benchmark::Counter const&)
	movq	8(%r14), %rcx
	testq	%rcx, %rcx
	je	0x10002347b
	movabsq	$-8116567392432202711, %rbx
	nopw	%cs:(%rax,%rax)
	movq	%rcx, %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	jne	0x1000234e0
	cmpq	-144(%rbp), %rax
	movq	%rax, %r14
	jne	0x100023320
	jmp	0x100023564
	movq	47900(%rip), %r14 ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%r14), %al
	testb	%al, %al
	jne	0x10002352d
	movq	%r14, %rdi
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x10002352d
	movq	48370(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	%r14, %rdi
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movb	(%r14), %al
	testb	%al, %al
	jne	0x100023556
	movq	%r14, %rdi
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100023556
	movq	48329(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	%r14, %rdi
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	-104(%rbp), %rax
	cmpb	$0, 48(%rax)
	je	0x10002321e
	movq	-104(%rbp), %rax
	addq	$200, %rax
	movq	-312(%rbp), %rsi
	movq	%rax, -104(%rbp)
	cmpq	%rsi, %rax
	jne	0x1000234fd
	movq	(%r13), %rsi
	addq	$24, %rsi
	leaq	-72(%rbp), %rdi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	movq	(%r13), %r15
	movq	8(%r13), %r13
	subq	%r15, %r13
	sarq	$3, %r13
	imulq	%rbx, %r13
	cmpq	$2, %r13
	jb	0x100023663
	movzbl	-72(%rbp), %eax
	movq	%rax, %r12
	shrq	%r12
	andb	$1, %al
	leaq	-71(%rbp), %rsi
	cmovneq	-56(%rbp), %rsi
	testb	%al, %al
	cmovneq	-64(%rbp), %r12
	movl	$1, %r14d
	imulq	$200, %r14, %rdi
	movzbl	24(%r15,%rdi), %edx
	movq	%rdx, %rax
	shrq	%rax
	testb	$1, %dl
	movq	32(%r15,%rdi), %rcx
	cmoveq	%rax, %rcx
	cmpq	%r12, %rcx
	jne	0x10002366c
	leaq	24(%r15,%rdi), %rcx
	incq	%rcx
	andb	$1, %dl
	movq	40(%r15,%rdi), %rdi
	cmoveq	%rcx, %rdi
	testb	%dl, %dl
	jne	0x100023640
	testq	%r12, %r12
	je	0x100023657
	negq	%rax
	movq	%rsi, %rdx
	nopl	(%rax)
	movzbl	(%rcx), %ebx
	cmpb	(%rdx), %bl
	jne	0x10002366c
	incq	%rcx
	incq	%rdx
	incq	%rax
	jne	0x100023620
	jmp	0x100023657
	nopw	%cs:(%rax,%rax)
	testq	%r12, %r12
	je	0x100023657
	movq	%r12, %rdx
	movq	%rsi, %rbx
	callq	0x100029818 ## symbol stub for: _memcmp
	movq	%rbx, %rsi
	testl	%eax, %eax
	jne	0x10002366c
	incq	%r14
	cmpq	%r13, %r14
	jb	0x1000235d2
	movq	-136(%rbp), %r12
	jmp	0x100023687
	leaq	43066(%rip), %rsi ## literal pool for: ""
	leaq	-72(%rbp), %rdi
	callq	0x1000295de ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
	movq	-136(%rbp), %r12
	movq	(%r12), %r15
	movq	160(%r15), %rax
	movq	(%rax), %r14
	movq	8(%rax), %r13
	cmpq	%r13, %r14
	je	0x100023b36
	leaq	-456(%rbp), %rax
	leaq	-328(%rbp), %rcx
	xorps	%xmm0, %xmm0
	leaq	44628(%rip), %rdx ## literal pool for: "_"
	leaq	-176(%rbp), %rbx
	movq	%r13, -144(%rbp)
	jmp	0x1000237bd
	movq	-152(%rbp), %rax
	movq	8(%rax), %rdi
	cmpq	16(%rax), %rdi
	je	0x100023705
	leaq	-512(%rbp), %rsi
	callq	__ZN9benchmark17BenchmarkReporter3RunC2ERKS1_ ## benchmark::BenchmarkReporter::Run::Run(benchmark::BenchmarkReporter::Run const&)
	movq	-136(%rbp), %r12
	movq	-144(%rbp), %r13
	movq	-152(%rbp), %rax
	addq	$200, 8(%rax)
	jmp	0x100023722
	movq	%rax, %rdi
	leaq	-512(%rbp), %rsi
	callq	__ZNSt3__16vectorIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ ## void std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::__push_back_slow_path<benchmark::BenchmarkReporter::Run const&>(benchmark::BenchmarkReporter::Run const&)
	movq	-136(%rbp), %r12
	movq	-144(%rbp), %r13
	movq	-328(%rbp), %rsi
	leaq	-336(%rbp), %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -456(%rbp)
	jne	0x10002375e
	testb	$1, -488(%rbp)
	jne	0x100023773
	testb	$1, -512(%rbp)
	jne	0x100023788
	addq	$32, %r14
	cmpq	%r13, %r14
	jne	0x1000237a1
	jmp	0x100023b36
	movq	-440(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -488(%rbp)
	je	0x100023747
	movq	-472(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -512(%rbp)
	je	0x100023750
	movq	-496(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$32, %r14
	cmpq	%r13, %r14
	je	0x100023b36
	movq	(%r12), %r15
	leaq	-456(%rbp), %rax
	leaq	-328(%rbp), %rcx
	xorps	%xmm0, %xmm0
	leaq	44365(%rip), %rdx ## literal pool for: "_"
	movq	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	movaps	%xmm0, -480(%rbp)
	movaps	%xmm0, -496(%rbp)
	movaps	%xmm0, -512(%rbp)
	movb	$0, -464(%rbp)
	movq	$1, -432(%rbp)
	movl	$0, -424(%rbp)
	movw	$0, -344(%rbp)
	movq	$0, (%rcx)
	movq	$0, 8(%rcx)
	movl	$0, 80(%rax)
	movq	$0, 72(%rax)
	movq	$0, 64(%rax)
	movq	$0, 56(%rax)
	movq	$0, 48(%rax)
	movq	$0, 40(%rax)
	movq	$0, 96(%rax)
	movq	$0, 88(%rax)
	movq	%rcx, -336(%rbp)
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	__ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_ ## std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*)
	movzbl	(%r14), %eax
	leaq	1(%r14), %rsi
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	16(%r14), %rsi
	testb	%al, %al
	cmovneq	8(%r14), %rdx
	movq	%rbx, %rdi
	callq	0x1000295d8 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
	movb	(%rax), %bl
	movq	8(%rax), %rcx
	movq	%rcx, -81(%rbp)
	movq	1(%rax), %rcx
	movq	%rcx, -88(%rbp)
	movq	16(%rax), %r15
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	movq	$0, 16(%rax)
	testb	$1, -512(%rbp)
	jne	0x1000238d3
	movw	$0, -512(%rbp)
	jmp	0x1000238e8
	movq	-496(%rbp), %rax
	movb	$0, (%rax)
	movq	$0, -504(%rbp)
	xorl	%esi, %esi
	leaq	-512(%rbp), %rdi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	movb	%bl, -512(%rbp)
	movq	-88(%rbp), %rax
	movq	-81(%rbp), %rcx
	leaq	-456(%rbp), %rdx
	movq	%rcx, -48(%rdx)
	movq	%rax, -55(%rdx)
	movq	%r15, -496(%rbp)
	movq	$0, -81(%rbp)
	movq	$0, -88(%rbp)
	testb	$1, -176(%rbp)
	je	0x10002393f
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-488(%rbp), %rdi
	leaq	-72(%rbp), %rsi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	leaq	-176(%rbp), %rbx
	movq	-520(%rbp), %rax
	movq	%rax, -432(%rbp)
	leaq	-304(%rbp), %rdi
	callq	*24(%r14)
	movsd	%xmm0, -416(%rbp)
	leaq	-272(%rbp), %rdi
	callq	*24(%r14)
	movsd	%xmm0, -408(%rbp)
	leaq	-240(%rbp), %rdi
	callq	*24(%r14)
	movsd	%xmm0, -400(%rbp)
	leaq	-208(%rbp), %rdi
	callq	*24(%r14)
	movsd	%xmm0, -392(%rbp)
	movq	(%r12), %rax
	movl	88(%rax), %eax
	movl	%eax, -424(%rbp)
	movq	-128(%rbp), %r13
	leaq	-120(%rbp), %rax
	cmpq	%rax, %r13
	je	0x1000236c9
	nop
	leaq	72(%r13), %rdi
	callq	*24(%r14)
	movsd	%xmm0, -96(%rbp)
	leaq	32(%r13), %r15
	leaq	-128(%rbp), %rdi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEZN9benchmark12ComputeStatsERKNS_6vectorINS8_17BenchmarkReporter3RunENS5_ISB_EEEEE11CounterStatEENS_19__map_value_compareIS7_SH_NS_4lessIS7_EELb1EEENS5_ISH_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISS_EERKT_ ## std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat> > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	movq	%rax, %r12
	movq	%rbx, %rcx
	movq	(%r12), %rbx
	testq	%rbx, %rbx
	jne	0x100023a92
	movl	$96, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	%rbx, %rdi
	addq	$32, %rdi
	movq	%r15, %rsi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	movq	$0, 88(%rbx)
	movq	$0, 80(%rbx)
	movq	$0, 72(%rbx)
	movq	$0, 64(%rbx)
	movq	$0, 56(%rbx)
	movq	-176(%rbp), %rax
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	movq	%rax, 16(%rbx)
	movq	%rbx, (%r12)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	0x100023a7b
	movq	%rax, -128(%rbp)
	movq	(%r12), %rsi
	jmp	0x100023a7e
	movq	%rbx, %rsi
	movq	-120(%rbp), %rdi
	callq	__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ ## void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
	incq	-112(%rbp)
	leaq	-176(%rbp), %rcx
	movl	64(%rbx), %ebx
	movq	%r15, -176(%rbp)
	leaq	-336(%rbp), %rdi
	movq	%r15, %rsi
	leaq	__ZNSt3__1L19piecewise_constructE(%rip), %rdx ## std::__1::piecewise_construct
	leaq	-88(%rbp), %r8
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_ ## std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::__emplace_unique_key_args<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>, std::__1::tuple<> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>&&, std::__1::tuple<>&&)
	movsd	-96(%rbp), %xmm0
	movsd	%xmm0, 56(%rax)
	movl	%ebx, 64(%rax)
	movq	8(%r13), %rcx
	testq	%rcx, %rcx
	je	0x100023af0
	leaq	-176(%rbp), %rbx
	nopw	%cs:(%rax,%rax)
	movq	%rcx, %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	jne	0x100023ae0
	jmp	0x100023b21
	nopl	(%rax)
	movq	16(%r13), %rax
	cmpq	%r13, (%rax)
	leaq	-176(%rbp), %rbx
	je	0x100023b21
	addq	$16, %r13
	nopw	%cs:(%rax,%rax)
	movq	(%r13), %rcx
	movq	16(%rcx), %rax
	cmpq	%rcx, (%rax)
	leaq	16(%rcx), %r13
	jne	0x100023b10
	leaq	-120(%rbp), %rcx
	cmpq	%rcx, %rax
	movq	%rax, %r13
	jne	0x1000239d0
	jmp	0x1000236c9
	testb	$1, -72(%rbp)
	je	0x100023b45
	movq	-56(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-120(%rbp), %rsi
	leaq	-128(%rbp), %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEZN9benchmark12ComputeStatsERKNS_6vectorINS8_17BenchmarkReporter3RunENS5_ISB_EEEEE11CounterStatEENS_19__map_value_compareIS7_SH_NS_4lessIS7_EELb1EEENS5_ISH_EEE7destroyEPNS_11__tree_nodeISH_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, void*>*)
	movq	-208(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100023b6a
	movq	%rdi, -200(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-240(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100023b82
	movq	%rdi, -232(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-272(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100023b9a
	movq	%rdi, -264(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-304(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100023bb2
	movq	%rdi, -296(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-152(%rbp), %rdi
	jmp	0x100022bf5
	callq	0x1000297a0 ## symbol stub for: ___stack_chk_fail
	movq	%rax, %r15
	testb	$1, -72(%rbp)
	jne	0x100023ca9
	jmp	0x100023cff
	jmp	0x100023cfc
	movq	%rax, %r15
	movq	-208(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x100023d18
	jmp	0x100023d24
	jmp	0x100023cfc
	jmp	0x100023cfc
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %r15
	testb	$1, -176(%rbp)
	je	0x100023c34
	movq	-160(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x100023c34
	jmp	0x100023c31
	movq	%rax, %r15
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x100023c34
	jmp	0x100023c31
	jmp	0x100023c31
	movq	%rax, %r15
	movq	-328(%rbp), %rsi
	leaq	-336(%rbp), %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, void*>*)
	testb	$1, -456(%rbp)
	jne	0x100023c6d
	testb	$1, -488(%rbp)
	jne	0x100023c82
	testb	$1, -512(%rbp)
	jne	0x100023c97
	testb	$1, -72(%rbp)
	jne	0x100023ca9
	jmp	0x100023cff
	movq	-440(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -488(%rbp)
	je	0x100023c59
	movq	-472(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -512(%rbp)
	je	0x100023c62
	movq	-496(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -72(%rbp)
	je	0x100023cff
	movq	-56(%rbp), %rdi
	jmp	0x100023cf3
	movq	%rax, %r15
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-472(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x100023cd7
	jmp	0x100023ce3
	movq	%rax, %r15
	movq	-472(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100023ce3
	movq	%rdi, -464(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -512(%rbp)
	je	0x100023cff
	movq	-496(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x100023cff
	jmp	0x100023cfc
	movq	%rax, %r15
	movq	-120(%rbp), %rsi
	leaq	-128(%rbp), %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEZN9benchmark12ComputeStatsERKNS_6vectorINS8_17BenchmarkReporter3RunENS5_ISB_EEEEE11CounterStatEENS_19__map_value_compareIS7_SH_NS_4lessIS7_EELb1EEENS5_ISH_EEE7destroyEPNS_11__tree_nodeISH_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, void*>*)
	movq	-208(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100023d24
	movq	%rdi, -200(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-240(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x100023d68
	movq	-272(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x100023d80
	movq	-304(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100023d54
	movq	%rdi, -296(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-152(%rbp), %rdi
	callq	__ZNSt3__113__vector_baseIN9benchmark17BenchmarkReporter3RunENS_9allocatorIS3_EEED2Ev ## std::__1::__vector_base<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> >::~__vector_base()
	movq	%r15, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rdi, -232(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-272(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100023d3c
	movq	%rdi, -264(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-304(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x100023d48
	jmp	0x100023d54
	nopw	(%rax,%rax)
__ZNSt3__16vectorIdNS_9allocatorIdEEE7reserveEm:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r15
	movq	%rdi, %rbx
	movq	(%rbx), %r14
	movq	16(%rbx), %rax
	subq	%r14, %rax
	sarq	$3, %rax
	cmpq	%r15, %rax
	jae	0x100023e31
	movq	%r15, %rax
	shrq	$61, %rax
	jne	0x100023e40
	movq	8(%rbx), %r12
	subq	%r14, %r12
	leaq	(,%r15,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r13
	leaq	(%r13,%r15,8), %rax
	movq	%r13, %r15
	addq	%r12, %r15
	testq	%r12, %r12
	jle	0x100023e0b
	movq	%r13, %rdi
	movq	%r14, %rsi
	movq	%r12, %rdx
	movq	%rax, %r12
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r12, %rax
	movq	%r13, (%rbx)
	movq	%r15, 8(%rbx)
	movq	%rax, 16(%rbx)
	testq	%r14, %r14
	je	0x100023e31
	movq	%r14, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	41314(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	45973(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	45663(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	45512(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEZN9benchmark12ComputeStatsERKNS_6vectorINS8_17BenchmarkReporter3RunENS5_ISB_EEEEE11CounterStatEENS_19__map_value_compareIS7_SH_NS_4lessIS7_EELb1EEENS5_ISH_EEE7destroyEPNS_11__tree_nodeISH_PvEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rsi, %rbx
	movq	%rdi, %r14
	testq	%rbx, %rbx
	je	0x100023ef6
	movq	(%rbx), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEZN9benchmark12ComputeStatsERKNS_6vectorINS8_17BenchmarkReporter3RunENS5_ISB_EEEEE11CounterStatEENS_19__map_value_compareIS7_SH_NS_4lessIS7_EELb1EEENS5_ISH_EEE7destroyEPNS_11__tree_nodeISH_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, void*>*)
	movq	8(%rbx), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEZN9benchmark12ComputeStatsERKNS_6vectorINS8_17BenchmarkReporter3RunENS5_ISB_EEEEE11CounterStatEENS_19__map_value_compareIS7_SH_NS_4lessIS7_EELb1EEENS5_ISH_EEE7destroyEPNS_11__tree_nodeISH_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::ComputeStats(std::__1::vector<benchmark::BenchmarkReporter::Run, std::__1::allocator<benchmark::BenchmarkReporter::Run> > const&)::CounterStat>, void*>*)
	movq	72(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100023edb
	movq	%rdi, 80(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, 32(%rbx)
	je	0x100023eea
	movq	48(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZNSt3__113__nth_elementIRNS_6__lessIddEENS_11__wrap_iterIPdEEEEvT0_S7_S7_T_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	movq	%rdi, -24(%rbp)
	movq	%rdx, -16(%rbp)
	cmpq	%rsi, %rdx
	je	0x1000243c1
	movabsq	$4611686018427387902, %r10
	leaq	-16(%rbp), %r8
	leaq	-24(%rbp), %r9
	movq	%rdx, %rax
	jmp	0x100024011
	movq	%rax, %rdx
	addq	$8, %rax
	cmpq	%rax, %rcx
	jne	0x100024250
	jmp	0x1000243c1
	nopw	%cs:(%rax,%rax)
	movq	-24(%rbp), %rdi
	movq	%rax, %rdx
	jmp	0x100024011
	leaq	8(%rcx), %rax
	movq	-16(%rbp), %rdx
	cmpq	%rdx, %rax
	movq	%rcx, %rdi
	je	0x1000243c1
	movsd	(%rdi), %xmm0
	ucomisd	(%rax), %xmm0
	ja	0x100024200
	movq	%rax, %rdi
	addq	$8, %rax
	cmpq	%rax, %rdx
	jne	0x100023f70
	jmp	0x1000243c1
	movq	(%rdi), %rdx
	movsd	%xmm1, (%rdi)
	movq	%rdx, (%rax)
	movq	%rcx, %rdi
	cmpq	%rdi, %rax
	jne	0x100023fbe
	jmp	0x1000243c1
	nopw	%cs:(%rax,%rax)
	movq	(%rdi), %rcx
	movsd	%xmm1, (%rdi)
	movq	%rcx, (%rax)
	addq	$8, %rdi
	movq	-24(%rbp), %rcx
	movsd	(%rcx), %xmm0
	movsd	(%rdi), %xmm1
	ucomisd	%xmm0, %xmm1
	ja	0x100023fe0
	movsd	8(%rdi), %xmm1
	addq	$8, %rdi
	ucomisd	%xmm0, %xmm1
	jbe	0x100023fd0
	nop
	movsd	-8(%rax), %xmm1
	addq	$-8, %rax
	ucomisd	%xmm0, %xmm1
	ja	0x100023fe0
	cmpq	%rdi, %rax
	ja	0x100023fb0
	cmpq	%rsi, %rdi
	ja	0x1000243c1
	movq	%rdi, -24(%rbp)
	movq	-16(%rbp), %rdx
	cmpq	%rsi, %rdx
	movq	%rdx, %rax
	je	0x1000243c1
	subq	%rdi, %rax
	movq	%rax, %rcx
	sarq	$3, %rcx
	cmpq	$2, %rcx
	jb	0x1000243c1
	cmpq	$3, %rcx
	je	0x1000243e8
	cmpq	$2, %rcx
	je	0x1000243c4
	cmpq	$63, %rax
	jle	0x100024260
	andq	%r10, %rcx
	leaq	(%rdi,%rcx,4), %rax
	leaq	-8(%rdx), %rbx
	movsd	(%rdi,%rcx,4), %xmm1
	movsd	(%rdi), %xmm0
	ucomisd	%xmm1, %xmm0
	movsd	-8(%rdx), %xmm2
	jbe	0x100024080
	ucomisd	%xmm2, %xmm1
	jbe	0x1000240b0
	movsd	%xmm2, (%rdi)
	movsd	%xmm0, (%rbx)
	movl	$1, %r11d
	jmp	0x1000240d6
	nopl	(%rax,%rax)
	xorl	%r11d, %r11d
	ucomisd	%xmm2, %xmm1
	jbe	0x1000240d6
	movsd	%xmm2, (%rax)
	movsd	%xmm1, (%rbx)
	movsd	(%rax), %xmm0
	movsd	(%rdi), %xmm1
	movl	$1, %r11d
	ucomisd	%xmm0, %xmm1
	jbe	0x1000240d6
	movsd	%xmm0, (%rdi)
	movsd	%xmm1, (%rax)
	jmp	0x1000240d0
	nop
	movsd	%xmm1, (%rdi)
	movsd	%xmm0, (%rax)
	movsd	(%rbx), %xmm1
	movl	$1, %r11d
	ucomisd	%xmm1, %xmm0
	jbe	0x1000240d6
	movsd	%xmm1, (%rax)
	movsd	%xmm0, (%rbx)
	movl	$2, %r11d
	movq	-24(%rbp), %rcx
	movsd	(%rcx), %xmm0
	movsd	(%rax), %xmm1
	ucomisd	%xmm0, %xmm1
	ja	0x10002416b
	addq	$-16, %rdx
	cmpq	%rdx, %rcx
	movq	%rdx, %rbx
	je	0x100024113
	nopl	(%rax,%rax)
	movsd	(%rbx), %xmm2
	ucomisd	%xmm2, %xmm1
	ja	0x100024160
	addq	$-8, %rbx
	cmpq	%rbx, %rcx
	jne	0x100024100
	leaq	8(%rcx), %rdi
	movq	-16(%rbp), %rdx
	leaq	-8(%rdx), %rax
	movsd	-8(%rdx), %xmm1
	ucomisd	%xmm0, %xmm1
	ja	0x100023f9c
	cmpq	%rdi, %rax
	je	0x1000243c1
	addq	$16, %rcx
	nopl	(%rax,%rax)
	movsd	-8(%rcx), %xmm2
	ucomisd	%xmm0, %xmm2
	ja	0x100023f8f
	movq	%rcx, %rdi
	addq	$8, %rcx
	cmpq	%rcx, %rdx
	jne	0x100024140
	jmp	0x1000243c1
	movsd	%xmm2, (%rcx)
	movsd	%xmm0, (%rbx)
	incl	%r11d
	addq	$8, %rcx
	cmpq	%rbx, %rcx
	jb	0x100024198
	jmp	0x1000241d4
	nopw	%cs:(%rax,%rax)
	movq	(%rcx), %rdx
	movsd	%xmm1, (%rcx)
	movq	%rdx, (%rbx)
	incl	%r11d
	cmpq	%rax, %rcx
	cmoveq	%rbx, %rax
	addq	$8, %rcx
	movsd	(%rax), %xmm0
	ucomisd	(%rcx), %xmm0
	jbe	0x1000241c0
	nopw	%cs:(%rax,%rax)
	ucomisd	8(%rcx), %xmm0
	leaq	8(%rcx), %rcx
	ja	0x1000241b0
	nopl	(%rax,%rax)
	movsd	-8(%rbx), %xmm1
	addq	$-8, %rbx
	ucomisd	%xmm1, %xmm0
	jbe	0x1000241c0
	cmpq	%rcx, %rbx
	ja	0x100024180
	cmpq	%rax, %rcx
	je	0x1000241f2
	movsd	(%rcx), %xmm0
	ucomisd	(%rax), %xmm0
	jbe	0x1000241f2
	movq	(%rcx), %rdx
	movq	(%rax), %rdi
	movq	%rdi, (%rcx)
	movq	%rdx, (%rax)
	incl	%r11d
	cmpq	%rsi, %rcx
	je	0x1000243c1
	testl	%r11d, %r11d
	je	0x100024230
	leaq	8(%rcx), %rax
	cmpq	%rsi, %rcx
	cmovaq	%rcx, %rax
	movq	%r9, %rcx
	cmovaq	%r8, %rcx
	movq	%rax, (%rcx)
	movq	-16(%rbp), %rax
	cmpq	%rsi, %rax
	jne	0x100023f50
	jmp	0x1000243c1
	nopw	(%rax,%rax)
	cmpq	%rsi, %rcx
	jbe	0x100023f5c
	movq	-24(%rbp), %rdx
	leaq	8(%rdx), %rax
	cmpq	%rcx, %rax
	je	0x1000243c1
	nopw	(%rax,%rax)
	movsd	(%rdx), %xmm0
	ucomisd	(%rax), %xmm0
	jbe	0x100023f30
	jmp	0x100024200
	leaq	-8(%rdx), %r8
	cmpq	%rdi, %r8
	je	0x1000243c1
	movq	%rdi, %r11
	negq	%rdi
	xorl	%r9d, %r9d
	jmp	0x1000242b0
	nopl	(%rax,%rax)
	movq	%r11, %rsi
	cmpq	%rsi, %r11
	jne	0x1000243a5
	jmp	0x1000243b1
	movq	%r11, %rcx
	cmpq	$24, %r10
	movq	%rcx, %rsi
	jb	0x1000243a0
	jmp	0x100024320
	nopw	%cs:(%rax,%rax)
	cmpq	%rdx, %r11
	je	0x100024280
	leaq	8(%r11), %rbx
	cmpq	%rdx, %rbx
	je	0x100024280
	movq	$-2, %rax
	subq	%r9, %rax
	leaq	(%rdx,%rax,8), %r10
	addq	%rdi, %r10
	movq	%r10, %rsi
	shrq	$3, %rsi
	incq	%rsi
	andq	$3, %rsi
	je	0x100024291
	negq	%rsi
	movq	%r11, %rax
	nopw	%cs:(%rax,%rax)
	movsd	(%rax), %xmm0
	ucomisd	(%rbx), %xmm0
	movq	%rbx, %rcx
	ja	0x100024300
	movq	%rax, %rcx
	addq	$8, %rbx
	incq	%rsi
	movq	%rcx, %rax
	jne	0x1000242f0
	cmpq	$24, %r10
	movq	%rcx, %rsi
	jb	0x1000243a0
	nopl	(%rax)
	movsd	(%rcx), %xmm0
	ucomisd	(%rbx), %xmm0
	movq	%rbx, %rsi
	ja	0x100024360
	movq	%rcx, %rsi
	movsd	(%rsi), %xmm0
	ucomisd	8(%rbx), %xmm0
	jbe	0x10002436b
	leaq	8(%rbx), %rsi
	movsd	(%rsi), %xmm0
	ucomisd	16(%rbx), %xmm0
	jbe	0x100024376
	leaq	16(%rbx), %rsi
	movsd	(%rsi), %xmm0
	ucomisd	24(%rbx), %xmm0
	ja	0x100024381
	jmp	0x100024385
	nopl	(%rax,%rax)
	movsd	(%rsi), %xmm0
	ucomisd	8(%rbx), %xmm0
	ja	0x10002433b
	movsd	(%rsi), %xmm0
	ucomisd	16(%rbx), %xmm0
	ja	0x10002434a
	movsd	(%rsi), %xmm0
	ucomisd	24(%rbx), %xmm0
	jbe	0x100024385
	leaq	24(%rbx), %rsi
	addq	$32, %rbx
	cmpq	%rdx, %rbx
	movq	%rsi, %rcx
	jne	0x100024320
	nopw	%cs:(%rax,%rax)
	cmpq	%rsi, %r11
	je	0x1000243b1
	movq	(%r11), %rax
	movq	(%rsi), %rcx
	movq	%rcx, (%r11)
	movq	%rax, (%rsi)
	addq	$8, %r11
	incq	%r9
	cmpq	%r8, %r11
	jne	0x1000242b0
	popq	%rbx
	popq	%rbp
	retq
	leaq	-8(%rdx), %rax
	movq	%rax, -16(%rbp)
	movsd	-8(%rdx), %xmm0
	movsd	(%rdi), %xmm1
	ucomisd	%xmm0, %xmm1
	jbe	0x1000243c1
	movq	(%rdi), %rcx
	movsd	%xmm0, (%rdi)
	movq	%rcx, (%rax)
	popq	%rbx
	popq	%rbp
	retq
	leaq	-8(%rdx), %rax
	movq	%rax, -16(%rbp)
	movsd	(%rdi), %xmm0
	movsd	8(%rdi), %xmm1
	ucomisd	%xmm1, %xmm0
	movsd	-8(%rdx), %xmm2
	jbe	0x100024415
	ucomisd	%xmm2, %xmm1
	jbe	0x10002443f
	movsd	%xmm2, (%rdi)
	movsd	%xmm0, (%rax)
	popq	%rbx
	popq	%rbp
	retq
	ucomisd	%xmm2, %xmm1
	jbe	0x1000243c1
	movsd	%xmm2, 8(%rdi)
	movsd	%xmm1, (%rax)
	movsd	(%rdi), %xmm0
	movsd	8(%rdi), %xmm1
	ucomisd	%xmm1, %xmm0
	jbe	0x1000243c1
	movsd	%xmm1, (%rdi)
	movsd	%xmm0, 8(%rdi)
	popq	%rbx
	popq	%rbp
	retq
	movsd	%xmm1, (%rdi)
	movsd	%xmm0, 8(%rdi)
	movsd	(%rax), %xmm1
	ucomisd	%xmm1, %xmm0
	jbe	0x1000243c1
	movsd	%xmm1, 8(%rdi)
	movsd	%xmm0, (%rax)
	popq	%rbx
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEZN9benchmark12ComputeStatsERKNS_6vectorINS8_17BenchmarkReporter3RunENS5_ISB_EEEEE11CounterStatEENS_19__map_value_compareIS7_SH_NS_4lessIS7_EELb1EEENS5_ISH_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISS_EERKT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	8(%rdi), %rbx
	addq	$8, %rdi
	testq	%rbx, %rbx
	je	0x10002457f
	movq	%rsi, -48(%rbp)
	movq	%rdi, -64(%rbp)
	movzbl	(%rdx), %eax
	movq	%rax, %r14
	shrq	%r14
	leaq	1(%rdx), %rcx
	andb	$1, %al
	cmovneq	16(%rdx), %rcx
	movq	%rcx, -56(%rbp)
	testb	%al, %al
	cmovneq	8(%rdx), %r14
	jmp	0x1000244c7
	nopl	(%rax,%rax)
	movq	%rdi, -64(%rbp)
	movq	%rax, %rbx
	movzbl	32(%rbx), %r12d
	movq	%r12, %r15
	shrq	%r15
	testb	$1, %r12b
	cmovneq	40(%rbx), %r15
	cmpq	%r15, %r14
	movq	%r15, %rdx
	ja	0x1000244e6
	movq	%r14, %rdx
	leaq	32(%rbx), %r13
	testq	%rdx, %rdx
	je	0x100024540
	leaq	1(%r13), %rsi
	testb	$1, %r12b
	cmovneq	48(%rbx), %rsi
	movq	-56(%rbp), %rdi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x100024540
	js	0x100024545
	cmpq	%r14, %r15
	movq	%r14, %rdx
	ja	0x100024516
	movq	%r15, %rdx
	testq	%rdx, %rdx
	je	0x100024560
	incq	%r13
	testb	$1, %r12b
	cmovneq	48(%rbx), %r13
	movq	%r13, %rdi
	movq	-56(%rbp), %rsi
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	je	0x100024560
	js	0x100024565
	jmp	0x100024590
	nopl	(%rax,%rax)
	cmpq	%r15, %r14
	jae	0x10002450b
	movq	(%rbx), %rax
	testq	%rax, %rax
	movq	%rbx, %rdi
	jne	0x1000244c0
	jmp	0x100024584
	nopw	%cs:(%rax,%rax)
	cmpq	%r15, %r14
	jbe	0x100024590
	leaq	8(%rbx), %rdi
	movq	8(%rbx), %rax
	testq	%rax, %rax
	jne	0x1000244c0
	movq	-48(%rbp), %rax
	movq	%rbx, (%rax)
	jmp	0x10002459b
	movq	%rdi, (%rsi)
	jmp	0x10002459b
	movq	-48(%rbp), %rax
	movq	%rbx, (%rax)
	movq	%rbx, %rdi
	jmp	0x10002459b
	movq	-48(%rbp), %rax
	movq	%rbx, (%rax)
	movq	-64(%rbp), %rdi
	movq	%rdi, %rax
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopl	(%rax)
__ZNSt3__16vectorIdNS_9allocatorIdEEE24__emplace_back_slow_pathIJRKdEEEvDpOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rsi, %r8
	movq	%rdi, %r13
	movq	(%r13), %rsi
	movq	8(%r13), %r12
	subq	%rsi, %r12
	movq	%r12, %r15
	sarq	$3, %r15
	leaq	1(%r15), %rax
	movq	%rax, %rcx
	shrq	$61, %rcx
	jne	0x1000246f8
	movabsq	$2305843009213693951, %rcx
	movq	16(%r13), %r14
	subq	%rsi, %r14
	movq	%r14, %rdx
	sarq	$3, %rdx
	movabsq	$1152921504606846974, %rdi
	cmpq	%rdi, %rdx
	ja	0x100024672
	sarq	$2, %r14
	cmpq	%rax, %r14
	cmovbq	%rax, %r14
	testq	%r14, %r14
	je	0x1000246f1
	movq	%r8, -48(%rbp)
	movq	%rsi, -56(%rbp)
	cmpq	%rcx, %r14
	jbe	0x10002467d
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	39280(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	43939(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	43629(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	43478(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%r8, -48(%rbp)
	movq	%rsi, -56(%rbp)
	movq	%rcx, %r14
	leaq	(,%r14,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	-56(%rbp), %rsi
	movq	-48(%rbp), %r8
	leaq	(%rbx,%r14,8), %r14
	movq	(%r8), %rax
	movq	%rax, (%rbx,%r15,8)
	leaq	8(%rbx,%r15,8), %r15
	testq	%r12, %r12
	jle	0x1000246bb
	movq	%rbx, %rdi
	movq	%r12, %rdx
	movq	%rsi, %r12
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r12, %rsi
	movq	%rbx, (%r13)
	movq	%r15, 8(%r13)
	movq	%r14, 16(%r13)
	testq	%rsi, %rsi
	je	0x1000246e2
	movq	%rsi, %rdi
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
	jmp	0x100024695
	movq	%r13, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorIdNS_9allocatorIdEEE24__emplace_back_slow_pathIJRKN9benchmark7CounterEEEEvDpOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rsi, %r8
	movq	%rdi, %r13
	movq	(%r13), %rsi
	movq	8(%r13), %r12
	subq	%rsi, %r12
	movq	%r12, %r15
	sarq	$3, %r15
	leaq	1(%r15), %rax
	movq	%rax, %rcx
	shrq	$61, %rcx
	jne	0x100024868
	movabsq	$2305843009213693951, %rcx
	movq	16(%r13), %r14
	subq	%rsi, %r14
	movq	%r14, %rdx
	sarq	$3, %rdx
	movabsq	$1152921504606846974, %rdi
	cmpq	%rdi, %rdx
	ja	0x1000247e2
	sarq	$2, %r14
	cmpq	%rax, %r14
	cmovbq	%rax, %r14
	testq	%r14, %r14
	je	0x100024861
	movq	%r8, -48(%rbp)
	movq	%rsi, -56(%rbp)
	cmpq	%rcx, %r14
	jbe	0x1000247ed
	movl	$16, %edi
	callq	0x100029752 ## symbol stub for: ___cxa_allocate_exception
	movq	%rax, %rbx
	leaq	38912(%rip), %rsi ## literal pool for: "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size"
	movq	%rbx, %rdi
	callq	0x1000295c6 ## symbol stub for: __ZNSt11logic_errorC2EPKc
	movq	43571(%rip), %rax ## literal pool symbol address: __ZTVSt12length_error
	addq	$16, %rax
	movq	%rax, (%rbx)
	movq	43261(%rip), %rsi ## literal pool symbol address: __ZTISt12length_error
	movq	43110(%rip), %rdx ## literal pool symbol address: __ZNSt12length_errorD1Ev
	movq	%rbx, %rdi
	callq	0x100029788 ## symbol stub for: ___cxa_throw
	movq	%r8, -48(%rbp)
	movq	%rsi, -56(%rbp)
	movq	%rcx, %r14
	leaq	(,%r14,8), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	-56(%rbp), %rsi
	movq	-48(%rbp), %r8
	leaq	(%rbx,%r14,8), %r14
	movq	(%r8), %rax
	movq	%rax, (%rbx,%r15,8)
	leaq	8(%rbx,%r15,8), %r15
	testq	%r12, %r12
	jle	0x10002482b
	movq	%rbx, %rdi
	movq	%r12, %rdx
	movq	%rsi, %r12
	callq	0x10002981e ## symbol stub for: _memcpy
	movq	%r12, %rsi
	movq	%rbx, (%r13)
	movq	%r15, 8(%r13)
	movq	%r14, 16(%r13)
	testq	%rsi, %rsi
	je	0x100024852
	movq	%rsi, %rdi
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
	jmp	0x100024805
	movq	%r13, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002976a ## symbol stub for: ___cxa_free_exception
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$16, %rsp
	movq	%rcx, %r12
	movq	%rsi, %rax
	movq	%rdi, %r14
	leaq	-40(%rbp), %rsi
	movq	%rax, %rdx
	callq	__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN9benchmark7CounterEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_ ## std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, benchmark::Counter> > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	movq	%rax, %r15
	movq	(%r15), %rbx
	testq	%rbx, %rbx
	je	0x1000248c3
	xorl	%edx, %edx
	jmp	0x10002492b
	movl	$72, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	(%r12), %rsi
	leaq	32(%rbx), %rdi
	callq	0x100029608 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	movq	$0, 56(%rbx)
	movl	$0, 64(%rbx)
	movq	-40(%rbp), %rax
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	movq	%rax, 16(%rbx)
	movq	%rbx, (%r15)
	movq	(%r14), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	0x100024919
	movq	%rax, (%r14)
	movq	(%r15), %rsi
	jmp	0x10002491c
	movq	%rbx, %rsi
	movq	8(%r14), %rdi
	callq	__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ ## void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
	incq	16(%r14)
	movb	$1, %dl
	movq	%rbx, %rax
	addq	$16, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nop
__GLOBAL__sub_I_statistics.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark8internal17InitializeStreamsEv ## benchmark::internal::InitializeStreams()
	nop
	nop
	nop
	nop
	nop
	nop
__ZN9benchmark19AppendHumanReadableEiPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$328, %rsp
	movq	%rsi, %r12
	movl	%edi, %r13d
	leaq	-240(%rbp), %rdi
	movq	43040(%rip), %r15
	leaq	64(%r15), %rbx
	movq	%rbx, -352(%rbp)
	leaq	-344(%rbp), %r14
	movq	42775(%rip), %rax
	leaq	64(%rax), %rcx
	movq	%rcx, -240(%rbp)
	addq	$24, %rax
	movq	%rax, %xmm0
	movdqa	%xmm0, -368(%rbp)
	movq	%r14, %rsi
	callq	0x100029710 ## symbol stub for: __ZNSt3__18ios_base4initEPv
	movq	%r12, -88(%rbp)
	movq	$0, -104(%rbp)
	movl	$4294967295, -96(%rbp)
	leaq	24(%r15), %rax
	movq	%rax, -80(%rbp)
	movq	%rax, -368(%rbp)
	addq	$104, %r15
	movq	%r15, -240(%rbp)
	movq	%rbx, -72(%rbp)
	movq	%rbx, -352(%rbp)
	movq	%r14, %rdi
	callq	0x10002967a ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
	movq	42852(%rip), %r12
	addq	$16, %r12
	movq	%r12, -344(%rbp)
	movq	$0, -256(%rbp)
	movq	$0, -264(%rbp)
	movq	$0, -272(%rbp)
	movq	$0, -280(%rbp)
	movl	$24, -248(%rbp)
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	leaq	-64(%rbp), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	testb	$1, -64(%rbp)
	je	0x100024a79
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%r13d, %xmm0
	leaq	-64(%rbp), %rdi
	movsd	21307(%rip), %xmm1
	movsd	23099(%rip), %xmm2
	xorl	%esi, %esi
	callq	__ZN9benchmark12_GLOBAL__N_128ToBinaryStringFullySpecifiedEddid ## benchmark::(anonymous namespace)::ToBinaryStringFullySpecified(double, double, int, double)
	leaq	-352(%rbp), %r13
	movzbl	-64(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	leaq	-63(%rbp), %rbx
	movq	-48(%rbp), %rsi
	cmoveq	%rbx, %rsi
	testb	%al, %al
	cmovneq	-56(%rbp), %rdx
	movq	%r13, %rdi
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	testb	$1, -64(%rbp)
	je	0x100024ad9
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-64(%rbp), %rdi
	leaq	-344(%rbp), %rsi
	callq	__ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str() const
	movzbl	-64(%rbp), %eax
	movq	%rax, %rdx
	shrq	%rdx
	andb	$1, %al
	cmovneq	-48(%rbp), %rbx
	testb	%al, %al
	cmovneq	-56(%rbp), %rdx
	movq	-88(%rbp), %rdi
	movq	%rbx, %rsi
	callq	0x1000295d8 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
	testb	$1, -64(%rbp)
	je	0x100024b1c
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-80(%rbp), %rax
	movq	%rax, -368(%rbp)
	movq	%r15, -240(%rbp)
	movq	-72(%rbp), %rax
	movq	%rax, -352(%rbp)
	movq	%r12, -344(%rbp)
	testb	$1, -280(%rbp)
	leaq	-344(%rbp), %rbx
	je	0x100024b5c
	movq	-264(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	42381(%rip), %rsi
	addq	$8, %rsi
	leaq	-368(%rbp), %rdi
	callq	0x100029662 ## symbol stub for: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
	leaq	-240(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	addq	$328, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	jne	0x100024bb2
	jmp	0x100024bc7
	movq	%rax, %rbx
	jmp	0x100024bc7
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x100024bc7
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x100024bc7
	movq	%rax, %rbx
	leaq	-352(%rbp), %r13
	movq	-80(%rbp), %rax
	movq	%rax, -368(%rbp)
	movq	%r15, -240(%rbp)
	movq	-72(%rbp), %rax
	movq	%rax, (%r13)
	movq	%r12, -344(%rbp)
	testb	$1, -280(%rbp)
	je	0x100024bfd
	movq	-264(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-344(%rbp), %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	42216(%rip), %rsi
	addq	$8, %rsi
	leaq	-368(%rbp), %rdi
	callq	0x100029662 ## symbol stub for: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
	leaq	-240(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x100024c46
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -280(%rbp)
	je	0x100024c5b
	movq	-264(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	jmp	0x100024c04
	movq	%rax, %rbx
	jmp	0x100024c09
	movq	%rax, %rbx
	jmp	0x100024c20
	nopw	(%rax,%rax)
__ZN9benchmark12_GLOBAL__N_128ToBinaryStringFullySpecifiedEddid:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$392, %rsp
	movsd	%xmm2, -152(%rbp)
	movl	%esi, %r12d
	movsd	%xmm1, -144(%rbp)
	movaps	%xmm0, -128(%rbp)
	movq	%rdi, -136(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	leaq	-304(%rbp), %rdi
	movq	42217(%rip), %r14
	leaq	64(%r14), %r13
	movq	%r13, -416(%rbp)
	leaq	-408(%rbp), %rbx
	movq	41952(%rip), %rax
	leaq	64(%rax), %rcx
	movq	%rcx, -304(%rbp)
	addq	$24, %rax
	movq	%rax, %xmm0
	movdqa	%xmm0, -432(%rbp)
	movq	%rbx, %rsi
	callq	0x100029710 ## symbol stub for: __ZNSt3__18ios_base4initEPv
	movq	$0, -168(%rbp)
	movl	$4294967295, -160(%rbp)
	leaq	24(%r14), %rax
	movq	%rax, -104(%rbp)
	movq	%rax, -432(%rbp)
	addq	$104, %r14
	movq	%r14, -304(%rbp)
	movq	%r13, -416(%rbp)
	movq	%rbx, %rdi
	callq	0x10002967a ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
	movq	42031(%rip), %r15
	addq	$16, %r15
	movq	%r15, -408(%rbp)
	movq	$0, -320(%rbp)
	movq	$0, -328(%rbp)
	movq	$0, -336(%rbp)
	movq	$0, -344(%rbp)
	movl	$24, -312(%rbp)
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, -96(%rbp)
	movq	$0, -80(%rbp)
	leaq	-96(%rbp), %rsi
	movq	%rbx, %rdi
	callq	__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	testb	$1, -96(%rbp)
	je	0x100024dae
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	pxor	%xmm0, %xmm0
	movapd	-128(%rbp), %xmm1
	ucomisd	%xmm1, %xmm0
	jbe	0x100024de7
	leaq	-416(%rbp), %rdi
	leaq	38721(%rip), %rsi ## literal pool for: "-"
	movl	$1, %edx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movdqa	-128(%rbp), %xmm0
	pxor	22286(%rip), %xmm0
	movdqa	%xmm0, -128(%rbp)
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%r12d, %xmm0
	callq	0x100029794 ## symbol stub for: ___exp10
	movsd	20428(%rip), %xmm1
	divsd	%xmm0, %xmm1
	maxsd	-144(%rbp), %xmm1
	movapd	%xmm1, %xmm2
	movsd	-152(%rbp), %xmm4
	mulsd	%xmm4, %xmm2
	movapd	-128(%rbp), %xmm3
	ucomisd	%xmm2, %xmm3
	jbe	0x100024ebe
	movapd	%xmm3, %xmm0
	divsd	%xmm4, %xmm0
	ucomisd	%xmm0, %xmm2
	jae	0x100024fb4
	divsd	%xmm4, %xmm0
	ucomisd	%xmm0, %xmm2
	jae	0x10002502a
	divsd	%xmm4, %xmm0
	ucomisd	%xmm0, %xmm2
	jae	0x10002505f
	divsd	%xmm4, %xmm0
	ucomisd	%xmm0, %xmm2
	jae	0x100025083
	divsd	%xmm4, %xmm0
	ucomisd	%xmm0, %xmm2
	jae	0x10002508b
	divsd	%xmm4, %xmm0
	ucomisd	%xmm0, %xmm2
	jae	0x100025093
	divsd	%xmm4, %xmm0
	ucomisd	%xmm0, %xmm2
	jae	0x10002509b
	divsd	%xmm4, %xmm0
	ucomisd	%xmm0, %xmm2
	jae	0x1000250a3
	divsd	%xmm4, %xmm0
	ucomisd	%xmm0, %xmm2
	jae	0x1000250ab
	leaq	-416(%rbp), %rdi
	movapd	%xmm3, %xmm0
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	jmp	0x100024fcf
	ucomisd	%xmm3, %xmm1
	jbe	0x100024fbf
	movsd	22024(%rip), %xmm0
	ucomisd	%xmm3, %xmm0
	jbe	0x100024f9b
	movapd	%xmm3, %xmm0
	mulsd	%xmm4, %xmm0
	movq	$-1, %r12
	ucomisd	%xmm1, %xmm0
	jae	0x100025032
	mulsd	%xmm4, %xmm0
	movq	$-2, %r12
	ucomisd	%xmm1, %xmm0
	jae	0x100025032
	mulsd	%xmm4, %xmm0
	movq	$-3, %r12
	ucomisd	%xmm1, %xmm0
	jae	0x100025032
	mulsd	%xmm4, %xmm0
	movq	$-4, %r12
	ucomisd	%xmm1, %xmm0
	jae	0x100025032
	mulsd	%xmm4, %xmm0
	movq	$-5, %r12
	ucomisd	%xmm1, %xmm0
	jae	0x100025032
	mulsd	%xmm4, %xmm0
	movq	$-6, %r12
	ucomisd	%xmm1, %xmm0
	jae	0x100025032
	mulsd	%xmm4, %xmm0
	movq	$-7, %r12
	ucomisd	%xmm1, %xmm0
	jae	0x100025032
	mulsd	%xmm4, %xmm0
	movq	$-8, %r12
	ucomisd	%xmm1, %xmm0
	jae	0x100025032
	mulsd	%xmm4, %xmm0
	movq	$-9, %r12
	ucomisd	%xmm1, %xmm0
	jae	0x100025032
	leaq	-416(%rbp), %rdi
	movapd	%xmm3, %xmm0
	leaq	-408(%rbp), %rbx
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	jmp	0x100024fcf
	movl	$1, %r12d
	jmp	0x1000250b1
	leaq	-416(%rbp), %rdi
	movapd	%xmm3, %xmm0
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	leaq	-96(%rbp), %rdi
	movq	%rbx, %rsi
	callq	__ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str() const
	testb	$1, -64(%rbp)
	jne	0x100024fe9
	movw	$0, -64(%rbp)
	jmp	0x100024ff8
	movq	-48(%rbp), %rax
	movb	$0, (%rax)
	movq	$0, -56(%rbp)
	leaq	-64(%rbp), %rdi
	xorl	%esi, %esi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	movq	-80(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-96(%rbp), %rax
	movq	-88(%rbp), %rcx
	movq	%rcx, -56(%rbp)
	movq	%rax, -64(%rbp)
	leaq	-416(%rbp), %rbx
	xorl	%r12d, %r12d
	jmp	0x100025110
	movl	$2, %r12d
	jmp	0x1000250b1
	leaq	-416(%rbp), %rbx
	movq	%rbx, %rdi
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	leaq	-96(%rbp), %rdi
	leaq	-408(%rbp), %rsi
	callq	__ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str() const
	testb	$1, -64(%rbp)
	jne	0x100025067
	movw	$0, -64(%rbp)
	jmp	0x100025076
	movl	$3, %r12d
	jmp	0x1000250b1
	movq	-48(%rbp), %rax
	movb	$0, (%rax)
	movq	$0, -56(%rbp)
	leaq	-64(%rbp), %rdi
	xorl	%esi, %esi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	jmp	0x1000250f8
	movl	$4, %r12d
	jmp	0x1000250b1
	movl	$5, %r12d
	jmp	0x1000250b1
	movl	$6, %r12d
	jmp	0x1000250b1
	movl	$7, %r12d
	jmp	0x1000250b1
	movl	$8, %r12d
	jmp	0x1000250b1
	movl	$9, %r12d
	leaq	-416(%rbp), %rbx
	movq	%rbx, %rdi
	callq	0x10002964a ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
	leaq	-96(%rbp), %rdi
	leaq	-408(%rbp), %rsi
	callq	__ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str() const
	testb	$1, -64(%rbp)
	jne	0x1000250de
	movw	$0, -64(%rbp)
	jmp	0x1000250ed
	movq	-48(%rbp), %rax
	movb	$0, (%rax)
	movq	$0, -56(%rbp)
	leaq	-64(%rbp), %rdi
	xorl	%esi, %esi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	movq	-80(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-96(%rbp), %rax
	movq	-88(%rbp), %rcx
	movq	%rcx, -56(%rbp)
	movq	%rax, -64(%rbp)
	movq	-104(%rbp), %rax
	movq	%rax, -432(%rbp)
	movq	%r14, -304(%rbp)
	movq	%r13, (%rbx)
	movq	%r15, -408(%rbp)
	testb	$1, -344(%rbp)
	je	0x100025141
	movq	-328(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-408(%rbp), %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	40868(%rip), %rsi
	addq	$8, %rsi
	leaq	-432(%rbp), %rdi
	callq	0x100029662 ## symbol stub for: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
	leaq	-304(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	testq	%r12, %r12
	je	0x100025185
	movq	%r12, %rax
	negq	%rax
	cmovlq	%r12, %rax
	cmpq	$10, %rax
	jl	0x1000251a5
	leaq	-431(%rbp), %rax
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -432(%rbp)
	movq	$0, -416(%rbp)
	jmp	0x1000251e9
	testq	%r12, %r12
	leaq	__ZN9benchmark12_GLOBAL__N_1L11kBigSIUnitsE(%rip), %rcx ## literal pool for: "kMGTPEZY"benchmark::(anonymous namespace)::kBigSIUnits
	leaq	__ZN9benchmark12_GLOBAL__N_1L13kSmallSIUnitsE(%rip), %rdx ## literal pool for: "munpfazy"benchmark::(anonymous namespace)::kSmallSIUnits
	cmovgq	%rcx, %rdx
	movb	-1(%rdx,%rax), %al
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -432(%rbp)
	movq	$0, -416(%rbp)
	movb	$2, -432(%rbp)
	movb	%al, -431(%rbp)
	leaq	-430(%rbp), %rax
	movb	$0, (%rax)
	movzbl	-64(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	andb	$1, %al
	leaq	-63(%rbp), %rdx
	cmovneq	-48(%rbp), %rdx
	testb	%al, %al
	cmovneq	-56(%rbp), %rcx
	leaq	-432(%rbp), %rdi
	xorl	%esi, %esi
	callq	0x1000295e4 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm
	movq	16(%rax), %rcx
	movq	-136(%rbp), %rsi
	movq	%rcx, 16(%rsi)
	movq	(%rax), %rcx
	movq	8(%rax), %rdx
	movq	%rdx, 8(%rsi)
	movq	%rcx, (%rsi)
	movq	$0, 16(%rax)
	movq	$0, 8(%rax)
	movq	$0, (%rax)
	testb	$1, -432(%rbp)
	je	0x10002525f
	movq	-416(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x10002526e
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$392, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	jmp	0x1000252a6
	movq	%rax, %rdi
	callq	___clang_call_terminate
	jmp	0x1000252a6
	jmp	0x1000252a6
	jmp	0x1000252a6
	movq	%rax, %rdi
	callq	___clang_call_terminate
	jmp	0x1000252a6
	movq	%rax, %rdi
	callq	___clang_call_terminate
	jmp	0x1000252a6
	jmp	0x1000252a6
	movq	%rax, %rbx
	movq	-104(%rbp), %rax
	movq	%rax, -432(%rbp)
	movq	%r14, -304(%rbp)
	movq	%r13, -416(%rbp)
	movq	%r15, -408(%rbp)
	testb	$1, -344(%rbp)
	je	0x1000252de
	movq	-328(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-408(%rbp), %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	jmp	0x10002533a
	movq	%rax, %rbx
	testb	$1, -432(%rbp)
	jne	0x100025306
	testb	$1, -64(%rbp)
	jne	0x100025363
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	-416(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -64(%rbp)
	je	0x1000252fe
	jmp	0x100025363
	movq	%rax, %rbx
	testb	$1, -96(%rbp)
	je	0x1000252c9
	movq	-80(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -344(%rbp)
	jne	0x1000252d2
	jmp	0x1000252de
	movq	%rax, %rbx
	movq	40375(%rip), %rsi
	addq	$8, %rsi
	leaq	-432(%rbp), %rdi
	callq	0x100029662 ## symbol stub for: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
	leaq	-304(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	testb	$1, -64(%rbp)
	je	0x1000252fe
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %rbx
	jmp	0x100025351
	nopl	(%rax)
__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	40468(%rip), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, (%rbx)
	movq	%rbx, %r14
	subq	$-128, %r14
	leaq	104(%rax), %rcx
	movq	%rcx, 128(%rbx)
	addq	$64, %rax
	movq	%rax, 16(%rbx)
	leaq	24(%rbx), %r15
	movq	40368(%rip), %rax
	addq	$16, %rax
	movq	%rax, 24(%rbx)
	testb	$1, 88(%rbx)
	je	0x1000253d7
	movq	104(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	40210(%rip), %rsi
	addq	$8, %rsi
	movq	%rbx, %rdi
	callq	0x100029662 ## symbol stub for: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	nopw	%cs:(%rax,%rax)
__ZN9benchmark19HumanReadableNumberEdd:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movaps	%xmm1, %xmm2
	movq	%rdi, %rbx
	movsd	20668(%rip), %xmm1
	movl	$1, %esi
	callq	__ZN9benchmark12_GLOBAL__N_128ToBinaryStringFullySpecifiedEddid ## benchmark::(anonymous namespace)::ToBinaryStringFullySpecified(double, double, int, double)
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nopl	(%rax,%rax)
__ZN9benchmark12StrFormatImpEPKcP13__va_list_tag:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$296, %rsp
	movq	%rdx, %rbx
	movq	%rsi, %r15
	movq	%rdi, %r12
	movq	40396(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	movq	%rax, -48(%rbp)
	movq	16(%rbx), %rax
	movq	%rax, -64(%rbp)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	movq	%rcx, -72(%rbp)
	movq	%rax, -80(%rbp)
	leaq	-336(%rbp), %rdi
	leaq	-80(%rbp), %rcx
	movl	$256, %esi
	movq	%r15, %rdx
	callq	0x10002988a ## symbol stub for: _vsnprintf
	testl	%eax, %eax
	je	0x1000254fe
	cmpl	$255, %eax
	ja	0x10002551d
	movq	$0, 16(%r12)
	movq	$0, 8(%r12)
	movq	$0, (%r12)
	leaq	-336(%rbp), %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	%rax, %r14
	cmpq	$-16, %r14
	jae	0x100025638
	cmpq	$23, %r14
	jae	0x100025589
	movl	%r14d, %eax
	addb	%al, %al
	movb	%al, (%r12)
	leaq	1(%r12), %r15
	testq	%r14, %r14
	jne	0x1000255b1
	jmp	0x1000255c3
	movq	$0, 16(%r12)
	movq	$0, 8(%r12)
	movq	$0, (%r12)
	jmp	0x10002560e
	movslq	%eax, %r13
	incq	%r13
	movq	%r13, %rdi
	callq	0x100029740 ## symbol stub for: __Znam
	movq	%rax, %r14
	movq	%r14, %rdi
	movq	%r13, %rsi
	movq	%r15, %rdx
	movq	%rbx, %rcx
	callq	0x10002988a ## symbol stub for: _vsnprintf
	movq	$0, 16(%r12)
	movq	$0, 8(%r12)
	movq	$0, (%r12)
	movq	%r14, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	%rax, %r15
	cmpq	$-16, %r15
	jae	0x100025640
	cmpq	$23, %r15
	jae	0x1000255ca
	movl	%r15d, %eax
	addb	%al, %al
	movb	%al, (%r12)
	leaq	1(%r12), %r13
	testq	%r15, %r15
	jne	0x1000255f2
	jmp	0x100025600
	movq	%r14, %rbx
	addq	$16, %rbx
	andq	$-16, %rbx
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r15
	movq	%r15, 16(%r12)
	orq	$1, %rbx
	movq	%rbx, (%r12)
	movq	%r14, 8(%r12)
	leaq	-336(%rbp), %rsi
	movq	%r15, %rdi
	movq	%r14, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	movb	$0, (%r15,%r14)
	jmp	0x10002560e
	movq	%r15, %rbx
	addq	$16, %rbx
	andq	$-16, %rbx
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r13
	movq	%r13, 16(%r12)
	orq	$1, %rbx
	movq	%rbx, (%r12)
	movq	%r15, 8(%r12)
	movq	%r13, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	movb	$0, (%r13,%r15)
	movq	%r14, %rdi
	callq	0x100029734 ## symbol stub for: __ZdaPv
	movq	39963(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	cmpq	-48(%rbp), %rax
	jne	0x100025633
	movq	%r12, %rax
	addq	$296, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	callq	0x1000297a0 ## symbol stub for: ___stack_chk_fail
	movq	%r12, %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%r12, %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	0x100029734 ## symbol stub for: __ZdaPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax,%rax)
__ZN9benchmark9StrFormatEPKcz:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	subq	$216, %rsp
	movq	%rdi, %rbx
	testb	%al, %al
	je	0x10002569c
	movaps	%xmm0, -176(%rbp)
	movaps	%xmm1, -160(%rbp)
	movaps	%xmm2, -144(%rbp)
	movaps	%xmm3, -128(%rbp)
	movaps	%xmm4, -112(%rbp)
	movaps	%xmm5, -96(%rbp)
	movaps	%xmm6, -80(%rbp)
	movaps	%xmm7, -64(%rbp)
	movq	%r9, -184(%rbp)
	movq	%r8, -192(%rbp)
	movq	%rcx, -200(%rbp)
	movq	%rdx, -208(%rbp)
	movq	39793(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	movq	%rax, -16(%rbp)
	leaq	-224(%rbp), %rax
	movq	%rax, -32(%rbp)
	leaq	16(%rbp), %rax
	movq	%rax, -40(%rbp)
	movl	$48, -44(%rbp)
	movl	$16, -48(%rbp)
	leaq	-48(%rbp), %rdx
	movq	%rbx, %rdi
	callq	__ZN9benchmark12StrFormatImpEPKcP13__va_list_tag ## benchmark::StrFormatImp(char const*, __va_list_tag*)
	movq	39734(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	cmpq	-16(%rbp), %rax
	jne	0x100025710
	movq	%rbx, %rax
	addq	$216, %rsp
	popq	%rbx
	popq	%rbp
	retq
	callq	0x1000297a0 ## symbol stub for: ___stack_chk_fail
	nopw	%cs:(%rax,%rax)
__ZN9benchmark10ReplaceAllEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKS6_S9_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	movq	%rdi, %r15
	leaq	1(%r15), %rax
	movq	%rax, -96(%rbp)
	leaq	1(%rsi), %rcx
	movq	%rdx, -88(%rbp)
	leaq	1(%rdx), %rax
	movq	%rax, -56(%rbp)
	xorl	%ebx, %ebx
	movq	%rsi, -80(%rbp)
	movq	%r15, -72(%rbp)
	movq	%rcx, -64(%rbp)
	movzbl	(%r15), %r12d
	testb	$1, %r12b
	je	0x1000257ff
	jmp	0x100025810
	nopl	(%rax)
	incq	%rbx
	movq	%r12, %rdx
	subq	%rbx, %rdx
	cmpq	%r13, %rdx
	jge	0x100025860
	jmp	0x100025896
	nopw	(%rax,%rax)
	cmpq	%r12, %rbx
	je	0x100025896
	subq	-48(%rbp), %rbx
	cmpq	$-1, %rbx
	je	0x100025896
	movq	-88(%rbp), %r14
	movzbl	(%r14), %eax
	movq	%rax, %r8
	shrq	%r8
	andb	$1, %al
	cmovneq	8(%r14), %r8
	testb	%al, %al
	movq	16(%r14), %rcx
	cmoveq	-56(%rbp), %rcx
	movq	-72(%rbp), %r15
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r13, %rdx
	callq	0x1000295f6 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEmmPKcm
	movzbl	(%r14), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	8(%r14), %rcx
	addq	%rcx, %rbx
	movq	-80(%rbp), %rsi
	movq	-64(%rbp), %rcx
	movzbl	(%r15), %r12d
	testb	$1, %r12b
	jne	0x100025810
	shrq	%r12
	movq	-96(%rbp), %rax
	jmp	0x100025818
	nopl	(%rax,%rax)
	movq	8(%r15), %r12
	movq	16(%r15), %rax
	movq	%rax, -48(%rbp)
	movzbl	(%rsi), %eax
	movq	%rax, %r13
	shrq	%r13
	andb	$1, %al
	cmovneq	8(%rsi), %r13
	testb	%al, %al
	movq	16(%rsi), %r14
	cmoveq	%rcx, %r14
	cmpq	%rbx, %r12
	jb	0x100025896
	testq	%r13, %r13
	je	0x10002579d
	movq	-48(%rbp), %rax
	addq	%rax, %rbx
	addq	%rax, %r12
	movq	%r12, %rdx
	subq	%rbx, %rdx
	cmpq	%r13, %rdx
	jl	0x100025896
	movzbl	(%r14), %r15d
	nopl	(%rax)
	subq	%r13, %rdx
	incq	%rdx
	je	0x100025896
	movq	%rbx, %rdi
	movl	%r15d, %esi
	callq	0x100029812 ## symbol stub for: _memchr
	movq	%rax, %rbx
	testq	%rbx, %rbx
	je	0x100025896
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movq	%r13, %rdx
	callq	0x100029818 ## symbol stub for: _memcmp
	testl	%eax, %eax
	jne	0x100025770
	jmp	0x100025790
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZThn16_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	39143(%rip), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, -16(%rdi)
	leaq	104(%rax), %rcx
	movq	%rcx, 112(%rdi)
	addq	$64, %rax
	movq	%rax, (%rdi)
	movq	39057(%rip), %rax
	addq	$16, %rax
	movq	%rax, 8(%rdi)
	testb	$1, 72(%rdi)
	leaq	-16(%rdi), %rbx
	leaq	112(%rdi), %r14
	leaq	8(%rdi), %r15
	je	0x100025902
	movq	104(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	38887(%rip), %rsi
	addq	$8, %rsi
	movq	%rbx, %rdi
	callq	0x100029662 ## symbol stub for: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	nop
__ZTv0_n24_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	(%rdi), %rax
	movq	-24(%rax), %rax
	leaq	(%rdi,%rax), %r15
	movq	39004(%rip), %rcx
	leaq	24(%rcx), %rdx
	movq	%rdx, (%rdi,%rax)
	leaq	128(%rdi,%rax), %r14
	leaq	104(%rcx), %rdx
	movq	%rdx, 128(%rdi,%rax)
	addq	$64, %rcx
	movq	%rcx, 16(%rdi,%rax)
	leaq	24(%rdi,%rax), %rbx
	movq	38899(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, 24(%rdi,%rax)
	testb	$1, 88(%rdi,%rax)
	je	0x100025996
	movq	104(%r15), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	38739(%rip), %rsi
	addq	$8, %rsi
	movq	%r15, %rdi
	callq	0x100029662 ## symbol stub for: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	nopw	%cs:(%rax,%rax)
__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	38852(%rip), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, (%rbx)
	movq	%rbx, %r14
	subq	$-128, %r14
	leaq	104(%rax), %rcx
	movq	%rcx, 128(%rbx)
	addq	$64, %rax
	movq	%rax, 16(%rbx)
	leaq	24(%rbx), %r15
	movq	38752(%rip), %rax
	addq	$16, %rax
	movq	%rax, 24(%rbx)
	testb	$1, 88(%rbx)
	je	0x100025a27
	movq	104(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	38594(%rip), %rsi
	addq	$8, %rsi
	movq	%rbx, %rdi
	callq	0x100029662 ## symbol stub for: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopl	(%rax)
__ZThn16_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	38711(%rip), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, -16(%rdi)
	leaq	104(%rax), %rcx
	movq	%rcx, 112(%rdi)
	addq	$64, %rax
	movq	%rax, (%rdi)
	movq	38625(%rip), %rax
	addq	$16, %rax
	movq	%rax, 8(%rdi)
	testb	$1, 72(%rdi)
	leaq	-16(%rdi), %rbx
	leaq	112(%rdi), %r14
	leaq	8(%rdi), %r15
	je	0x100025ab2
	movq	104(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	38455(%rip), %rsi
	addq	$8, %rsi
	movq	%rbx, %rdi
	callq	0x100029662 ## symbol stub for: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopw	(%rax,%rax)
__ZTv0_n24_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	(%rdi), %rax
	movq	-24(%rax), %rax
	leaq	(%rdi,%rax), %rbx
	movq	38556(%rip), %rcx
	leaq	24(%rcx), %rdx
	movq	%rdx, (%rdi,%rax)
	leaq	128(%rdi,%rax), %r14
	leaq	104(%rcx), %rdx
	movq	%rdx, 128(%rdi,%rax)
	addq	$64, %rcx
	movq	%rcx, 16(%rdi,%rax)
	leaq	24(%rdi,%rax), %r15
	movq	38451(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, 24(%rdi,%rax)
	testb	$1, 88(%rdi,%rax)
	je	0x100025b56
	movq	104(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	38291(%rip), %rsi
	addq	$8, %rsi
	movq	%rbx, %rdi
	callq	0x100029662 ## symbol stub for: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopl	(%rax,%rax)
__GLOBAL__sub_I_string_util.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark8internal17InitializeStreamsEv ## benchmark::internal::InitializeStreams()
	nop
	nop
	nop
	nop
	nop
	nop
__ZN9benchmark7CPUInfo3GetEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movb	__ZGVZN9benchmark7CPUInfo3GetEvE4info(%rip), %al ## guard variable for benchmark::CPUInfo::Get()::info
	testb	%al, %al
	jne	0x100025be9
	leaq	__ZGVZN9benchmark7CPUInfo3GetEvE4info(%rip), %rdi ## guard variable for benchmark::CPUInfo::Get()::info
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100025be9
	movl	$48, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	%rbx, %rdi
	callq	__ZN9benchmark7CPUInfoC2Ev ## benchmark::CPUInfo::CPUInfo()
	movq	%rbx, __ZZN9benchmark7CPUInfo3GetEvE4info(%rip) ## benchmark::CPUInfo::Get()::info
	leaq	__ZGVZN9benchmark7CPUInfo3GetEvE4info(%rip), %rdi ## guard variable for benchmark::CPUInfo::Get()::info
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	__ZZN9benchmark7CPUInfo3GetEvE4info(%rip), %rax ## benchmark::CPUInfo::Get()::info
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x100025c05
	movq	%rax, %r14
	leaq	__ZGVZN9benchmark7CPUInfo3GetEvE4info(%rip), %rdi ## guard variable for benchmark::CPUInfo::Get()::info
	callq	0x100029770 ## symbol stub for: ___cxa_guard_abort
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax)
__ZN9benchmark7CPUInfoC1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark7CPUInfoC2Ev ## benchmark::CPUInfo::CPUInfo()
	nopw	(%rax,%rax)
__ZN9benchmark7CPUInfoC2Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$728, %rsp
	movq	%rdi, %r13
	movq	38370(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	movq	%rax, -48(%rbp)
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, -672(%rbp)
	movq	$0, -656(%rbp)
	movb	$14, -672(%rbp)
	movabsq	$33056144627758952, %rax
	movq	%rax, -671(%rbp)
	leaq	-624(%rbp), %rdi
	leaq	-672(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_112GetSysctlImpERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE ## benchmark::(anonymous namespace)::GetSysctlImp(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	movq	-616(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100025cb2
	cmpq	$4, -624(%rbp)
	jne	0x100025ccd
	movl	(%rdi), %r14d
	jmp	0x100025cd0
	movq	$0, -616(%rbp)
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
	testb	$1, -672(%rbp)
	jne	0x100025cec
	jmp	0x100025cf8
	movq	(%rdi), %r14
	movq	$0, -616(%rbp)
	callq	*-608(%rbp)
	movb	$1, %bl
	testb	$1, -672(%rbp)
	je	0x100025cf8
	movq	-656(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	%bl, %bl
	je	0x100026a7b
	movl	%r14d, (%r13)
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, -672(%rbp)
	movq	$0, -656(%rbp)
	movb	$30, -672(%rbp)
	movabsq	$8746956283324753266, %rax
	movq	%rax, -664(%rbp)
	movabsq	$8243405293509048168, %rax
	movq	%rax, -671(%rbp)
	movb	$0, -656(%rbp)
	leaq	-624(%rbp), %rdi
	leaq	-672(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_112GetSysctlImpERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE ## benchmark::(anonymous namespace)::GetSysctlImp(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	movq	-616(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100025d79
	cmpq	$4, -624(%rbp)
	jne	0x100025d94
	movl	(%rdi), %r14d
	jmp	0x100025d97
	movq	$0, -616(%rbp)
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
	testb	$1, -672(%rbp)
	jne	0x100025db3
	jmp	0x100025dbf
	movq	(%rdi), %r14
	movq	$0, -616(%rbp)
	movb	$1, %bl
	callq	*-608(%rbp)
	testb	$1, -672(%rbp)
	je	0x100025dbf
	movq	-656(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	%bl, %bl
	je	0x100025dde
	movq	%r14, %xmm0
	punpckldq	16416(%rip), %xmm0
	subpd	16424(%rip), %xmm0
	haddpd	%xmm0, %xmm0
	jmp	0x100025e31
	movq	37971(%rip), %rax ## literal pool symbol address: ___stderrp
	movq	(%rax), %rbx
	callq	0x10002978e ## symbol stub for: ___error
	movl	(%rax), %edi
	callq	0x10002985a ## symbol stub for: _strerror
	movq	%rax, %rcx
	leaq	34627(%rip), %rsi ## literal pool for: "Unable to determine clock rate from sysctl: %s: %s\n"
	leaq	34604(%rip), %rdx ## literal pool for: "hw.cpufrequency"
	xorl	%eax, %eax
	movq	%rbx, %rdi
	callq	0x1000297ca ## symbol stub for: _fprintf
	callq	0x100029806 ## symbol stub for: _mach_absolute_time
	movq	%rax, %rbx
	movl	$1000, %edi
	callq	__ZN9benchmark20SleepForMillisecondsEi ## benchmark::SleepForMilliseconds(int)
	callq	0x100029806 ## symbol stub for: _mach_absolute_time
	subq	%rbx, %rax
	xorps	%xmm0, %xmm0
	cvtsi2sdq	%rax, %xmm0
	movsd	%xmm0, 8(%r13)
	leaq	16(%r13), %rax
	movq	%rax, -680(%rbp)
	movq	$0, 32(%r13)
	movq	$0, 24(%r13)
	movq	$0, 16(%r13)
	movq	$0, -656(%rbp)
	movb	$28, -672(%rbp)
	movabsq	$7451599682962417000, %rax
	movq	%rax, -665(%rbp)
	movabsq	$7307199665335596904, %rax
	movq	%rax, -671(%rbp)
	movb	$0, -657(%rbp)
	leaq	-624(%rbp), %rdi
	leaq	-672(%rbp), %rsi
	movq	%r13, -696(%rbp)
	callq	__ZN9benchmark12_GLOBAL__N_112GetSysctlImpERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE ## benchmark::(anonymous namespace)::GetSysctlImp(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	cmpq	$0, -616(%rbp)
	je	0x10002619d
	movq	37212(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x100025ef4
	movq	37199(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x100025ef4
	movq	37679(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	37169(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	-616(%rbp), %rdi
	movq	8(%rdi), %rbx
	movq	16(%rdi), %r15
	movq	24(%rdi), %r14
	movq	$0, -616(%rbp)
	testq	%rdi, %rdi
	je	0x100025f1d
	callq	*-608(%rbp)
	testb	$1, -672(%rbp)
	je	0x100025f32
	movq	-656(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -624(%rbp)
	movapd	%xmm0, -608(%rbp)
	movb	$30, -624(%rbp)
	movabsq	$7312272889332917089, %rax
	movq	%rax, -616(%rbp)
	movabsq	$7017562807804524392, %rcx
	movq	%rcx, -623(%rbp)
	movb	$0, -608(%rbp)
	movq	$0, -584(%rbp)
	movq	$0, -592(%rbp)
	movb	$8, -600(%rbp)
	movl	$1635017028, -599(%rbp)
	movb	$0, -595(%rbp)
	movl	$1, -576(%rbp)
	movq	%rbx, -568(%rbp)
	movapd	%xmm0, -560(%rbp)
	movq	$0, -544(%rbp)
	movb	$30, -560(%rbp)
	movq	%rax, -552(%rbp)
	movabsq	$7017568305362663272, %rcx
	movq	%rcx, -559(%rbp)
	movb	$0, -544(%rbp)
	movq	$0, -520(%rbp)
	movq	$0, -528(%rbp)
	movq	$0, -536(%rbp)
	movb	$22, -536(%rbp)
	movabsq	$8386676065534438985, %rcx
	movq	%rcx, -535(%rbp)
	movb	$110, -525(%rbp)
	movw	$28521, -527(%rbp)
	movb	$0, -524(%rbp)
	movl	$1, -512(%rbp)
	movq	%rbx, -504(%rbp)
	movq	$0, -480(%rbp)
	movb	$28, -496(%rbp)
	movq	%rax, -489(%rbp)
	movabsq	$7161113950710298472, %rcx
	movq	%rcx, -495(%rbp)
	movb	$0, -481(%rbp)
	movq	$0, -456(%rbp)
	movq	$0, -464(%rbp)
	movq	$0, -472(%rbp)
	movb	$14, -472(%rbp)
	movb	$100, -465(%rbp)
	movw	$25961, -467(%rbp)
	movl	$1718185557, -471(%rbp)
	movb	$0, -464(%rbp)
	movl	$2, -448(%rbp)
	movq	%r15, -440(%rbp)
	movq	$0, -416(%rbp)
	movb	$28, -432(%rbp)
	movq	%rax, -425(%rbp)
	movabsq	$7161113955005265768, %rax
	movq	%rax, -431(%rbp)
	movb	$0, -417(%rbp)
	movq	$0, -392(%rbp)
	movq	$0, -400(%rbp)
	movq	$0, -408(%rbp)
	movb	$14, -408(%rbp)
	movb	$100, -401(%rbp)
	movw	$25961, -403(%rbp)
	movl	$1718185557, -407(%rbp)
	movb	$0, -400(%rbp)
	movl	$3, -384(%rbp)
	movq	%r14, -376(%rbp)
	leaq	-672(%rbp), %rdi
	leaq	-624(%rbp), %rsi
	callq	__ZN9benchmark12_GLOBAL__N_112GetSysctlImpERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE ## benchmark::(anonymous namespace)::GetSysctlImp(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	leaq	-648(%rbp), %r14
	movq	-664(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10002629c
	cmpq	$4, -672(%rbp)
	jne	0x1000261c2
	movl	(%rdi), %ebx
	jmp	0x1000261c5
	movq	$0, -616(%rbp)
	xorl	%r14d, %r14d
	xorl	%r15d, %r15d
	xorl	%ebx, %ebx
	testb	$1, -672(%rbp)
	jne	0x100025f26
	jmp	0x100025f32
	movq	(%rdi), %rbx
	movq	$0, -664(%rbp)
	callq	*-656(%rbp)
	leaq	-600(%rbp), %rsi
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -672(%rbp)
	movq	$0, -656(%rbp)
	leaq	-672(%rbp), %rdi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	movl	-576(%rbp), %eax
	movl	-568(%rbp), %ecx
	movl	%eax, -648(%rbp)
	movl	%ebx, -644(%rbp)
	movl	%ecx, -640(%rbp)
	movq	24(%r13), %rax
	cmpq	32(%r13), %rax
	jae	0x100026274
	movq	-656(%rbp), %rcx
	movq	%rcx, 16(%rax)
	movq	-672(%rbp), %rcx
	movq	-664(%rbp), %rdx
	movq	%rdx, 8(%rax)
	movq	%rcx, (%rax)
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -672(%rbp)
	movq	$0, -656(%rbp)
	movl	8(%r14), %ecx
	movl	%ecx, 32(%rax)
	movq	(%r14), %rcx
	movq	%rcx, 24(%rax)
	addq	$40, 24(%r13)
	jmp	0x10002629c
	leaq	-672(%rbp), %rsi
	movq	-680(%rbp), %rdi
	callq	__ZNSt3__16vectorIN9benchmark7CPUInfo9CacheInfoENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ ## void std::__1::vector<benchmark::CPUInfo::CacheInfo, std::__1::allocator<benchmark::CPUInfo::CacheInfo> >::__push_back_slow_path<benchmark::CPUInfo::CacheInfo>(benchmark::CPUInfo::CacheInfo&&)
	testb	$1, -672(%rbp)
	je	0x10002629c
	movq	-656(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-560(%rbp), %rsi
	leaq	-672(%rbp), %rdi
	callq	__ZN9benchmark12_GLOBAL__N_112GetSysctlImpERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE ## benchmark::(anonymous namespace)::GetSysctlImp(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	movq	-664(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x1000263a7
	cmpq	$4, -672(%rbp)
	jne	0x1000262cd
	movl	(%rdi), %ebx
	jmp	0x1000262d0
	movq	(%rdi), %rbx
	movq	$0, -664(%rbp)
	callq	*-656(%rbp)
	leaq	-536(%rbp), %rsi
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -672(%rbp)
	movq	$0, -656(%rbp)
	leaq	-672(%rbp), %rdi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	movl	-512(%rbp), %eax
	movl	-504(%rbp), %ecx
	movl	%eax, -648(%rbp)
	movl	%ebx, -644(%rbp)
	movl	%ecx, -640(%rbp)
	movq	24(%r13), %rax
	cmpq	32(%r13), %rax
	jae	0x10002637f
	movq	-656(%rbp), %rcx
	movq	%rcx, 16(%rax)
	movq	-672(%rbp), %rcx
	movq	-664(%rbp), %rdx
	movq	%rdx, 8(%rax)
	movq	%rcx, (%rax)
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -672(%rbp)
	movq	$0, -656(%rbp)
	movl	8(%r14), %ecx
	movl	%ecx, 32(%rax)
	movq	(%r14), %rcx
	movq	%rcx, 24(%rax)
	addq	$40, 24(%r13)
	jmp	0x1000263a7
	leaq	-672(%rbp), %rsi
	movq	-680(%rbp), %rdi
	callq	__ZNSt3__16vectorIN9benchmark7CPUInfo9CacheInfoENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ ## void std::__1::vector<benchmark::CPUInfo::CacheInfo, std::__1::allocator<benchmark::CPUInfo::CacheInfo> >::__push_back_slow_path<benchmark::CPUInfo::CacheInfo>(benchmark::CPUInfo::CacheInfo&&)
	testb	$1, -672(%rbp)
	je	0x1000263a7
	movq	-656(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-496(%rbp), %rsi
	leaq	-672(%rbp), %rdi
	callq	__ZN9benchmark12_GLOBAL__N_112GetSysctlImpERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE ## benchmark::(anonymous namespace)::GetSysctlImp(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	movq	-664(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x1000264b2
	cmpq	$4, -672(%rbp)
	jne	0x1000263d8
	movl	(%rdi), %ebx
	jmp	0x1000263db
	movq	(%rdi), %rbx
	movq	$0, -664(%rbp)
	callq	*-656(%rbp)
	leaq	-472(%rbp), %rsi
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -672(%rbp)
	movq	$0, -656(%rbp)
	leaq	-672(%rbp), %rdi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	movl	-448(%rbp), %eax
	movl	-440(%rbp), %ecx
	movl	%eax, -648(%rbp)
	movl	%ebx, -644(%rbp)
	movl	%ecx, -640(%rbp)
	movq	24(%r13), %rax
	cmpq	32(%r13), %rax
	jae	0x10002648a
	movq	-656(%rbp), %rcx
	movq	%rcx, 16(%rax)
	movq	-672(%rbp), %rcx
	movq	-664(%rbp), %rdx
	movq	%rdx, 8(%rax)
	movq	%rcx, (%rax)
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -672(%rbp)
	movq	$0, -656(%rbp)
	movl	8(%r14), %ecx
	movl	%ecx, 32(%rax)
	movq	(%r14), %rcx
	movq	%rcx, 24(%rax)
	addq	$40, 24(%r13)
	jmp	0x1000264b2
	leaq	-672(%rbp), %rsi
	movq	-680(%rbp), %rdi
	callq	__ZNSt3__16vectorIN9benchmark7CPUInfo9CacheInfoENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ ## void std::__1::vector<benchmark::CPUInfo::CacheInfo, std::__1::allocator<benchmark::CPUInfo::CacheInfo> >::__push_back_slow_path<benchmark::CPUInfo::CacheInfo>(benchmark::CPUInfo::CacheInfo&&)
	testb	$1, -672(%rbp)
	je	0x1000264b2
	movq	-656(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-432(%rbp), %rsi
	leaq	-672(%rbp), %rdi
	callq	__ZN9benchmark12_GLOBAL__N_112GetSysctlImpERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE ## benchmark::(anonymous namespace)::GetSysctlImp(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	movq	-664(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x1000265c6
	cmpq	$4, -672(%rbp)
	jne	0x1000264e3
	movl	(%rdi), %ebx
	jmp	0x1000264e6
	movq	(%rdi), %rbx
	movq	$0, -664(%rbp)
	callq	*-656(%rbp)
	leaq	-408(%rbp), %rsi
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -672(%rbp)
	movq	$0, -656(%rbp)
	leaq	-672(%rbp), %rdi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	movl	-384(%rbp), %eax
	movl	-376(%rbp), %ecx
	movl	%eax, -648(%rbp)
	movl	%ebx, -644(%rbp)
	movl	%ecx, -640(%rbp)
	movq	24(%r13), %rax
	cmpq	32(%r13), %rax
	jae	0x10002659e
	movq	-656(%rbp), %rcx
	movq	%rcx, 16(%rax)
	movq	-672(%rbp), %rcx
	movq	-664(%rbp), %rdx
	movq	%rdx, 8(%rax)
	movq	%rcx, (%rax)
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -672(%rbp)
	movq	$0, -656(%rbp)
	movl	8(%r14), %ecx
	movl	%ecx, 32(%rax)
	movq	(%r14), %rcx
	movq	%rcx, 24(%rax)
	addq	$40, 24(%r13)
	testb	$1, -408(%rbp)
	jne	0x1000265cf
	jmp	0x1000265db
	leaq	-672(%rbp), %rsi
	movq	-680(%rbp), %rdi
	callq	__ZNSt3__16vectorIN9benchmark7CPUInfo9CacheInfoENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ ## void std::__1::vector<benchmark::CPUInfo::CacheInfo, std::__1::allocator<benchmark::CPUInfo::CacheInfo> >::__push_back_slow_path<benchmark::CPUInfo::CacheInfo>(benchmark::CPUInfo::CacheInfo&&)
	testb	$1, -672(%rbp)
	je	0x1000265c6
	movq	-656(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -408(%rbp)
	je	0x1000265db
	movq	-392(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -432(%rbp)
	jne	0x10002698d
	testb	$1, -472(%rbp)
	jne	0x1000269a6
	testb	$1, -496(%rbp)
	jne	0x1000269bf
	testb	$1, -536(%rbp)
	jne	0x1000269d8
	testb	$1, -560(%rbp)
	jne	0x1000269f1
	testb	$1, -600(%rbp)
	jne	0x100026a0a
	testb	$1, -624(%rbp)
	je	0x10002663e
	movq	-608(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movl	(%r13), %eax
	movl	%eax, -708(%rbp)
	testl	%eax, %eax
	jle	0x100026a28
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, -672(%rbp)
	movq	$0, -656(%rbp)
	movl	$0, -684(%rbp)
	leaq	-200(%rbp), %r15
	leaq	-608(%rbp), %rbx
	leaq	-672(%rbp), %r12
	movq	35355(%rip), %rax
	leaq	64(%rax), %rcx
	movq	%rcx, -744(%rbp)
	addq	$24, %rax
	movq	%rax, %xmm0
	movdqa	%xmm0, -768(%rbp)
	movq	35384(%rip), %rax
	addq	$8, %rax
	movq	%rax, -704(%rbp)
	leaq	-736(%rbp), %rdi
	leaq	32525(%rip), %rsi ## literal pool for: "/sys/devices/system/cpu/cpu"
	leaq	-684(%rbp), %rdx
	leaq	32539(%rip), %rcx ## literal pool for: "/cpufreq/scaling_governor"
	callq	__ZN9benchmark6StrCatIJRA28_KcRiRA26_S1_EEENSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEDpOT_ ## std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > benchmark::StrCat<char const (&) [28], int&, char const (&) [26]>(char const (&) [28], int&, char const (&) [26])
	movq	$0, -617(%rbp)
	movq	$0, -624(%rbp)
	testb	$1, -672(%rbp)
	jne	0x100026710
	movw	$0, -672(%rbp)
	jmp	0x100026725
	nopw	%cs:(%rax,%rax)
	movq	-656(%rbp), %rax
	movb	$0, (%rax)
	movq	$0, -664(%rbp)
	xorl	%esi, %esi
	movq	%r12, %rdi
	callq	0x1000295fc ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
	movb	$0, -672(%rbp)
	movq	-624(%rbp), %rax
	movq	-617(%rbp), %rcx
	leaq	-671(%rbp), %rdx
	movq	%rcx, 7(%rdx)
	movq	%rax, (%rdx)
	movq	$0, -656(%rbp)
	testb	$1, -736(%rbp)
	movq	-720(%rbp), %r12
	leaq	-735(%rbp), %rax
	cmoveq	%rax, %r12
	movq	-744(%rbp), %rax
	movq	%rax, -200(%rbp)
	movdqa	-768(%rbp), %xmm0
	movdqa	%xmm0, -624(%rbp)
	movq	%r15, %rdi
	movq	%rbx, %rsi
	callq	0x100029710 ## symbol stub for: __ZNSt3__18ios_base4initEPv
	movq	$0, -64(%rbp)
	movl	$4294967295, -56(%rbp)
	movq	35235(%rip), %rax
	leaq	24(%rax), %r15
	movq	%r15, -624(%rbp)
	leaq	64(%rax), %r13
	movq	%r13, -200(%rbp)
	movq	%rbx, %r14
	movq	%rbx, %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::basic_filebuf()
	cmpq	$0, -488(%rbp)
	je	0x100026860
	movq	-624(%rbp), %rax
	movq	-24(%rax), %rax
	leaq	-624(%rbp,%rax), %rdi
	movl	-592(%rbp,%rax), %esi
	orl	$4, %esi
	callq	0x100029716 ## symbol stub for: __ZNSt3__18ios_base5clearEj
	cmpq	$0, -488(%rbp)
	jne	0x100026889
	movq	%r15, -624(%rbp)
	movq	%r13, -200(%rbp)
	movq	%r14, %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	leaq	-624(%rbp), %rdi
	movq	-704(%rbp), %rsi
	callq	0x100029626 ## symbol stub for: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
	leaq	-200(%rbp), %r15
	movq	%r15, %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	-696(%rbp), %r13
	leaq	-672(%rbp), %r12
	jmp	0x1000268f6
	nopl	(%rax,%rax)
	movq	%r12, %rdi
	leaq	32174(%rip), %rsi ## literal pool for: "r"
	callq	0x1000297c4 ## symbol stub for: _fopen
	movq	%rax, -488(%rbp)
	testq	%rax, %rax
	je	0x1000267e4
	movl	$8, -216(%rbp)
	leaq	-624(%rbp), %rbx
	movq	%rbx, %rdi
	leaq	-672(%rbp), %r12
	movq	%r12, %rsi
	callq	__ZNSt3__1rsIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_istreamIT_T0_EES9_RNS_12basic_stringIS6_S7_T1_EE ## std::__1::basic_istream<char, std::__1::char_traits<char> >& std::__1::operator>><char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_istream<char, std::__1::char_traits<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)
	movq	-624(%rbp), %rax
	movq	-24(%rax), %rax
	movq	%r14, %rdi
	movl	-592(%rbp,%rax), %r14d
	movq	%r15, -624(%rbp)
	movq	%r13, -200(%rbp)
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	movq	%rbx, %rdi
	movq	-704(%rbp), %rsi
	callq	0x100029626 ## symbol stub for: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
	leaq	-200(%rbp), %r15
	movq	%r15, %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	cmpl	$0, %r14d
	movq	-696(%rbp), %r13
	je	0x100026940
	xorl	%ebx, %ebx
	testb	$1, -736(%rbp)
	je	0x10002690d
	movq	-720(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testl	%ebx, %ebx
	jne	0x100026a50
	movl	-684(%rbp), %eax
	incl	%eax
	movl	%eax, -684(%rbp)
	cmpl	-708(%rbp), %eax
	leaq	-608(%rbp), %rbx
	jl	0x1000266bb
	jmp	0x100026a5d
	nopl	(%rax,%rax)
	movzbl	-672(%rbp), %eax
	movq	%rax, %rcx
	shrq	%rcx
	testb	$1, %al
	cmovneq	-664(%rbp), %rcx
	movl	$1, %ebx
	cmpq	$11, %rcx
	jne	0x1000268f8
	xorl	%esi, %esi
	movq	$-1, %rdx
	movl	$11, %r8d
	movq	%r12, %rdi
	leaq	31889(%rip), %rcx ## literal pool for: "performance"
	callq	0x100029596 ## symbol stub for: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
	testl	%eax, %eax
	jne	0x1000268f8
	jmp	0x1000268f6
	movq	-416(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -472(%rbp)
	je	0x1000265f5
	movq	-456(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -496(%rbp)
	je	0x100026602
	movq	-480(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -536(%rbp)
	je	0x10002660f
	movq	-520(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -560(%rbp)
	je	0x10002661c
	movq	-544(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -600(%rbp)
	je	0x100026629
	movq	-584(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -624(%rbp)
	jne	0x100026632
	jmp	0x10002663e
	xorl	%ebx, %ebx
	movb	%bl, 40(%r13)
	movq	34811(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	cmpq	-48(%rbp), %rax
	jne	0x100026a76
	addq	$728, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movb	$1, %bl
	testb	$1, -672(%rbp)
	je	0x100026a2a
	jmp	0x100026a68
	xorl	%ebx, %ebx
	testb	$1, -672(%rbp)
	je	0x100026a2a
	movq	-656(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	jmp	0x100026a2a
	callq	0x1000297a0 ## symbol stub for: ___stack_chk_fail
	movq	34742(%rip), %rax ## literal pool symbol address: ___stderrp
	movq	(%rax), %rbx
	callq	0x10002978e ## symbol stub for: ___error
	movl	(%rax), %edi
	callq	0x10002985a ## symbol stub for: _strerror
	movq	%rax, %rcx
	leaq	31373(%rip), %rsi ## literal pool for: "Err: %s\n"
	xorl	%eax, %eax
	movq	%rbx, %rdi
	movq	%rcx, %rdx
	callq	0x1000297ca ## symbol stub for: _fprintf
	movl	$1, %edi
	callq	0x1000297ac ## symbol stub for: _exit
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %r12
	testb	$1, -672(%rbp)
	je	0x100026c72
	movq	-656(%rbp), %rdi
	jmp	0x100026c6d
	movq	%rax, %r12
	testb	$1, -672(%rbp)
	jne	0x100026b07
	jmp	0x100026dfe
	movq	%rax, %r12
	testb	$1, -672(%rbp)
	je	0x100026dfe
	movq	-656(%rbp), %rdi
	jmp	0x100026df9
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %r12
	testb	$1, -672(%rbp)
	jne	0x100026b94
	testb	$1, -408(%rbp)
	jne	0x100026bbb
	testb	$1, -432(%rbp)
	jne	0x100026bd4
	testb	$1, -472(%rbp)
	jne	0x100026bed
	testb	$1, -496(%rbp)
	jne	0x100026c06
	testb	$1, -536(%rbp)
	jne	0x100026c1f
	testb	$1, -560(%rbp)
	jne	0x100026c38
	testb	$1, -600(%rbp)
	jne	0x100026c51
	testb	$1, -624(%rbp)
	jne	0x100026c66
	jmp	0x100026c72
	movq	-656(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -408(%rbp)
	je	0x100026b34
	jmp	0x100026bbb
	movq	%rax, %r12
	testb	$1, -408(%rbp)
	je	0x100026b34
	movq	-392(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -432(%rbp)
	je	0x100026b41
	movq	-416(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -472(%rbp)
	je	0x100026b4e
	movq	-456(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -496(%rbp)
	je	0x100026b5b
	movq	-480(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -536(%rbp)
	je	0x100026b68
	movq	-520(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -560(%rbp)
	je	0x100026b75
	movq	-544(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -600(%rbp)
	je	0x100026b82
	movq	-584(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -624(%rbp)
	je	0x100026c72
	movq	-608(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-680(%rbp), %rax
	movq	(%rax), %r14
	testq	%r14, %r14
	je	0x100026dfe
	movq	-696(%rbp), %rax
	movq	24(%rax), %rax
	cmpq	%r14, %rax
	je	0x100026cd5
	nopw	%cs:(%rax,%rax)
	leaq	-40(%rax), %rbx
	testb	$1, -40(%rax)
	je	0x100026cb3
	movq	-24(%rax), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r14
	movq	%rbx, %rax
	jne	0x100026ca0
	movq	-680(%rbp), %rax
	movq	(%rax), %rdi
	movq	-696(%rbp), %rax
	movq	%r14, 24(%rax)
	jmp	0x100026df9
	movq	%r14, %rdi
	jmp	0x100026cc5
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %r12
	movq	%r15, -624(%rbp)
	movq	%r13, -200(%rbp)
	movq	%r14, %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	leaq	-624(%rbp), %rdi
	movq	-704(%rbp), %rsi
	callq	0x100029626 ## symbol stub for: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
	leaq	-200(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	-696(%rbp), %r13
	testb	$1, -736(%rbp)
	jne	0x100026d89
	jmp	0x100026d95
	movq	%rax, %r12
	jmp	0x100026d57
	movq	%rax, %r12
	jmp	0x100026d78
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %r12
	testb	$1, -672(%rbp)
	jne	0x100026d9e
	jmp	0x100026daa
	movq	%rax, %r12
	movq	%r14, %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	leaq	-624(%rbp), %rdi
	movq	-704(%rbp), %rsi
	callq	0x100029626 ## symbol stub for: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
	movq	-696(%rbp), %r13
	leaq	-200(%rbp), %r15
	movq	%r15, %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	testb	$1, -736(%rbp)
	je	0x100026d95
	movq	-720(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -672(%rbp)
	je	0x100026daa
	movq	-656(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-680(%rbp), %rax
	movq	(%rax), %r14
	testq	%r14, %r14
	je	0x100026dfe
	movq	24(%r13), %rax
	cmpq	%r14, %rax
	je	0x100026e06
	nopw	%cs:(%rax,%rax)
	leaq	-40(%rax), %rbx
	testb	$1, -40(%rax)
	je	0x100026de3
	movq	-24(%rax), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r14
	movq	%rbx, %rax
	jne	0x100026dd0
	movq	-680(%rbp), %rax
	movq	(%rax), %rdi
	movq	%r14, 24(%r13)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r12, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%r14, %rdi
	jmp	0x100026df5
	nopl	(%rax,%rax)
__ZN9benchmark12_GLOBAL__N_112GetSysctlImpERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$48, %rsp
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	$0, -72(%rbp)
	leaq	1(%rbx), %r15
	testb	$1, (%rbx)
	movq	16(%rbx), %rdi
	cmoveq	%r15, %rdi
	leaq	-72(%rbp), %rdx
	xorl	%esi, %esi
	xorl	%ecx, %ecx
	xorl	%r8d, %r8d
	callq	0x10002987e ## symbol stub for: _sysctlbyname
	cmpl	$-1, %eax
	je	0x100026ec1
	movq	-72(%rbp), %rdi
	addq	$8, %rdi
	movq	%rdi, -64(%rbp)
	callq	0x10002980c ## symbol stub for: _malloc
	movq	$0, (%rax)
	movq	%rax, -56(%rbp)
	movq	33748(%rip), %r12 ## literal pool symbol address: _free
	movq	%r12, -48(%rbp)
	testb	$1, (%rbx)
	cmovneq	16(%rbx), %r15
	leaq	-64(%rbp), %rdx
	xorl	%ecx, %ecx
	xorl	%r8d, %r8d
	movq	%r15, %rdi
	movq	%rax, %rsi
	callq	0x10002987e ## symbol stub for: _sysctlbyname
	testl	%eax, %eax
	je	0x100026edd
	movq	$0, 8(%r14)
	movq	$0, (%r14)
	movq	%r12, 16(%r14)
	movq	-56(%rbp), %rdi
	testq	%rdi, %rdi
	movq	$0, -56(%rbp)
	je	0x100026ef5
	callq	*-48(%rbp)
	jmp	0x100026ef5
	movq	$0, 8(%r14)
	movq	$0, (%r14)
	movq	33649(%rip), %rax ## literal pool symbol address: _free
	movq	%rax, 16(%r14)
	jmp	0x100026ef5
	movaps	-64(%rbp), %xmm0
	movups	%xmm0, (%r14)
	movq	-48(%rbp), %rax
	movq	%rax, 16(%r14)
	movq	$0, -56(%rbp)
	addq	$48, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rdi
	callq	___clang_call_terminate
	movq	%rax, %rbx
	movq	-56(%rbp), %rdi
	movq	$0, -56(%rbp)
	testq	%rdi, %rdi
	je	0x100026f21
	callq	*-48(%rbp)
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %rdi
	callq	___clang_call_terminate
	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorIN9benchmark7CPUInfo9CacheInfoENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movq	%rsi, %r15
	movq	%rdi, %r14
	movabsq	$461168601842738790, %r12
	movq	(%r14), %rdx
	movq	8(%r14), %rbx
	subq	%rdx, %rbx
	sarq	$3, %rbx
	movabsq	$-3689348814741910323, %rsi
	imulq	%rsi, %rbx
	leaq	1(%rbx), %rax
	cmpq	%r12, %rax
	ja	0x1000270e3
	movq	16(%r14), %rcx
	subq	%rdx, %rcx
	sarq	$3, %rcx
	imulq	%rsi, %rcx
	movabsq	$230584300921369394, %rdx
	cmpq	%rdx, %rcx
	ja	0x100026fb8
	addq	%rcx, %rcx
	cmpq	%rax, %rcx
	cmovbq	%rax, %rcx
	testq	%rcx, %rcx
	movq	%rcx, %r12
	je	0x1000270d9
	leaq	(,%r12,8), %rax
	leaq	(%rax,%rax,4), %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	leaq	(%rbx,%rbx,4), %rsi
	leaq	(%rax,%rsi,8), %rdx
	leaq	(%r12,%r12,4), %rcx
	leaq	(%rax,%rcx,8), %r8
	movq	16(%r15), %rdi
	movq	%rdi, 16(%rax,%rsi,8)
	movq	(%r15), %rdi
	movq	8(%r15), %rbx
	movq	%rbx, 8(%rax,%rsi,8)
	movq	%rdi, (%rax,%rsi,8)
	movq	$0, 16(%r15)
	movq	$0, 8(%r15)
	movq	$0, (%r15)
	movl	32(%r15), %edi
	movl	%edi, 32(%rax,%rsi,8)
	movq	24(%r15), %rdi
	movq	%rdi, 24(%rax,%rsi,8)
	leaq	40(%rax,%rsi,8), %rsi
	movq	(%r14), %rax
	movq	8(%r14), %rdi
	cmpq	%rax, %rdi
	je	0x100027084
	nopl	(%rax,%rax)
	movq	-24(%rdi), %rbx
	movq	%rbx, -24(%rdx)
	movq	-40(%rdi), %rbx
	movq	-32(%rdi), %rcx
	movq	%rcx, -32(%rdx)
	movq	%rbx, -40(%rdx)
	movq	$0, -24(%rdi)
	movq	$0, -32(%rdi)
	movq	$0, -40(%rdi)
	movl	-8(%rdi), %ecx
	movl	%ecx, -8(%rdx)
	movq	-16(%rdi), %rcx
	leaq	-40(%rdi), %rdi
	movq	%rcx, -16(%rdx)
	addq	$-40, %rdx
	cmpq	%rdi, %rax
	jne	0x100027030
	movq	(%r14), %r15
	movq	8(%r14), %rax
	jmp	0x100027087
	movq	%rax, %r15
	movq	%rdx, (%r14)
	movq	%rsi, 8(%r14)
	movq	%r8, 16(%r14)
	cmpq	%r15, %rax
	je	0x1000270bb
	nopw	(%rax,%rax)
	leaq	-40(%rax), %rbx
	testb	$1, -40(%rax)
	je	0x1000270b3
	movq	-24(%rax), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	cmpq	%rbx, %r15
	movq	%rbx, %rax
	jne	0x1000270a0
	testq	%r15, %r15
	je	0x1000270d0
	movq	%r15, %rdi
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	xorl	%r12d, %r12d
	xorl	%eax, %eax
	jmp	0x100026fc9
	movq	%r14, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	nopl	(%rax,%rax)
__ZN9benchmark6StrCatIJRA28_KcRiRA26_S1_EEENSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEDpOT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$312, %rsp
	movq	%rcx, %rbx
	movq	%rdx, -72(%rbp)
	movq	%rsi, %r14
	movq	%rdi, -80(%rbp)
	leaq	-232(%rbp), %rdi
	leaq	-336(%rbp), %r13
	movq	32665(%rip), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, -344(%rbp)
	addq	$64, %rax
	movq	%rax, -232(%rbp)
	movq	%r13, %rsi
	callq	0x100029710 ## symbol stub for: __ZNSt3__18ios_base4initEPv
	movq	$0, -96(%rbp)
	movl	$4294967295, -88(%rbp)
	movq	32853(%rip), %r15
	leaq	24(%r15), %r12
	movq	%r12, -344(%rbp)
	addq	$64, %r15
	movq	%r15, -232(%rbp)
	movq	%r13, %rdi
	callq	0x10002967a ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
	movq	%r13, %rdi
	movq	32749(%rip), %r13
	addq	$16, %r13
	movq	%r13, -336(%rbp)
	movq	$0, -248(%rbp)
	movq	$0, -256(%rbp)
	movq	$0, -264(%rbp)
	movq	$0, -272(%rbp)
	movl	$16, -240(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movq	$0, -48(%rbp)
	leaq	-64(%rbp), %rsi
	callq	__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
	testb	$1, -64(%rbp)
	je	0x1000271eb
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	leaq	-344(%rbp), %rdi
	movq	%r14, %rsi
	movq	%rax, %rdx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	-80(%rbp), %r14
	movq	-72(%rbp), %rax
	movl	(%rax), %esi
	leaq	-344(%rbp), %rdi
	callq	0x100029650 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
	movq	%rbx, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	leaq	-344(%rbp), %rdi
	movq	%rbx, %rsi
	movq	%rax, %rdx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%r14, %rdi
	leaq	-336(%rbp), %rsi
	callq	__ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv ## std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str() const
	movq	%r12, -344(%rbp)
	movq	%r15, -232(%rbp)
	movq	%r13, -336(%rbp)
	testb	$1, -272(%rbp)
	je	0x10002726e
	movq	-256(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-336(%rbp), %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	32383(%rip), %rsi
	addq	$8, %rsi
	leaq	-344(%rbp), %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	leaq	-232(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rax
	addq	$312, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	testb	$1, -64(%rbp)
	je	0x1000272f1
	movq	-48(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	testb	$1, -272(%rbp)
	jne	0x1000272fa
	jmp	0x100027306
	movq	%rax, %rbx
	jmp	0x100027312
	movq	%rax, %rbx
	jmp	0x100027329
	movq	%rax, %rbx
	movq	%r12, -344(%rbp)
	movq	%r15, -232(%rbp)
	movq	%r13, -336(%rbp)
	testb	$1, -272(%rbp)
	je	0x100027306
	movq	-256(%rbp), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	leaq	-336(%rbp), %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	32231(%rip), %rsi
	addq	$8, %rsi
	leaq	-344(%rbp), %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	leaq	-232(%rbp), %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopl	(%rax)
__ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	32348(%rip), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, (%rbx)
	leaq	112(%rbx), %r14
	addq	$64, %rax
	movq	%rax, 112(%rbx)
	leaq	8(%rbx), %r15
	movq	32254(%rip), %rax
	addq	$16, %rax
	movq	%rax, 8(%rbx)
	testb	$1, 72(%rbx)
	je	0x100027389
	movq	88(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	32104(%rip), %rsi
	addq	$8, %rsi
	movq	%rbx, %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	nopw	%cs:(%rax,%rax)
__ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	32220(%rip), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, (%rbx)
	leaq	112(%rbx), %r14
	addq	$64, %rax
	movq	%rax, 112(%rbx)
	leaq	8(%rbx), %r15
	movq	32126(%rip), %rax
	addq	$16, %rax
	movq	%rax, 8(%rbx)
	testb	$1, 72(%rbx)
	je	0x100027409
	movq	88(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	31976(%rip), %rsi
	addq	$8, %rsi
	movq	%rbx, %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nop
__ZTv0_n24_NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	(%rdi), %rax
	movq	-24(%rax), %rax
	leaq	(%rdi,%rax), %r15
	movq	32084(%rip), %rcx
	leaq	24(%rcx), %rdx
	movq	%rdx, (%rdi,%rax)
	leaq	112(%rdi,%rax), %r14
	addq	$64, %rcx
	movq	%rcx, 112(%rdi,%rax)
	leaq	8(%rdi,%rax), %rbx
	movq	31986(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, 8(%rdi,%rax)
	testb	$1, 72(%rdi,%rax)
	je	0x100027497
	movq	88(%r15), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	31834(%rip), %rsi
	addq	$8, %rsi
	movq	%r15, %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	nopw	%cs:(%rax,%rax)
__ZTv0_n24_NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	(%rdi), %rax
	movq	-24(%rax), %rax
	leaq	(%rdi,%rax), %rbx
	movq	31940(%rip), %rcx
	leaq	24(%rcx), %rdx
	movq	%rdx, (%rdi,%rax)
	leaq	112(%rdi,%rax), %r14
	addq	$64, %rcx
	movq	%rcx, 112(%rdi,%rax)
	leaq	8(%rdi,%rax), %r15
	movq	31842(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, 8(%rdi,%rax)
	testb	$1, 72(%rdi,%rax)
	je	0x100027527
	movq	88(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r15, %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	31690(%rip), %rsi
	addq	$8, %rsi
	movq	%rbx, %rdi
	callq	0x100029644 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopl	(%rax)
__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	leaq	64(%rbx), %r14
	movq	%r14, %rdi
	callq	0x100029614 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	movq	$0, 88(%rbx)
	movl	96(%rbx), %eax
	testb	$8, %al
	je	0x1000275ba
	movzbl	(%r14), %ecx
	testb	$1, %cl
	jne	0x10002759f
	shrq	%rcx
	leaq	1(%r14,%rcx), %rcx
	leaq	1(%r14), %rdx
	jmp	0x1000275aa
	movq	80(%rbx), %rdx
	movq	72(%rbx), %rcx
	addq	%rdx, %rcx
	movq	%rcx, 88(%rbx)
	movq	%rdx, 16(%rbx)
	movq	%rdx, 24(%rbx)
	movq	%rcx, 32(%rbx)
	testb	$16, %al
	je	0x100027636
	movzbl	(%r14), %r15d
	testb	$1, %r15b
	jne	0x1000275db
	shrq	%r15
	leaq	1(%r14,%r15), %rax
	movq	%rax, 88(%rbx)
	movl	$22, %esi
	jmp	0x1000275f5
	movq	64(%rbx), %rsi
	movq	72(%rbx), %r15
	movq	80(%rbx), %rax
	addq	%r15, %rax
	movq	%rax, 88(%rbx)
	andq	$-2, %rsi
	decq	%rsi
	xorl	%edx, %edx
	movq	%r14, %rdi
	callq	0x1000295ea ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
	movzbl	(%r14), %eax
	testb	$1, %al
	jne	0x10002760f
	incq	%r14
	shrq	%rax
	jmp	0x100027617
	movq	72(%rbx), %rax
	movq	80(%rbx), %r14
	addq	%r14, %rax
	movq	%r14, 48(%rbx)
	movq	%r14, 40(%rbx)
	movq	%rax, 56(%rbx)
	testb	$3, 96(%rbx)
	je	0x100027636
	movslq	%r15d, %rax
	addq	%rax, %r14
	movq	%r14, 48(%rbx)
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	31504(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	testb	$1, 64(%rbx)
	je	0x100027676
	movq	80(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	nopw	%cs:(%rax,%rax)
__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %rbx
	movq	31440(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rbx)
	testb	$1, 64(%rbx)
	je	0x1000276b6
	movq	80(%rbx), %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x100029680 ## symbol stub for: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopl	(%rax)
__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	48(%rsi), %r10
	movq	88(%rsi), %r9
	cmpq	%r10, %r9
	jae	0x1000276e8
	movq	%r10, 88(%rsi)
	movq	%r10, %r9
	movl	%r8d, %eax
	andl	$24, %eax
	je	0x100027767
	cmpl	$1, %ecx
	jne	0x1000276fa
	cmpl	$24, %eax
	je	0x100027767
	testl	%ecx, %ecx
	je	0x10002772d
	cmpl	$2, %ecx
	je	0x100027736
	cmpl	$1, %ecx
	jne	0x100027767
	testb	$8, %r8b
	jne	0x1000278c8
	movq	%r10, %rcx
	subq	40(%rsi), %rcx
	addq	%rdx, %rcx
	js	0x100027767
	testb	$1, 64(%rsi)
	jne	0x100027754
	leaq	64(%rsi), %rdx
	incq	%rdx
	jmp	0x100027758
	xorl	%ecx, %ecx
	addq	%rdx, %rcx
	jns	0x10002771e
	jmp	0x100027767
	testb	$1, 64(%rsi)
	jne	0x1000278de
	leaq	64(%rsi), %rax
	incq	%rax
	movq	%r9, %rcx
	subq	%rax, %rcx
	addq	%rdx, %rcx
	jns	0x10002771e
	jmp	0x100027767
	movq	80(%rsi), %rdx
	movq	%r9, %rax
	subq	%rdx, %rax
	cmpq	%rcx, %rax
	jge	0x1000277f9
	movq	$0, 120(%rdi)
	movq	$0, 112(%rdi)
	movq	$0, 104(%rdi)
	movq	$0, 96(%rdi)
	movq	$0, 88(%rdi)
	movq	$0, 80(%rdi)
	movq	$0, 72(%rdi)
	movq	$0, 64(%rdi)
	movq	$0, 56(%rdi)
	movq	$0, 48(%rdi)
	movq	$0, 40(%rdi)
	movq	$0, 32(%rdi)
	movq	$0, 24(%rdi)
	movq	$0, 16(%rdi)
	movq	$0, 8(%rdi)
	movq	$0, (%rdi)
	movq	$-1, %rcx
	movq	%rcx, 128(%rdi)
	movq	%rdi, %rax
	popq	%rbp
	retq
	testq	%rcx, %rcx
	je	0x10002781e
	testb	$8, %r8b
	je	0x10002780f
	cmpq	$0, 24(%rsi)
	je	0x100027767
	testb	$16, %r8b
	je	0x10002781e
	testq	%r10, %r10
	je	0x100027767
	testb	$8, %r8b
	je	0x100027833
	movq	16(%rsi), %rax
	addq	%rcx, %rax
	movq	%rax, 24(%rsi)
	movq	%r9, 32(%rsi)
	testb	$16, %r8b
	je	0x100027844
	movslq	%ecx, %rax
	addq	40(%rsi), %rax
	movq	%rax, 48(%rsi)
	movq	$0, 120(%rdi)
	movq	$0, 112(%rdi)
	movq	$0, 104(%rdi)
	movq	$0, 96(%rdi)
	movq	$0, 88(%rdi)
	movq	$0, 80(%rdi)
	movq	$0, 72(%rdi)
	movq	$0, 64(%rdi)
	movq	$0, 56(%rdi)
	movq	$0, 48(%rdi)
	movq	$0, 40(%rdi)
	movq	$0, 32(%rdi)
	movq	$0, 24(%rdi)
	movq	$0, 16(%rdi)
	movq	$0, 8(%rdi)
	movq	$0, (%rdi)
	jmp	0x1000277ed
	movq	24(%rsi), %rcx
	subq	16(%rsi), %rcx
	addq	%rdx, %rcx
	jns	0x10002771e
	jmp	0x100027767
	movq	%r9, %rcx
	subq	80(%rsi), %rcx
	addq	%rdx, %rcx
	jns	0x10002771e
	jmp	0x100027767
	nopw	%cs:(%rax,%rax)
__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movl	%edx, %r8d
	movq	%rdi, %rbx
	movq	(%rsi), %rax
	movq	144(%rbp), %rdx
	xorl	%ecx, %ecx
	callq	*32(%rax)
	movq	%rbx, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	48(%rdi), %rax
	movq	88(%rdi), %rcx
	cmpq	%rax, %rcx
	jae	0x100027948
	movq	%rax, 88(%rdi)
	movq	%rax, %rcx
	movl	$4294967295, %eax
	testb	$8, 96(%rdi)
	je	0x10002796f
	movq	32(%rdi), %rdx
	cmpq	%rcx, %rdx
	jae	0x100027963
	movq	%rcx, 32(%rdi)
	movq	%rcx, %rdx
	movq	24(%rdi), %rcx
	cmpq	%rdx, %rcx
	jae	0x10002796f
	movzbl	(%rcx), %eax
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	48(%rdi), %rax
	movq	88(%rdi), %rcx
	cmpq	%rax, %rcx
	jae	0x100027998
	movq	%rax, 88(%rdi)
	movq	%rax, %rcx
	movq	24(%rdi), %rdx
	movl	$4294967295, %eax
	cmpq	%rdx, 16(%rdi)
	jae	0x1000279c8
	cmpl	$-1, %esi
	je	0x1000279ca
	testb	$16, 96(%rdi)
	jne	0x1000279b8
	cmpb	%sil, -1(%rdx)
	jne	0x1000279c8
	decq	%rdx
	movq	%rdx, 24(%rdi)
	movq	%rcx, 32(%rdi)
	movb	%sil, (%rdx)
	movl	%esi, %eax
	popq	%rbp
	retq
	decq	%rdx
	movq	%rdx, 24(%rdi)
	movq	%rcx, 32(%rdi)
	xorl	%eax, %eax
	popq	%rbp
	retq
	nopl	(%rax)
__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	movl	%esi, %r14d
	movq	%rdi, %rbx
	cmpl	$-1, %r14d
	je	0x100027a23
	movq	24(%rbx), %r15
	movq	48(%rbx), %r13
	subq	16(%rbx), %r15
	movq	56(%rbx), %rax
	cmpq	%rax, %r13
	je	0x100027a2b
	leaq	88(%rbx), %rcx
	movq	88(%rbx), %rdi
	leaq	96(%rbx), %rdx
	jmp	0x100027ace
	xorl	%r12d, %r12d
	jmp	0x100027b1f
	movl	$4294967295, %r12d
	testb	$16, 96(%rbx)
	je	0x100027b1f
	movq	40(%rbx), %rax
	movq	%rax, -56(%rbp)
	movq	88(%rbx), %rax
	movq	%rax, -64(%rbp)
	leaq	64(%rbx), %rdi
	xorl	%esi, %esi
	movq	%rdi, -48(%rbp)
	callq	0x100029602 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
	movq	-48(%rbp), %rax
	testb	$1, (%rax)
	movq	%rax, %rdi
	jne	0x100027a6d
	movl	$22, %esi
	jmp	0x100027a77
	movq	(%rdi), %rsi
	andq	$-2, %rsi
	decq	%rsi
	xorl	%edx, %edx
	callq	0x1000295ea ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
	movq	-56(%rbp), %rax
	subq	%rax, %r13
	leaq	88(%rbx), %rcx
	movq	-64(%rbp), %rdi
	subq	%rax, %rdi
	movq	-48(%rbp), %rdx
	movzbl	(%rdx), %eax
	testb	$1, %al
	movq	%rdx, %rsi
	jne	0x100027aa6
	incq	%rsi
	shrq	%rax
	jmp	0x100027aae
	movq	72(%rbx), %rax
	movq	80(%rbx), %rsi
	leaq	96(%rbx), %rdx
	addq	%rsi, %rax
	movq	%rsi, 40(%rbx)
	movq	%rax, 56(%rbx)
	movslq	%r13d, %r13
	addq	%rsi, %r13
	movq	%r13, 48(%rbx)
	addq	%rsi, %rdi
	movq	%rdi, 88(%rbx)
	leaq	1(%r13), %rsi
	movq	%rsi, -72(%rbp)
	cmpq	%rdi, %rsi
	leaq	-72(%rbp), %rdi
	cmovbq	%rcx, %rdi
	movq	(%rdi), %rdi
	movq	%rdi, (%rcx)
	testb	$8, (%rdx)
	je	0x100027b0e
	testb	$1, 64(%rbx)
	jne	0x100027afb
	leaq	64(%rbx), %rcx
	incq	%rcx
	jmp	0x100027aff
	movq	80(%rbx), %rcx
	addq	%rcx, %r15
	movq	%rcx, 16(%rbx)
	movq	%r15, 24(%rbx)
	movq	%rdi, 32(%rbx)
	cmpq	%rax, %r13
	je	0x100027b31
	movq	%rsi, 48(%rbx)
	movb	%r14b, (%r13)
	movzbl	%r14b, %r12d
	movl	%r12d, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	(%rbx), %rax
	movq	104(%rax), %rax
	movzbl	%r14b, %esi
	movq	%rbx, %rdi
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmpq	*%rax
	movq	%rax, %rdi
	callq	0x10002975e ## symbol stub for: ___cxa_begin_catch
	callq	0x100029764 ## symbol stub for: ___cxa_end_catch
	jmp	0x100027b1f
	nop
__ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rdi, %r14
	movl	96(%rsi), %eax
	testb	$16, %al
	jne	0x100027b9c
	testb	$8, %al
	jne	0x100027c0e
	movq	$0, 16(%r14)
	movq	$0, 8(%r14)
	movq	$0, (%r14)
	jmp	0x100027ed6
	movq	48(%rsi), %rax
	movq	88(%rsi), %r12
	cmpq	%rax, %r12
	jae	0x100027bb0
	movq	%rax, 88(%rsi)
	movq	%rax, %r12
	movq	40(%rsi), %rbx
	movq	$0, 16(%r14)
	movq	$0, 8(%r14)
	movq	$0, (%r14)
	movq	%r12, %r13
	subq	%rbx, %r13
	cmpq	$-16, %r13
	jae	0x100027ee8
	cmpq	$22, %r13
	ja	0x100027c68
	movl	%r13d, %eax
	addb	%al, %al
	movb	%al, (%r14)
	movq	%r14, %rax
	incq	%rax
	cmpq	%r12, %rbx
	je	0x100027ed3
	cmpq	$32, %r13
	jae	0x100027c95
	movq	%rax, %rcx
	jmp	0x100027e00
	movq	16(%rsi), %rbx
	movq	32(%rsi), %r12
	movq	$0, 16(%r14)
	movq	$0, 8(%r14)
	movq	$0, (%r14)
	movq	%r12, %r13
	subq	%rbx, %r13
	cmpq	$-16, %r13
	jae	0x100027ee8
	cmpq	$22, %r13
	ja	0x100027cab
	movl	%r13d, %eax
	addb	%al, %al
	movb	%al, (%r14)
	movq	%r14, %rax
	incq	%rax
	cmpq	%r12, %rbx
	je	0x100027ed3
	cmpq	$32, %r13
	jae	0x100027cd4
	movq	%rax, %rcx
	jmp	0x100027ec0
	leaq	16(%r13), %r15
	andq	$-16, %r15
	movq	%r15, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, 16(%r14)
	orq	$1, %r15
	movq	%r15, (%r14)
	movq	%r13, 8(%r14)
	cmpq	%r12, %rbx
	jne	0x100027bfc
	jmp	0x100027ed3
	cmpq	%r12, %rax
	jae	0x100027cea
	leaq	(%rax,%r13), %rcx
	cmpq	%rcx, %rbx
	jae	0x100027cea
	movq	%rax, %rcx
	jmp	0x100027e00
	leaq	16(%r13), %r15
	andq	$-16, %r15
	movq	%r15, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, 16(%r14)
	orq	$1, %r15
	movq	%r15, (%r14)
	movq	%r13, 8(%r14)
	cmpq	%r12, %rbx
	jne	0x100027c5a
	jmp	0x100027ed3
	cmpq	%r12, %rax
	jae	0x100027d18
	leaq	(%rax,%r13), %rcx
	cmpq	%rcx, %rbx
	jae	0x100027d18
	movq	%rax, %rcx
	jmp	0x100027ec0
	movq	%r13, %rcx
	andq	$-32, %rcx
	leaq	-32(%rcx), %rdi
	movq	%rdi, %rsi
	shrq	$5, %rsi
	leal	1(%rsi), %edx
	andl	$3, %edx
	cmpq	$96, %rdi
	jae	0x100027d4a
	xorl	%esi, %esi
	testq	%rdx, %rdx
	jne	0x100027dbd
	jmp	0x100027deb
	movq	%r13, %rcx
	andq	$-32, %rcx
	leaq	-32(%rcx), %rdi
	movq	%rdi, %rsi
	shrq	$5, %rsi
	leal	1(%rsi), %edx
	andl	$3, %edx
	cmpq	$96, %rdi
	jae	0x100027e15
	xorl	%esi, %esi
	testq	%rdx, %rdx
	jne	0x100027e7d
	jmp	0x100027eab
	leaq	-1(%rdx), %rdi
	subq	%rsi, %rdi
	xorl	%esi, %esi
	nopw	%cs:(%rax,%rax)
	movups	(%rbx,%rsi), %xmm0
	movups	16(%rbx,%rsi), %xmm1
	movups	%xmm0, (%rax,%rsi)
	movups	%xmm1, 16(%rax,%rsi)
	movups	32(%rbx,%rsi), %xmm0
	movups	48(%rbx,%rsi), %xmm1
	movups	%xmm0, 32(%rax,%rsi)
	movups	%xmm1, 48(%rax,%rsi)
	movups	64(%rbx,%rsi), %xmm0
	movups	80(%rbx,%rsi), %xmm1
	movups	%xmm0, 64(%rax,%rsi)
	movups	%xmm1, 80(%rax,%rsi)
	movups	96(%rbx,%rsi), %xmm0
	movups	112(%rbx,%rsi), %xmm1
	movups	%xmm0, 96(%rax,%rsi)
	movups	%xmm1, 112(%rax,%rsi)
	subq	$-128, %rsi
	addq	$4, %rdi
	jne	0x100027d60
	testq	%rdx, %rdx
	je	0x100027deb
	leaq	16(%rax,%rsi), %rdi
	leaq	16(%rbx,%rsi), %rsi
	negq	%rdx
	nopw	(%rax,%rax)
	movups	-16(%rsi), %xmm0
	movups	(%rsi), %xmm1
	movups	%xmm0, -16(%rdi)
	movups	%xmm1, (%rdi)
	addq	$32, %rdi
	addq	$32, %rsi
	incq	%rdx
	jne	0x100027dd0
	cmpq	%r13, %rcx
	je	0x100027ed0
	addq	%rcx, %rbx
	addq	%rax, %rcx
	nopw	(%rax,%rax)
	movzbl	(%rbx), %edx
	movb	%dl, (%rcx)
	incq	%rbx
	incq	%rcx
	cmpq	%rbx, %r12
	jne	0x100027e00
	jmp	0x100027ed0
	leaq	-1(%rdx), %rdi
	subq	%rsi, %rdi
	xorl	%esi, %esi
	nop
	movups	(%rbx,%rsi), %xmm0
	movups	16(%rbx,%rsi), %xmm1
	movups	%xmm0, (%rax,%rsi)
	movups	%xmm1, 16(%rax,%rsi)
	movups	32(%rbx,%rsi), %xmm0
	movups	48(%rbx,%rsi), %xmm1
	movups	%xmm0, 32(%rax,%rsi)
	movups	%xmm1, 48(%rax,%rsi)
	movups	64(%rbx,%rsi), %xmm0
	movups	80(%rbx,%rsi), %xmm1
	movups	%xmm0, 64(%rax,%rsi)
	movups	%xmm1, 80(%rax,%rsi)
	movups	96(%rbx,%rsi), %xmm0
	movups	112(%rbx,%rsi), %xmm1
	movups	%xmm0, 96(%rax,%rsi)
	movups	%xmm1, 112(%rax,%rsi)
	subq	$-128, %rsi
	addq	$4, %rdi
	jne	0x100027e20
	testq	%rdx, %rdx
	je	0x100027eab
	leaq	16(%rax,%rsi), %rdi
	leaq	16(%rbx,%rsi), %rsi
	negq	%rdx
	nopw	(%rax,%rax)
	movups	-16(%rsi), %xmm0
	movups	(%rsi), %xmm1
	movups	%xmm0, -16(%rdi)
	movups	%xmm1, (%rdi)
	addq	$32, %rdi
	addq	$32, %rsi
	incq	%rdx
	jne	0x100027e90
	cmpq	%rcx, %r13
	je	0x100027ed0
	addq	%rcx, %rbx
	addq	%rax, %rcx
	nopw	%cs:(%rax,%rax)
	movzbl	(%rbx), %edx
	movb	%dl, (%rcx)
	incq	%rbx
	incq	%rcx
	cmpq	%rbx, %r12
	jne	0x100027ec0
	addq	%r13, %rax
	movb	$0, (%rax)
	movq	%r14, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r14, %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ZNSt3__1rsIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_istreamIT_T0_EES9_RNS_12basic_stringIS6_S7_T1_EE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	movq	%rsi, %r14
	movq	%rdi, %r13
	leaq	-48(%rbp), %rdi
	xorl	%edx, %edx
	movq	%r13, %rsi
	callq	0x100029620 ## symbol stub for: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC1ERS3_b
	cmpb	$0, -48(%rbp)
	je	0x100027f29
	testb	$1, (%r14)
	jne	0x100027f48
	movw	$0, (%r14)
	jmp	0x100027f57
	movq	(%r13), %rax
	movq	-24(%rax), %rax
	leaq	(%r13,%rax), %rdi
	movl	32(%r13,%rax), %esi
	orl	$4, %esi
	callq	0x100029716 ## symbol stub for: __ZNSt3__18ios_base5clearEj
	jmp	0x1000280b5
	movq	16(%r14), %rax
	movb	$0, (%rax)
	movq	$0, 8(%r14)
	movq	(%r13), %rax
	movq	-24(%rax), %rax
	leaq	(%r13,%rax), %rsi
	movq	24(%r13,%rax), %rax
	testq	%rax, %rax
	movabsq	$9223372036854775807, %r12
	cmovgq	%rax, %r12
	leaq	-56(%rbp), %rdi
	callq	0x1000295c0 ## symbol stub for: __ZNKSt3__18ios_base6getlocEv
	movq	28910(%rip), %rsi ## literal pool symbol address: __ZNSt3__15ctypeIcE2idE
	leaq	-56(%rbp), %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	%rax, %r15
	leaq	-56(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	xorl	%ebx, %ebx
	testq	%r12, %r12
	jle	0x100028042
	nopw	(%rax,%rax)
	movq	(%r13), %rax
	movq	-24(%rax), %rax
	movq	40(%r13,%rax), %rdi
	movq	24(%rdi), %rax
	cmpq	32(%rdi), %rax
	je	0x100027fd0
	movzbl	(%rax), %eax
	testb	%al, %al
	jns	0x100027fe3
	jmp	0x100027ff2
	movq	(%rdi), %rax
	callq	*72(%rax)
	cmpl	$-1, %eax
	je	0x100028075
	testb	%al, %al
	js	0x100027ff2
	movq	16(%r15), %rcx
	movsbq	%al, %rdx
	testb	$64, 1(%rcx,%rdx,4)
	jne	0x100028042
	movsbl	%al, %esi
	movq	%r14, %rdi
	callq	0x100029602 ## symbol stub for: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
	movq	(%r13), %rax
	movq	-24(%rax), %rax
	movq	40(%r13,%rax), %rdi
	movq	24(%rdi), %rax
	cmpq	32(%rdi), %rax
	je	0x100028030
	incq	%rax
	movq	%rax, 24(%rdi)
	incq	%rbx
	cmpq	%r12, %rbx
	jl	0x100027fb0
	jmp	0x100028042
	nopw	%cs:(%rax,%rax)
	movq	(%rdi), %rax
	callq	*80(%rax)
	incq	%rbx
	cmpq	%r12, %rbx
	jl	0x100027fb0
	xorl	%eax, %eax
	movq	(%r13), %rcx
	movq	-24(%rcx), %rdx
	movq	$0, 24(%r13,%rdx)
	movl	%eax, %esi
	orl	$4, %esi
	testq	%rbx, %rbx
	cmovnel	%eax, %esi
	movq	-24(%rcx), %rax
	leaq	(%r13,%rax), %rdi
	orl	32(%r13,%rax), %esi
	callq	0x100029716 ## symbol stub for: __ZNSt3__18ios_base5clearEj
	jmp	0x1000280b5
	movl	$2, %eax
	jmp	0x100028044
	jmp	0x100028092
	movq	%rax, %r14
	leaq	-56(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	jmp	0x100028095
	jmp	0x100028092
	jmp	0x100028092
	jmp	0x100028092
	movq	%rax, %r14
	movq	%r13, %r15
	movq	%r14, %rdi
	callq	0x10002975e ## symbol stub for: ___cxa_begin_catch
	movq	(%r13), %rax
	addq	-24(%rax), %r15
	movq	%r15, %rdi
	callq	0x100029704 ## symbol stub for: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
	callq	0x100029764 ## symbol stub for: ___cxa_end_catch
	movq	%r13, %rax
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	callq	0x100029764 ## symbol stub for: ___cxa_end_catch
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	movq	%rax, %rdi
	callq	___clang_call_terminate
	nop
__ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rdi, %rbx
	movq	28775(%rip), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, (%rbx)
	addq	$64, %rax
	movq	%rax, 424(%rbx)
	leaq	16(%rbx), %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	movq	28629(%rip), %rsi
	addq	$8, %rsi
	leaq	424(%rbx), %r14
	movq	%rbx, %rdi
	callq	0x100029626 ## symbol stub for: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmp	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	nopw	%cs:(%rax,%rax)
__ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rdi, %rbx
	movq	28679(%rip), %rax
	leaq	24(%rax), %rcx
	movq	%rcx, (%rbx)
	leaq	424(%rbx), %r14
	addq	$64, %rax
	movq	%rax, 424(%rbx)
	leaq	16(%rbx), %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	movq	28526(%rip), %rsi
	addq	$8, %rsi
	movq	%rbx, %rdi
	callq	0x100029626 ## symbol stub for: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopw	(%rax,%rax)
__ZTv0_n24_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	(%rdi), %rax
	movq	-24(%rax), %rax
	leaq	(%rdi,%rax), %rbx
	movq	28575(%rip), %rcx
	leaq	24(%rcx), %rdx
	movq	%rdx, (%rdi,%rax)
	leaq	424(%rdi,%rax), %r14
	addq	$64, %rcx
	movq	%rcx, 424(%rdi,%rax)
	leaq	16(%rdi,%rax), %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	movq	28418(%rip), %rsi
	addq	$8, %rsi
	movq	%rbx, %rdi
	callq	0x100029626 ## symbol stub for: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmp	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	nop
__ZTv0_n24_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	(%rdi), %rax
	movq	-24(%rax), %rax
	leaq	(%rdi,%rax), %rbx
	movq	28479(%rip), %rcx
	leaq	24(%rcx), %rdx
	movq	%rdx, (%rdi,%rax)
	leaq	424(%rdi,%rax), %r14
	addq	$64, %rcx
	movq	%rcx, 424(%rdi,%rax)
	leaq	16(%rdi,%rax), %rdi
	callq	__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev ## std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
	movq	28322(%rip), %rsi
	addq	$8, %rsi
	movq	%rbx, %rdi
	callq	0x100029626 ## symbol stub for: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
	movq	%r14, %rdi
	callq	0x10002971c ## symbol stub for: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
	movq	%rbx, %rdi
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	nopw	%cs:(%rax,%rax)
__GLOBAL__sub_I_sysinfo.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark8internal17InitializeStreamsEv ## benchmark::internal::InitializeStreams()
	nop
	nop
	nop
	nop
	nop
	nop
__ZN9benchmark15ProcessCPUUsageEv:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$144, %rsp
	leaq	-144(%rbp), %rsi
	xorl	%edi, %edi
	callq	0x1000297ee ## symbol stub for: _getrusage
	testl	%eax, %eax
	jne	0x1000282e1
	cvtsi2sdq	-144(%rbp), %xmm0
	cvtsi2sdl	-136(%rbp), %xmm1
	movsd	9066(%rip), %xmm2
	mulsd	%xmm2, %xmm1
	addsd	%xmm0, %xmm1
	cvtsi2sdq	-128(%rbp), %xmm3
	addsd	%xmm1, %xmm3
	xorps	%xmm0, %xmm0
	cvtsi2sdl	-120(%rbp), %xmm0
	mulsd	%xmm2, %xmm0
	addsd	%xmm3, %xmm0
	addq	$144, %rsp
	popq	%rbp
	retq
	leaq	25394(%rip), %rdi ## literal pool for: "getrusage(RUSAGE_SELF, ...) failed"
	callq	__ZN9benchmark12_GLOBAL__N_1L15DiagnoseAndExitEPKc ## benchmark::(anonymous namespace)::DiagnoseAndExit(char const*)
	nopl	(%rax)
__ZN9benchmark12_GLOBAL__N_1L15DiagnoseAndExitEPKc:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	subq	$16, %rsp
	movq	%rdi, %rbx
	movq	27995(%rip), %rdi ## literal pool symbol address: __ZNSt3__14cerrE
	leaq	25445(%rip), %rsi ## literal pool for: "ERROR: "
	movl	$7, %edx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%rax, %rdx
	callq	__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	movq	%rax, %rbx
	movq	(%rbx), %rax
	movq	-24(%rax), %rsi
	addq	%rbx, %rsi
	leaq	-24(%rbp), %r14
	movq	%r14, %rdi
	callq	0x1000295c0 ## symbol stub for: __ZNKSt3__18ios_base6getlocEv
	movq	27945(%rip), %rsi ## literal pool symbol address: __ZNSt3__15ctypeIcE2idE
	movq	%r14, %rdi
	callq	0x1000295ba ## symbol stub for: __ZNKSt3__16locale9use_facetERNS0_2idE
	movq	(%rax), %rcx
	movl	$10, %esi
	movq	%rax, %rdi
	callq	*56(%rcx)
	movl	%eax, %r14d
	leaq	-24(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movsbl	%r14b, %esi
	movq	%rbx, %rdi
	callq	0x10002962c ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc
	movq	%rbx, %rdi
	callq	0x100029632 ## symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
	movl	$1, %edi
	callq	0x1000297ac ## symbol stub for: _exit
	movq	%rax, %rbx
	leaq	-24(%rbp), %rdi
	callq	0x1000296ec ## symbol stub for: __ZNSt3__16localeD1Ev
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	nopw	%cs:(%rax,%rax)
__ZN9benchmark14ThreadCPUUsageEv:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	$10, -4(%rbp)
	callq	0x100029848 ## symbol stub for: _pthread_self
	movq	%rax, %rdi
	callq	0x100029842 ## symbol stub for: _pthread_mach_thread_np
	leaq	-48(%rbp), %rdx
	leaq	-4(%rbp), %rcx
	movl	$3, %esi
	movl	%eax, %edi
	callq	0x100029884 ## symbol stub for: _thread_info
	testl	%eax, %eax
	jne	0x10002841d
	cvtsi2sdl	-48(%rbp), %xmm0
	cvtsi2sdl	-44(%rbp), %xmm1
	movsd	8746(%rip), %xmm2
	mulsd	%xmm2, %xmm1
	addsd	%xmm0, %xmm1
	cvtsi2sdl	-40(%rbp), %xmm3
	addsd	%xmm1, %xmm3
	xorps	%xmm0, %xmm0
	cvtsi2sdl	-36(%rbp), %xmm0
	mulsd	%xmm2, %xmm0
	addsd	%xmm3, %xmm0
	addq	$48, %rsp
	popq	%rbp
	retq
	leaq	25113(%rip), %rdi ## literal pool for: "ThreadCPUUsage() failed when evaluating thread_info"
	callq	__ZN9benchmark12_GLOBAL__N_1L15DiagnoseAndExitEPKc ## benchmark::(anonymous namespace)::DiagnoseAndExit(char const*)
	nopl	(%rax)
__ZN9benchmark19LocalDateTimeStringEv:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$208, %rsp
	movq	%rdi, %r14
	movq	28132(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	movq	%rax, -40(%rbp)
	callq	0x1000296d4 ## symbol stub for: __ZNSt3__16chrono12system_clock3nowEv
	movq	%rax, -176(%rbp)
	leaq	-176(%rbp), %rdi
	callq	0x1000296da ## symbol stub for: __ZNSt3__16chrono12system_clock9to_time_tERKNS0_10time_pointIS1_NS0_8durationIxNS_5ratioILl1ELl1000000EEEEEEE
	movq	%rax, -184(%rbp)
	leaq	-184(%rbp), %rdi
	leaq	-240(%rbp), %rbx
	movq	%rbx, %rsi
	callq	0x1000297fa ## symbol stub for: _localtime_r
	leaq	25066(%rip), %rdx ## literal pool for: "%F %T"
	leaq	-176(%rbp), %rdi
	movl	$128, %esi
	movq	%rbx, %rcx
	callq	0x100029860 ## symbol stub for: _strftime
	movq	27510(%rip), %rax ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	movb	(%rax), %al
	testb	%al, %al
	jne	0x1000284da
	movq	27497(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x1000284da
	movq	27977(%rip), %rax ## literal pool symbol address: __ZZN9benchmark8internal18GetNullLogInstanceEvE3log
	movq	$0, (%rax)
	movq	27467(%rip), %rdi ## literal pool symbol address: __ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	movq	$0, 16(%r14)
	movq	$0, 8(%r14)
	movq	$0, (%r14)
	leaq	-176(%rbp), %rdi
	callq	0x100029866 ## symbol stub for: _strlen
	movq	%rax, %r12
	cmpq	$-16, %r12
	jae	0x100028583
	cmpq	$23, %r12
	jae	0x10002851f
	movl	%r12d, %eax
	addb	%al, %al
	movb	%al, (%r14)
	leaq	1(%r14), %r15
	testq	%r12, %r12
	jne	0x100028544
	jmp	0x100028556
	movq	%r12, %rbx
	addq	$16, %rbx
	andq	$-16, %rbx
	movq	%rbx, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r15
	movq	%r15, 16(%r14)
	orq	$1, %rbx
	movq	%rbx, (%r14)
	movq	%r12, 8(%r14)
	leaq	-176(%rbp), %rsi
	movq	%r15, %rdi
	movq	%r12, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	movb	$0, (%r15,%r12)
	movq	27854(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
	movq	(%rax), %rax
	cmpq	-40(%rbp), %rax
	jne	0x10002857e
	movq	%r14, %rax
	addq	$208, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	callq	0x1000297a0 ## symbol stub for: ___stack_chk_fail
	movq	%r14, %rdi
	callq	0x1000295a8 ## symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	nopl	(%rax,%rax)
__GLOBAL__sub_I_timers.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark8internal17InitializeStreamsEv ## benchmark::internal::InitializeStreams()
	nop
	nop
	nop
	nop
	nop
	nop
__ZN5bench6detail16static_generatorEv:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	__ZGVZN5bench6detail16static_generatorEvE1g(%rip), %al ## guard variable for bench::detail::static_generator()::g
	testb	%al, %al
	je	0x1000285b7
	leaq	__ZZN5bench6detail16static_generatorEvE1g(%rip), %rax ## bench::detail::static_generator()::g
	popq	%rbp
	retq
	leaq	__ZGVZN5bench6detail16static_generatorEvE1g(%rip), %rdi ## guard variable for bench::detail::static_generator()::g
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x1000285ae
	movl	$5489, 33271(%rip)
	movl	$5489, %esi
	movl	$1, %eax
	movl	$2, %ecx
	leaq	__ZZN5bench6detail16static_generatorEvE1g(%rip), %r8 ## bench::detail::static_generator()::g
	jmp	0x10002860a
	leaq	1(%rax), %rsi
	movl	%edx, %edi
	shrl	$30, %edi
	xorl	%edx, %edi
	imull	$1812433253, %edi, %edx
	addl	%edx, %esi
	addl	%ecx, %edx
	movl	%edx, (%r8,%rcx,4)
	addq	$2, %rax
	addq	$2, %rcx
	movl	%esi, %edi
	shrl	$30, %edi
	xorl	%esi, %edi
	imull	$1812433253, %edi, %edx
	addl	%eax, %edx
	movl	%edx, -4(%r8,%rcx,4)
	cmpq	$624, %rcx
	jne	0x1000285e9
	movq	$0, 35670(%rip)
	leaq	__ZGVZN5bench6detail16static_generatorEvE1g(%rip), %rdi ## guard variable for bench::detail::static_generator()::g
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	leaq	__ZZN5bench6detail16static_generatorEvE1g(%rip), %rax ## bench::detail::static_generator()::g
	popq	%rbp
	retq
	nopw	(%rax,%rax)
__ZN5bench6detail11uniform_srcEm:
	pushq	%rbp
	movq	%rsp, %rbp
	shlq	$34, %rdi
	leaq	(%rdi,%rdi,4), %rax
	orq	$1, %rax
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
	nopl	(%rax)
__Z10do_nothingv:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
__Z14test_benchmarkRN9benchmark5StateE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$72, %rsp
	movq	%rdi, %rbx
	movq	27005(%rip), %rax ## literal pool symbol address: __ZGVZN5bench18two_sorted_vectorsIiEENSt3__14pairINS1_6vectorIT_NS1_9allocatorIS4_EEEES7_EEmmE3gen
	movb	(%rax), %al
	testb	%al, %al
	je	0x100028814
	movaps	8068(%rip), %xmm0
	movaps	%xmm0, -112(%rbp)
	movq	27465(%rip), %rsi ## literal pool symbol address: __ZZN5bench18two_sorted_vectorsIiEENSt3__14pairINS1_6vectorIT_NS1_9allocatorIS4_EEEES7_EEmmE3gen
	leaq	-88(%rbp), %rdi
	leaq	-112(%rbp), %rdx
	callq	__ZZN5tools17memoized_functionINSt3__14pairImmEEZN5bench18two_sorted_vectorsIiEENS2_INS1_6vectorIT_NS1_9allocatorIS7_EEEESA_EEmmEUlS3_E_EEDaT0_ENUlRKS3_E_clESG_ ## auto tools::memoized_function<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > bench::two_sorted_vectors<int>(unsigned long, unsigned long)::'lambda'(std::__1::pair<unsigned long, unsigned long>)>(std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > bench::two_sorted_vectors<int>(unsigned long, unsigned long)::'lambda'(std::__1::pair<unsigned long, unsigned long>))::'lambda'(std::__1::pair<unsigned long, unsigned long> const&)::operator()('lambda'(std::__1::pair<unsigned long, unsigned long> const&))
	movl	$8000, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r15
	movl	$8000, %esi
	movq	%rax, %rdi
	callq	0x10002974c ## symbol stub for: ___bzero
	movb	26(%rbx), %r12b
	movq	16(%rbx), %r14
	movq	%rbx, -96(%rbp)
	movq	%rbx, %rdi
	callq	__ZN9benchmark5State16StartKeepRunningEv ## benchmark::State::StartKeepRunning()
	testq	%r14, %r14
	je	0x1000287d0
	testb	%r12b, %r12b
	jne	0x1000287d0
	nopw	%cs:(%rax,%rax)
	nop
	movq	-88(%rbp), %rax
	movq	-80(%rbp), %r12
	movq	-64(%rbp), %rsi
	movq	-56(%rbp), %r13
	movq	%r15, %rbx
	cmpq	%r12, %rax
	jne	0x10002873f
	jmp	0x10002875b
	nopw	(%rax,%rax)
	movl	%ecx, (%rbx)
	addq	$4, %rsi
	addq	$4, %rbx
	cmpq	%r12, %rax
	je	0x10002875b
	cmpq	%r13, %rsi
	je	0x100028780
	movl	(%rsi), %ecx
	movl	(%rax), %edx
	cmpl	%edx, %ecx
	jl	0x100028730
	movl	%edx, (%rbx)
	addq	$4, %rax
	addq	$4, %rbx
	cmpq	%r12, %rax
	jne	0x10002873f
	subq	%rsi, %r13
	je	0x1000287b0
	movq	%rbx, %rdi
	movq	%r13, %rdx
	callq	0x100029824 ## symbol stub for: _memmove
	movq	%r13, %r12
	addq	%r12, %rbx
	decq	%r14
	jne	0x100028710
	jmp	0x1000287d0
	nopl	(%rax,%rax)
	subq	%rax, %r12
	je	0x1000287c1
	movq	%rbx, %rdi
	movq	%rax, %rsi
	movq	%r12, %rdx
	callq	0x100029824 ## symbol stub for: _memmove
	addq	%r12, %rbx
	decq	%r14
	jne	0x100028710
	jmp	0x1000287d0
	nopw	%cs:(%rax,%rax)
	nopl	(%rax,%rax)
	xorl	%r12d, %r12d
	addq	%r12, %rbx
	decq	%r14
	jne	0x100028710
	jmp	0x1000287d0
	xorl	%r12d, %r12d
	addq	%r12, %rbx
	decq	%r14
	jne	0x100028710
	movq	-96(%rbp), %rdi
	callq	__ZN9benchmark5State17FinishKeepRunningEv ## benchmark::State::FinishKeepRunning()
	movq	%r15, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-64(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x1000287f3
	movq	%rdi, -56(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-88(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100028805
	movq	%rdi, -80(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	addq	$72, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	26621(%rip), %rdi ## literal pool symbol address: __ZGVZN5bench18two_sorted_vectorsIiEENSt3__14pairINS1_6vectorIT_NS1_9allocatorIS4_EEEES7_EEmmE3gen
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x1000286a5
	movq	27089(%rip), %rsi ## literal pool symbol address: __ZZN5bench18two_sorted_vectorsIiEENSt3__14pairINS1_6vectorIT_NS1_9allocatorIS4_EEEES7_EEmmE3gen
	movq	$0, 16(%rsi)
	movq	$0, 8(%rsi)
	leaq	8(%rsi), %rax
	movq	%rax, (%rsi)
	movq	27067(%rip), %rdi
	leaq	__mh_execute_header(%rip), %rdx
	callq	0x100029758 ## symbol stub for: ___cxa_atexit
	movq	26552(%rip), %rdi ## literal pool symbol address: __ZGVZN5bench18two_sorted_vectorsIiEENSt3__14pairINS1_6vectorIT_NS1_9allocatorIS4_EEEES7_EEmmE3gen
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	jmp	0x1000286a5
	movq	%rax, %rbx
	movq	-64(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x10002888c
	jmp	0x100028895
	movq	%rax, %rbx
	movq	%r15, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-64(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100028895
	movq	%rdi, -56(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-88(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x1000288a8
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	ud2
	movq	%rdi, -80(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	ud2
	nopl	(%rax,%rax)
__ZZN5tools17memoized_functionINSt3__14pairImmEEZN5bench18two_sorted_vectorsIiEENS2_INS1_6vectorIT_NS1_9allocatorIS7_EEEESA_EEmmEUlS3_E_EEDaT0_ENUlRKS3_E_D1Ev:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	8(%rdi), %rsi
	popq	%rbp
	jmp	__ZNSt3__16__treeINS_12__value_typeINS_4pairImmEENS2_INS_6vectorIiNS_9allocatorIiEEEES7_EEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::__map_value_compare<std::__1::pair<unsigned long, unsigned long>, std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::less<std::__1::pair<unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, void*>*)
	nop
__ZZN5tools17memoized_functionINSt3__14pairImmEEZN5bench18two_sorted_vectorsIiEENS2_INS1_6vectorIT_NS1_9allocatorIS7_EEEESA_EEmmEUlS3_E_EEDaT0_ENUlRKS3_E_clESG_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$136, %rsp
	movq	%rdx, %r13
	movq	%rsi, %r15
	movq	%rdi, %r14
	movq	(%rdx), %rsi
	movq	8(%rdx), %rbx
	leaq	8(%r15), %r12
	movq	8(%r15), %rcx
	testq	%rcx, %rcx
	je	0x10002896b
	movq	%r12, %rax
	nopw	%cs:(%rax,%rax)
	nop
	movq	%rax, %rdx
	cmpq	%rsi, 32(%rcx)
	jb	0x100028924
	ja	0x100028935
	cmpq	%rbx, 40(%rcx)
	movq	%rcx, %rax
	jae	0x10002892b
	addq	$8, %rcx
	movq	%rdx, %rax
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	0x100028910
	jmp	0x100028940
	movq	%rcx, %rax
	movq	(%rcx), %rcx
	testq	%rcx, %rcx
	jne	0x100028910
	cmpq	%r12, %rax
	je	0x10002896b
	cmpq	%rsi, 32(%rax)
	jne	0x100028968
	cmpq	%rbx, 40(%rax)
	jne	0x100028968
	addq	$48, %rax
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	__ZNSt3__14pairINS_6vectorIiNS_9allocatorIiEEEES4_EC1ERKS5_ ## std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > >::pair(std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > const&)
	movq	%r14, %rax
	jmp	0x100028a24
	movq	%rax, %r12
	movq	%r14, -48(%rbp)
	leal	(%rbx,%rsi), %eax
	shlq	$34, %rax
	leaq	(%rax,%rax,4), %r14
	orq	$1, %r14
	leaq	-144(%rbp), %rdi
	movq	%r14, %rdx
	callq	__ZN5bench6detail22generate_sorted_vectorIiZNS0_11uniform_srcEmE3$_0EEDamT0_ ## auto bench::detail::generate_sorted_vector<int, bench::detail::uniform_src(unsigned long)::$_0>(unsigned long, bench::detail::uniform_src(unsigned long)::$_0)
	leaq	-176(%rbp), %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	__ZN5bench6detail22generate_sorted_vectorIiZNS0_11uniform_srcEmE3$_0EEDamT0_ ## auto bench::detail::generate_sorted_vector<int, bench::detail::uniform_src(unsigned long)::$_0>(unsigned long, bench::detail::uniform_src(unsigned long)::$_0)
	movaps	-144(%rbp), %xmm0
	movq	-128(%rbp), %rax
	movaps	-176(%rbp), %xmm1
	movq	-160(%rbp), %rcx
	movq	(%r13), %rdx
	movq	8(%r13), %rsi
	movq	%rsi, -104(%rbp)
	movq	%rdx, -112(%rbp)
	movups	%xmm0, -96(%rbp)
	movq	%rax, -80(%rbp)
	movups	%xmm1, -72(%rbp)
	movq	%rcx, -56(%rbp)
	leaq	-112(%rbp), %rdx
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%rdx, %rcx
	callq	__ZNSt3__16__treeINS_12__value_typeINS_4pairImmEENS2_INS_6vectorIiNS_9allocatorIiEEEES7_EEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS5_IS9_EEE30__emplace_hint_unique_key_argsIS3_JNS2_IKS3_S8_EEEEENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEENS_21__tree_const_iteratorIS9_SN_lEERKT_DpOT0_ ## std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::__map_value_compare<std::__1::pair<unsigned long, unsigned long>, std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::less<std::__1::pair<unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > > > >::__emplace_hint_unique_key_args<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::pair<unsigned long, unsigned long> const, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > > >(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, void*>*, long>, std::__1::pair<unsigned long, unsigned long> const&, std::__1::pair<std::__1::pair<unsigned long, unsigned long> const, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >&&)
	movq	-48(%rbp), %rbx
	addq	$48, %rax
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	__ZNSt3__14pairINS_6vectorIiNS_9allocatorIiEEEES4_EC1ERKS5_ ## std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > >::pair(std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > const&)
	movq	-72(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100028a0f
	movq	%rdi, -64(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-96(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100028a21
	movq	%rdi, -88(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rax
	addq	$136, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%rax, %rbx
	movq	-144(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100028a75
	movq	%rdi, -136(%rbp)
	jmp	0x100028a70
	movq	%rax, %rbx
	movq	-72(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100028a63
	movq	%rdi, -64(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	-96(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x100028a75
	movq	%rdi, -88(%rbp)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	ud2
	nop
__ZNSt3__16__treeINS_12__value_typeINS_4pairImmEENS2_INS_6vectorIiNS_9allocatorIiEEEES7_EEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE:
	testq	%rsi, %rsi
	je	0x100028ad6
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	(%rsi), %rsi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_4pairImmEENS2_INS_6vectorIiNS_9allocatorIiEEEES7_EEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::__map_value_compare<std::__1::pair<unsigned long, unsigned long>, std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::less<std::__1::pair<unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, void*>*)
	movq	8(%rbx), %rsi
	movq	%r14, %rdi
	callq	__ZNSt3__16__treeINS_12__value_typeINS_4pairImmEENS2_INS_6vectorIiNS_9allocatorIiEEEES7_EEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE ## std::__1::__tree<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::__map_value_compare<std::__1::pair<unsigned long, unsigned long>, std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::less<std::__1::pair<unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, void*>*)
	movq	72(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100028ab8
	movq	%rdi, 80(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	48(%rbx), %rdi
	testq	%rdi, %rdi
	je	0x100028aca
	movq	%rdi, 56(%rbx)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	popq	%rbx
	popq	%r14
	popq	%rbp
	jmp	0x10002973a ## symbol stub for: __ZdlPv
	retq
	nopw	(%rax,%rax)
__ZNSt3__14pairINS_6vectorIiNS_9allocatorIiEEEES4_EC1ERKS5_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %r14
	movq	%rdi, %r12
	movabsq	$4611686018427387903, %r13
	movq	$0, 16(%rdi)
	movq	$0, 8(%rdi)
	movq	$0, (%rdi)
	movq	8(%rsi), %rdi
	subq	(%rsi), %rdi
	je	0x100028b6a
	movq	%rdi, %rbx
	sarq	$2, %rbx
	cmpq	%r13, %rbx
	ja	0x100028bed
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r15
	movq	%rax, 8(%r12)
	movq	%rax, (%r12)
	leaq	(%rax,%rbx,4), %rax
	movq	%rax, 16(%r12)
	movq	(%r14), %rsi
	movq	8(%r14), %rbx
	subq	%rsi, %rbx
	testq	%rbx, %rbx
	jle	0x100028b6a
	movq	%r15, %rdi
	movq	%rbx, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	addq	%rbx, %r15
	movq	%r15, 8(%r12)
	movq	$0, 40(%r12)
	movq	$0, 32(%r12)
	movq	$0, 24(%r12)
	movq	32(%r14), %rdi
	subq	24(%r14), %rdi
	je	0x100028bde
	leaq	24(%r12), %r15
	movq	%rdi, %rbx
	sarq	$2, %rbx
	cmpq	%r13, %rbx
	ja	0x100028bf7
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %r13
	movq	%rax, 32(%r12)
	movq	%rax, 24(%r12)
	leaq	(%rax,%rbx,4), %rax
	movq	%rax, 40(%r12)
	movq	24(%r14), %rsi
	movq	32(%r14), %rbx
	subq	%rsi, %rbx
	testq	%rbx, %rbx
	jle	0x100028bde
	movq	%r13, %rdi
	movq	%rbx, %rdx
	callq	0x10002981e ## symbol stub for: _memcpy
	addq	%rbx, %r13
	movq	%r13, 32(%r12)
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	movq	%r12, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	jmp	0x100028bff
	movq	%r15, %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	ud2
	movq	%rax, %r14
	movq	(%r15), %rdi
	testq	%rdi, %rdi
	jne	0x100028c1f
	movq	(%r12), %rdi
	testq	%rdi, %rdi
	jne	0x100028c40
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	ud2
	movq	%rdi, 32(%r12)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	(%r12), %rdi
	testq	%rdi, %rdi
	je	0x100028c15
	jmp	0x100028c40
	movq	%rax, %r14
	movq	(%r12), %rdi
	testq	%rdi, %rdi
	je	0x100028c15
	movq	%rdi, 8(%r12)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	ud2
	nopw	%cs:(%rax,%rax)
	nop
__ZNSt3__16__treeINS_12__value_typeINS_4pairImmEENS2_INS_6vectorIiNS_9allocatorIiEEEES7_EEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS5_IS9_EEE30__emplace_hint_unique_key_argsIS3_JNS2_IKS3_S8_EEEEENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEENS_21__tree_const_iteratorIS9_SN_lEERKT_DpOT0_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	subq	$16, %rsp
	movq	%rcx, %r15
	movq	%rdx, %rax
	movq	%rdi, %r14
	leaq	-40(%rbp), %rdx
	leaq	-48(%rbp), %rcx
	movq	%rax, %r8
	callq	__ZNSt3__16__treeINS_12__value_typeINS_4pairImmEENS2_INS_6vectorIiNS_9allocatorIiEEEES7_EEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS5_IS9_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_SI_EElEERPNS_15__tree_end_nodeISK_EESL_RKT_ ## std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::__map_value_compare<std::__1::pair<unsigned long, unsigned long>, std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::less<std::__1::pair<unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > > > >::__find_equal<std::__1::pair<unsigned long, unsigned long> >(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> > > >, void*>*, long>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, std::__1::pair<unsigned long, unsigned long> const&)
	movq	(%rax), %rbx
	testq	%rbx, %rbx
	jne	0x100028d44
	movq	%rax, %r12
	movl	$96, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	movq	(%r15), %rax
	movq	8(%r15), %rcx
	movq	%rcx, 40(%rbx)
	movq	%rax, 32(%rbx)
	movups	16(%r15), %xmm0
	movups	%xmm0, 48(%rbx)
	movq	32(%r15), %rax
	movq	%rax, 64(%rbx)
	movq	$0, 32(%r15)
	movq	$0, 24(%r15)
	movq	$0, 16(%r15)
	movups	40(%r15), %xmm0
	movups	%xmm0, 72(%rbx)
	movq	56(%r15), %rax
	movq	%rax, 88(%rbx)
	movq	$0, 56(%r15)
	movq	$0, 48(%r15)
	movq	$0, 40(%r15)
	movq	-40(%rbp), %rax
	movq	$0, 8(%rbx)
	movq	$0, (%rbx)
	movq	%rax, 16(%rbx)
	movq	%rbx, (%r12)
	movq	(%r14), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	0x100028d34
	movq	%rax, (%r14)
	movq	(%r12), %rsi
	jmp	0x100028d37
	movq	%rbx, %rsi
	movq	8(%r14), %rdi
	callq	__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ ## void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
	incq	16(%r14)
	movq	%rbx, %rax
	addq	$16, %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nopw	%cs:(%rax,%rax)
	nop
__ZNSt3__16__treeINS_12__value_typeINS_4pairImmEENS2_INS_6vectorIiNS_9allocatorIiEEEES7_EEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS5_IS9_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_SI_EElEERPNS_15__tree_end_nodeISK_EESL_RKT_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	leaq	8(%rdi), %rax
	cmpq	%rsi, %rax
	je	0x100028d89
	movq	(%r8), %r9
	movq	32(%rsi), %r11
	cmpq	%r9, %r11
	ja	0x100028d89
	movq	8(%r8), %r10
	movq	40(%rsi), %rbx
	jb	0x100028df7
	cmpq	%r10, %rbx
	jbe	0x100028df7
	cmpq	%rsi, (%rdi)
	movq	(%rsi), %r9
	je	0x100028dae
	testq	%r9, %r9
	je	0x100028dbb
	movq	%r9, %rcx
	nopl	(%rax)
	movq	%rcx, %rbx
	movq	8(%rcx), %rcx
	testq	%rcx, %rcx
	jne	0x100028da0
	jmp	0x100028dcc
	movq	%rsi, %rbx
	testq	%r9, %r9
	jne	0x100028dea
	jmp	0x100028e8d
	movq	%rsi, %rbx
	nop
	movq	%rbx, %rcx
	movq	16(%rbx), %rbx
	cmpq	%rcx, (%rbx)
	je	0x100028dc0
	movq	(%r8), %r10
	cmpq	%r10, 32(%rbx)
	jb	0x100028de1
	movq	8(%r8), %r8
	ja	0x100028e15
	cmpq	%r8, 40(%rbx)
	jae	0x100028e15
	testq	%r9, %r9
	je	0x100028e8d
	movq	%rbx, (%rdx)
	addq	$8, %rbx
	movq	%rbx, %rax
	popq	%rbx
	popq	%rbp
	retq
	cmpq	%r9, %r11
	jb	0x100028e96
	cmpq	%r10, %rbx
	jb	0x100028e96
	movq	%rsi, (%rdx)
	movq	%rsi, (%rcx)
	movq	%rcx, %rax
	popq	%rbx
	popq	%rbp
	retq
	movq	(%rax), %rsi
	testq	%rsi, %rsi
	je	0x100028ebd
	addq	$8, %rdi
	movq	%rdi, %rax
	movq	32(%rsi), %rcx
	cmpq	%r10, %rcx
	ja	0x100028e57
	jmp	0x100028e4c
	nopw	%cs:(%rax,%rax)
	nopl	(%rax)
	movq	%rcx, %rsi
	movq	32(%rsi), %rcx
	cmpq	%r10, %rcx
	ja	0x100028e57
	movq	40(%rsi), %rdi
	jb	0x100028e70
	cmpq	%r8, %rdi
	jbe	0x100028e70
	movq	(%rsi), %rcx
	movq	%rsi, %rax
	testq	%rcx, %rcx
	jne	0x100028e40
	jmp	0x100028e8d
	nopw	%cs:(%rax,%rax)
	nop
	cmpq	%r10, %rcx
	jb	0x100028e7a
	cmpq	%r8, %rdi
	jae	0x100028e87
	leaq	8(%rsi), %rax
	movq	8(%rsi), %rcx
	testq	%rcx, %rcx
	jne	0x100028e40
	movq	%rsi, (%rdx)
	popq	%rbx
	popq	%rbp
	retq
	movq	%rsi, (%rdx)
	movq	%rsi, %rax
	popq	%rbx
	popq	%rbp
	retq
	movq	8(%rsi), %r8
	testq	%r8, %r8
	je	0x100028ec3
	movq	%r8, %rdi
	nopw	%cs:(%rax,%rax)
	nopl	(%rax)
	movq	%rdi, %rcx
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	0x100028eb0
	jmp	0x100028ee0
	movq	%rax, (%rdx)
	popq	%rbx
	popq	%rbp
	retq
	movq	16(%rsi), %rcx
	cmpq	%rsi, (%rcx)
	je	0x100028ee0
	leaq	16(%rsi), %rbx
	movq	(%rbx), %rdi
	movq	16(%rdi), %rcx
	cmpq	%rdi, (%rcx)
	leaq	16(%rdi), %rbx
	jne	0x100028ed0
	cmpq	%rax, %rcx
	je	0x100028ef3
	cmpq	%r9, 32(%rcx)
	ja	0x100028ef3
	jb	0x100028f0e
	cmpq	%r10, 40(%rcx)
	jbe	0x100028f0e
	testq	%r8, %r8
	je	0x100028f01
	movq	%rcx, (%rdx)
	movq	%rcx, %rax
	popq	%rbx
	popq	%rbp
	retq
	movq	%rsi, (%rdx)
	addq	$8, %rsi
	movq	%rsi, %rax
	popq	%rbx
	popq	%rbp
	retq
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	jne	0x100028f1f
	movq	%rax, (%rdx)
	popq	%rbx
	popq	%rbp
	retq
	movq	%rsi, %rcx
	movq	32(%rcx), %rsi
	cmpq	%r9, %rsi
	ja	0x100028f33
	movq	40(%rcx), %rdi
	jb	0x100028f40
	cmpq	%r10, %rdi
	jbe	0x100028f40
	movq	(%rcx), %rsi
	movq	%rcx, %rax
	testq	%rsi, %rsi
	jne	0x100028f1c
	jmp	0x100028ef8
	cmpq	%r9, %rsi
	jb	0x100028f4a
	cmpq	%r10, %rdi
	jae	0x100028f57
	leaq	8(%rcx), %rax
	movq	8(%rcx), %rsi
	testq	%rsi, %rsi
	jne	0x100028f1c
	movq	%rcx, (%rdx)
	popq	%rbx
	popq	%rbp
	retq
	nopl	(%rax)
__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_:
	pushq	%rbp
	movq	%rsp, %rbp
	cmpq	%rdi, %rsi
	sete	24(%rsi)
	je	0x100028fce
	nopl	(%rax)
	movq	16(%rsi), %rdx
	cmpb	$0, 24(%rdx)
	jne	0x100028fce
	leaq	24(%rdx), %r8
	movq	16(%rdx), %rax
	movq	(%rax), %rcx
	cmpq	%rdx, %rcx
	je	0x100028fa0
	testq	%rcx, %rcx
	je	0x100028fd0
	cmpb	$0, 24(%rcx)
	je	0x100028fb7
	jmp	0x100028fd0
	nopw	(%rax,%rax)
	movq	8(%rax), %rcx
	testq	%rcx, %rcx
	je	0x10002904e
	cmpb	$0, 24(%rcx)
	jne	0x10002904e
	addq	$24, %rcx
	movb	$1, (%r8)
	movq	%rax, %rsi
	cmpq	%rdi, %rax
	sete	24(%rax)
	movb	$1, (%rcx)
	jne	0x100028f70
	popq	%rbp
	retq
	cmpq	%rsi, (%rdx)
	jne	0x100029010
	movq	8(%rsi), %rcx
	movq	%rcx, (%rdx)
	testq	%rcx, %rcx
	je	0x100028fe9
	movq	%rdx, 16(%rcx)
	movq	16(%rdx), %rax
	movq	%rax, 16(%rsi)
	movq	16(%rdx), %rax
	xorl	%ecx, %ecx
	cmpq	%rdx, (%rax)
	setne	%cl
	movq	%rsi, (%rax,%rcx,8)
	movq	%rdx, 8(%rsi)
	movq	%rsi, 16(%rdx)
	movq	16(%rsi), %rax
	addq	$24, %rsi
	movq	%rsi, %r8
	movb	$1, (%r8)
	movb	$0, 24(%rax)
	movq	8(%rax), %rcx
	movq	(%rcx), %rdx
	movq	%rdx, 8(%rax)
	testq	%rdx, %rdx
	je	0x10002902c
	movq	%rax, 16(%rdx)
	movq	16(%rax), %rdx
	movq	%rdx, 16(%rcx)
	movq	16(%rax), %rdx
	xorl	%esi, %esi
	cmpq	%rax, (%rdx)
	setne	%sil
	movq	%rcx, (%rdx,%rsi,8)
	movq	%rax, (%rcx)
	movq	%rcx, 16(%rax)
	popq	%rbp
	retq
	cmpq	%rsi, (%rdx)
	je	0x10002908e
	movq	8(%rdx), %r8
	movq	(%r8), %rcx
	movq	%rcx, 8(%rdx)
	testq	%rcx, %rcx
	je	0x10002906b
	movq	%rdx, 16(%rcx)
	movq	16(%rdx), %rax
	movq	%rax, 16(%r8)
	movq	16(%rdx), %rax
	xorl	%ecx, %ecx
	cmpq	%rdx, (%rax)
	setne	%cl
	movq	%r8, (%rax,%rcx,8)
	movq	%rdx, (%r8)
	movq	%r8, 16(%rdx)
	movq	16(%r8), %rax
	addq	$24, %r8
	movb	$1, (%r8)
	movb	$0, 24(%rax)
	movq	(%rax), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, (%rax)
	testq	%rdx, %rdx
	je	0x1000290a9
	movq	%rax, 16(%rdx)
	movq	16(%rax), %rdx
	movq	%rdx, 16(%rcx)
	movq	16(%rax), %rdx
	xorl	%esi, %esi
	cmpq	%rax, (%rdx)
	setne	%sil
	movq	%rcx, (%rdx,%rsi,8)
	movq	%rax, 8(%rcx)
	movq	%rcx, 16(%rax)
	popq	%rbp
	retq
	nopl	(%rax)
__ZN5bench6detail22generate_sorted_vectorIiZNS0_11uniform_srcEmE3$_0EEDamT0_:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	movq	%rdi, %r14
	movq	%rdx, -96(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -80(%rbp)
	movq	$0, -64(%rbp)
	testq	%rsi, %rsi
	je	0x10002915b
	movq	%rsi, %r15
	movq	%rsi, %rax
	shrq	$62, %rax
	jne	0x100029258
	leaq	(,%r15,4), %r12
	movq	%r12, %rdi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	leaq	-72(%rbp), %r13
	movq	%rax, -80(%rbp)
	leaq	(%rax,%r15,4), %r15
	movq	%r15, -64(%rbp)
	movq	%rax, %rdi
	movq	%r12, %rsi
	callq	0x10002974c ## symbol stub for: ___bzero
	movq	%r15, -72(%rbp)
	testq	%r12, %r12
	je	0x100029223
	movq	%r13, -88(%rbp)
	leaq	__ZZN5bench6detail16static_generatorEvE1g(%rip), %r13 ## bench::detail::static_generator()::g
	leaq	-96(%rbp), %r12
	jmp	0x1000291f0
	leaq	-72(%rbp), %r13
	xorl	%r15d, %r15d
	xorl	%ebx, %ebx
	jmp	0x100029223
	leaq	__ZGVZN5bench6detail16static_generatorEvE1g(%rip), %rdi ## guard variable for bench::detail::static_generator()::g
	callq	0x100029776 ## symbol stub for: ___cxa_guard_acquire
	testl	%eax, %eax
	je	0x1000291fe
	movl	$5489, 30273(%rip)
	movl	$5489, %edx
	movl	$2, %eax
	movl	$1, %ecx
	jmp	0x1000291ba
	leaq	1(%rcx), %rdx
	movl	%esi, %edi
	shrl	$30, %edi
	xorl	%esi, %edi
	imull	$1812433253, %edi, %esi
	addl	%esi, %edx
	addl	%eax, %esi
	movl	%esi, (%r13,%rax,4)
	addq	$2, %rcx
	addq	$2, %rax
	movl	%edx, %esi
	shrl	$30, %esi
	xorl	%edx, %esi
	imull	$1812433253, %esi, %esi
	addl	%ecx, %esi
	movl	%esi, -4(%r13,%rax,4)
	cmpq	$624, %rax
	jne	0x100029198
	movq	$0, 32679(%rip)
	leaq	__ZGVZN5bench6detail16static_generatorEvE1g(%rip), %rdi ## guard variable for bench::detail::static_generator()::g
	callq	0x10002977c ## symbol stub for: ___cxa_guard_release
	jmp	0x1000291fe
	nop
	movb	__ZGVZN5bench6detail16static_generatorEvE1g(%rip), %al ## guard variable for bench::detail::static_generator()::g
	testb	%al, %al
	je	0x100029169
	movq	%r12, %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	__ZNSt3__124uniform_int_distributionIiEclINS_23mersenne_twister_engineIjLm32ELm624ELm397ELm31ELj2567483615ELm11ELj4294967295ELm7ELj2636928640ELm15ELj4022730752ELm18ELj1812433253EEEEEiRT_RKNS1_10param_typeE ## int std::__1::uniform_int_distribution<int>::operator()<std::__1::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u> >(std::__1::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>&, std::__1::uniform_int_distribution<int>::param_type const&)
	movl	%eax, (%rbx)
	addq	$4, %rbx
	cmpq	%r15, %rbx
	jne	0x1000291f0
	movq	-80(%rbp), %rbx
	movq	-72(%rbp), %r15
	leaq	-72(%rbp), %r13
	leaq	-48(%rbp), %rdx
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	0x1000296c8 ## symbol stub for: __ZNSt3__16__sortIRNS_6__lessIiiEEPiEEvT0_S5_T_
	movq	-80(%rbp), %rax
	movq	%rax, (%r14)
	movq	(%r13), %rax
	movq	%rax, 8(%r14)
	movq	-64(%rbp), %rax
	movq	%rax, 16(%r14)
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	leaq	-80(%rbp), %rdi
	callq	0x10002959c ## symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	ud2
	movq	%rax, %rbx
	movq	-80(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10002929f
	movq	%rdi, -72(%rbp)
	jmp	0x10002929a
	movq	%r13, -88(%rbp)
	movq	%rax, %rbx
	movq	-80(%rbp), %rdi
	testq	%rdi, %rdi
	jne	0x100029293
	jmp	0x10002929f
	movq	%rax, %rbx
	movq	-80(%rbp), %rdi
	testq	%rdi, %rdi
	je	0x10002929f
	movq	-88(%rbp), %rax
	movq	%rdi, (%rax)
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%rbx, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	ud2
	nopl	(%rax)
__ZNSt3__124uniform_int_distributionIiEclINS_23mersenne_twister_engineIjLm32ELm624ELm397ELm31ELj2567483615ELm11ELj4294967295ELm7ELj2636928640ELm15ELj4022730752ELm18ELj1812433253EEEEEiRT_RKNS1_10param_typeE:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	movl	(%rdx), %eax
	movl	4(%rdx), %r10d
	subl	%eax, %r10d
	je	0x1000294a9
	incl	%r10d
	je	0x100029400
	movq	%rdx, %r8
	bsrl	%r10d, %eax
	xorl	$31, %eax
	movl	$32, %r9d
	subq	%rax, %r9
	movl	$33, %ecx
	subl	%r9d, %ecx
	movl	%r10d, %eax
	shll	%cl, %eax
	shrl	%cl, %eax
	cmpl	$1, %eax
	sbbq	$0, %r9
	movq	%r9, %rbx
	shrq	$5, %rbx
	movl	%r9d, %eax
	andl	$31, %eax
	cmpq	$1, %rax
	sbbq	$-1, %rbx
	xorl	%r11d, %r11d
	xorl	%edx, %edx
	movq	%r9, %rax
	divq	%rbx
	movl	$32, %ecx
	subl	%eax, %ecx
	movl	$4294967295, %r14d
	shrl	%cl, %r14d
	cmpq	%r9, %rbx
	cmoval	%r11d, %r14d
	movq	2496(%rsi), %r15
	movabsq	$945986875574848801, %r11
	movl	$2147483648, %r9d
	nopw	(%rax,%rax)
	movq	%r15, %r12
	leaq	1(%r15), %rax
	shrq	$4, %rax
	mulq	%r11
	shrq	%rdx
	imulq	$624, %rdx, %rax
	negq	%rax
	leaq	1(%r15,%rax), %r15
	movl	(%rsi,%r12,4), %edi
	andl	%r9d, %edi
	movl	(%rsi,%r15,4), %ebx
	movl	%ebx, %ecx
	andl	$2147483646, %ecx
	leaq	397(%r12), %rax
	shrq	$4, %rax
	mulq	%r11
	orl	%edi, %ecx
	shrq	%rdx
	imulq	$624, %rdx, %rax
	negq	%rax
	leaq	397(%r12,%rax), %rax
	shrl	%ecx
	andl	$1, %ebx
	imull	$2567483615, %ebx, %edx
	xorl	(%rsi,%rax,4), %edx
	xorl	%ecx, %edx
	movl	%edx, (%rsi,%r12,4)
	movl	%edx, %eax
	shrl	$11, %eax
	xorl	%edx, %eax
	movl	%eax, %ecx
	shll	$7, %ecx
	andl	$2636928640, %ecx
	xorl	%eax, %ecx
	movl	%ecx, %edx
	shll	$15, %edx
	andl	$4022730752, %edx
	xorl	%ecx, %edx
	movl	%edx, %eax
	shrl	$18, %eax
	xorl	%edx, %eax
	andl	%r14d, %eax
	cmpl	%r10d, %eax
	jae	0x100029350
	movq	%r15, 2496(%rsi)
	addl	(%r8), %eax
	jmp	0x1000294a9
	movq	2496(%rsi), %rcx
	leaq	1(%rcx), %rax
	shrq	$4, %rax
	movabsq	$945986875574848801, %r8
	mulq	%r8
	shrq	%rdx
	imulq	$624, %rdx, %rax
	negq	%rax
	leaq	1(%rcx,%rax), %r9
	movl	$2147483648, %eax
	andl	(%rsi,%rcx,4), %eax
	movl	(%rsi,%r9,4), %edi
	movl	%edi, %ebx
	andl	$2147483646, %ebx
	orl	%eax, %ebx
	leaq	397(%rcx), %rax
	shrq	$4, %rax
	mulq	%r8
	shrq	%rdx
	imulq	$624, %rdx, %rax
	negq	%rax
	leaq	397(%rcx,%rax), %rax
	shrl	%ebx
	andl	$1, %edi
	imull	$2567483615, %edi, %edx
	xorl	(%rsi,%rax,4), %edx
	xorl	%ebx, %edx
	movl	%edx, (%rsi,%rcx,4)
	movl	%edx, %eax
	shrl	$11, %eax
	xorl	%edx, %eax
	movq	%r9, 2496(%rsi)
	movl	%eax, %ecx
	shll	$7, %ecx
	andl	$2636928640, %ecx
	xorl	%eax, %ecx
	movl	%ecx, %edx
	shll	$15, %edx
	andl	$4022730752, %edx
	xorl	%ecx, %edx
	movl	%edx, %eax
	shrl	$18, %eax
	xorl	%edx, %eax
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
__GLOBAL__sub_I_code_alignment.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rbx
	callq	__ZN9benchmark8internal17InitializeStreamsEv ## benchmark::internal::InitializeStreams()
	movl	$192, %edi
	callq	0x100029746 ## symbol stub for: __Znwm
	movq	%rax, %rbx
	leaq	20895(%rip), %rsi ## literal pool for: "test_benchmark"
	movq	%rax, %rdi
	callq	__ZN9benchmark8internal9BenchmarkC2EPKc ## benchmark::internal::Benchmark::Benchmark(char const*)
	leaq	__ZTVN9benchmark8internal17FunctionBenchmarkE(%rip), %rax ## vtable for benchmark::internal::FunctionBenchmark
	addq	$16, %rax
	movq	%rax, (%rbx)
	leaq	__Z14test_benchmarkRN9benchmark5StateE(%rip), %rax ## test_benchmark(benchmark::State&)
	movq	%rax, 184(%rbx)
	movq	%rbx, %rdi
	callq	__ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE ## benchmark::internal::RegisterBenchmarkInternal(benchmark::internal::Benchmark*)
	xorl	%esi, %esi
	movq	%rax, %rdi
	callq	__ZN9benchmark8internal9Benchmark3ArgEx ## benchmark::internal::Benchmark::Arg(long long)
	movq	%rax, __ZL26_benchmark_2test_benchmark(%rip) ## _benchmark_2test_benchmark
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	0x10002973a ## symbol stub for: __ZdlPv
	movq	%r14, %rdi
	callq	0x10002958a ## symbol stub for: __Unwind_Resume
	ud2
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
_main:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rbx
	pushq	%rax
	movq	%rsi, %rbx
	movl	%edi, -12(%rbp)
	leaq	-12(%rbp), %rdi
	callq	__ZN9benchmark10InitializeEPiPPc ## benchmark::Initialize(int*, char**)
	movl	-12(%rbp), %edi
	movq	%rbx, %rsi
	callq	__ZN9benchmark27ReportUnrecognizedArgumentsEiPPc ## benchmark::ReportUnrecognizedArguments(int, char**)
	movl	%eax, %ecx
	movl	$1, %eax
	testb	%cl, %cl
	jne	0x100029572
	callq	__ZN9benchmark22RunSpecifiedBenchmarksEv ## benchmark::RunSpecifiedBenchmarks()
	xorl	%eax, %eax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
	nop
	nop
	nop
	nop
	nop
	nop
	nop
__GLOBAL__sub_I_google_benchmark_main.cc:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	jmp	__ZN9benchmark8internal17InitializeStreamsEv ## benchmark::internal::InitializeStreams()

{
  "apply_rearrangment": {
    "apply_rearrangment": {
      "display_name" : "algo::apply_rearrangment",
      "color": "rgb(50, 50, 0)",
      "dash": "dashdot"
    },
    "apply_rearrangment_move_and_back": {
      "display_name" : "algo::apply_rearrangment_move_and_back",
      "color": "rgb(128, 0, 128)",
      "dash": "dot"
    }
  },
  "lower_bound": {
    "algo_lower_bound_linear": {
      "display_name" : "algo::lower_bound_linear",
      "color": "rgb(50, 50, 0)",
      "dash": "dashdot"
    },
    "algo_lower_bound_biased": {
      "display_name" : "algo::lower_bound_biased",
      "color": "rgb(128, 0, 128)",
      "dash": "dot"
    },
    "algo_lower_bound": {
      "display_name" : "algo::lower_bound",
      "color": "rgb(55, 128, 191)",
      "dash": "solid"
    },
    "algo_lower_bound_biased_expensive_cmp": {
      "display_name" : "algo::lower_bound_biased_expensive_cmp",
      "color": "rgb(255, 0, 0)",
      "dash": "dash"
    },
    "std_lower_bound": {
      "display_name" : "std::lower_bound",
      "color": "rgb(000, 0, 255)",
      "dash": "solid"
    }
  },
  "merge/set_union": {
    "algo_merge": {
      "display_name" : "algo::merge",
      "color": "rgb(50, 50, 0)",
      "dash": "solid"
    },
    "algo_merge_biased_first": {
      "display_name" : "algo::merge_biased_first",
      "color": "rgb(128, 0, 128)",
      "dash": "dot"
    },
    "algo_merge_biased_second": {
      "display_name" : "algo::merge_biased_second",
      "color": "rgb(55, 128, 255)",
      "dash": "dashdot"
    },
    "algo_merge_expensive_cmp": {
      "display_name" : "algo::merge_expensive_cmp",
      "color": "rgb(255, 0, 0)",
      "dash": "dash"
    },
    "std_merge": {
      "display_name" : "std::merge",
      "color": "rgb(000, 0, 255)",
      "dash": "solid"
    }
  },
  "sort": {
    "algo_stable_sort_sufficient_allocation": {
      "display_name" : "algo::stable_sort_sufficient_allocation",
      "color": "rgb(50, 50, 0)",
      "dash": "solid"
    },
    "std_sort": {
      "display_name" : "std::sort",
      "color": "rgb(128, 0, 128)",
      "dash": "dot"
    },
    "std_stable_sort": {
      "display_name" : "std::stable_sort",
      "color": "rgb(55, 128, 255)",
      "dash": "dashdot"
    },
    "algo_merge_expensive_cmp": {
      "display_name" : "algo::merge_expensive_cmp",
      "color": "rgb(255, 0, 0)",
      "dash": "dash"
    },
    "std_merge": {
      "display_name" : "std::merge",
      "color": "rgb(000, 0, 255)",
      "dash": "solid"
    }
  }
}
